<?xml version="1.0" ?>

<launch>
	
<!-- 

// === IN GENERAL

this command allows to explicitly declare whether to run or not each component
roslaunch robocluedo_mission_manager run_components.launch launch_robot:=true launch_armor:=true launch_rosplan:=true launch_motion_controllers:=true launch_oracle:=true launch_aruco:=true launch_mission_manager_components:=true launch_mission_manager:=false 2>/dev/null

in case you just want to run one component, consider to use init
roslaunch robocluedo_mission_manager run_components.launch init:=false launch_armor:=true

the same init parameter can be used to launch all the components except for one among them:
roslaunch robocluedo_mission_manager run_components.launch init:=true launch_armor:=false

NOTE: ALL THE PARAMETERS ARE INITIALIZED WITH TRUE, hence the last case can be written also in this way, without the 'init' parameter
roslaunch robocluedo_mission_manager run_components.launch launch_armor:=false

// === ROBOT ENVIRONMENT

here are the parameters with their init values:
roslaunch robocluedo_mission_manager run_components.launch init:=false launch_robot:=true robot_env_type:=gazebo 
roslaunch robocluedo_mission_manager run_components.launch init:=false launch_robot:=true world_name:=assignment3.world
roslaunch robocluedo_mission_manager run_components.launch init:=false launch_robot:=true robot_env_type:=gazebo robot_nav_type:=gmapping 

-->

<arg name="init" default="true" />

<arg name="launch_robot" default="$(arg init)" />
	<arg name="robot_env_type" default="gazebo" /> <!-- gazebo, rviz, gazeborviz -->
	<arg name="robot_nav_type" default="gmapping" /> <!-- gmapping, amcl -->
	<arg name="world_name" default="assignment3.world" />
<arg name="launch_armor" default="$(arg init)" />
<arg name="launch_rosplan" default="$(arg init)" />
<arg name="launch_motion_controllers" default="$(arg init)" />
<arg name="launch_oracle" default="$(arg init)" />
<arg name="launch_aruco" default="$(arg init)" />
<arg name="launch_mission_manager_components" default="$(arg init)" />
<arg name="launch_mission_manager" default="$(arg init)" />

<!-- RUN THE ROBOT MODEL and the simulation environment -->
<include file="$(find robocluedo_robot_hunter)/launch/run2.launch" if="$(arg launch_robot)" >
	<arg name="sim_type" value="$(arg robot_env_type)" />
	
	<arg name="world_name" value="$(arg world_name)" />
	<arg name="rviz_config_file" value="sim_nav_stack_markers.rviz" />
	
	<arg name="launch_nav_stack" default="$(eval robot_nav_type == 'gmapping')" />
	<arg name="launch_amcl" default="$(eval robot_nav_type == 'amcl')" />
</include>

<!-- RUN THE ARMOR ONTOLOGY -->
<include file="$(find robocluedo_armor)/launch/run.launch" if="$(arg launch_armor)" />

<!-- RUN THE ARTIFICIAL INTELLIGENCE of the robot -->
<include file="$(find robocluedo_rosplan)/launch/run.launch" if="$(arg launch_rosplan)" />

<!-- RUN THE CONTROLLERS and the systems for navigation and manipulation -->
<include file="$(find robocluedo_movement_controller)/launch/run.launch" if="$(arg launch_motion_controllers)" > 
	<arg name="launch_nav_controller" value="true" />
</include>

<!-- RUN THE ORACLE and the marker publisher -->
<include file="$(find exp_assignment3)/launch/run.launch" if="$(arg launch_oracle)" />

<!-- RUN THE ARUCO UNITS -->
<include file="$(find robocluedo_vision)/launch/run.launch" if="$(arg launch_aruco)" >
	<arg name="detection" value="true" />
	<arg name="decoding" value="true" />
</include>

<!-- RUN THE MISSION MANAGER UNITS --> 
<node pkg="robocluedo_mission_manager" name="navigation_unit" type="navigation_unit" output="screen" required="true" if="$(arg launch_mission_manager_components)" />
<node pkg="robocluedo_mission_manager" name="manipulation_unit" type="manipulation_unit" output="screen" required="true" if="$(arg launch_mission_manager_components)" />

<!-- RUN THE MISSION MANAGER if requested -->
<node pkg="robocluedo_mission_manager" name="mission_manager" type="mission_manager" output="screen" required="true" if="$(arg launch_mission_manager)" />

</launch>
