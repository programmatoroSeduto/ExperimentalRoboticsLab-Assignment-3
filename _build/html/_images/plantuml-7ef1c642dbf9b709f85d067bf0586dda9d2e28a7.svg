<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="786px" preserveAspectRatio="none" style="width:1337px;height:786px;background:#FFFFFF;" version="1.1" viewBox="0 0 1337 786" width="1337px" zoomAndPan="magnify"><defs/><g><!--MD5=[e4496b15dd90759367543683a167e801]
cluster NODE_RCL_ARMOR--><g id="cluster_NODE_RCL_ARMOR"><rect height="648" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;fill:none;" width="674" x="600.5" y="132"/><rect height="10" style="stroke:#181818;stroke-width:1.0;fill:none;" width="15" x="1254.5" y="137"/><rect height="2" style="stroke:#181818;stroke-width:1.0;fill:none;" width="4" x="1252.5" y="139"/><rect height="2" style="stroke:#181818;stroke-width:1.0;fill:none;" width="4" x="1252.5" y="143"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="130" x="872.5" y="157.9951">aRMOR Interface</text></g><!--MD5=[5616d5e5474d0ac0409a1255e923756c]
class NODE_RCL_ARMOR.ARMOR_TOOLS--><g id="elem_NODE_RCL_ARMOR.ARMOR_TOOLS"><rect codeLine="4" fill="#F1F1F1" height="276.1563" id="NODE_RCL_ARMOR.ARMOR_TOOLS" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="435" x="724" y="175"/><ellipse cx="890.75" cy="191" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M893.7188,196.6406 Q893.1406,196.9375 892.5,197.0859 Q891.8594,197.2344 891.1563,197.2344 Q888.6563,197.2344 887.3359,195.5859 Q886.0156,193.9375 886.0156,190.8125 Q886.0156,187.6875 887.3359,186.0313 Q888.6563,184.375 891.1563,184.375 Q891.8594,184.375 892.5078,184.5313 Q893.1563,184.6875 893.7188,184.9844 L893.7188,187.7031 Q893.0938,187.125 892.5,186.8516 Q891.9063,186.5781 891.2813,186.5781 Q889.9375,186.5781 889.25,187.6484 Q888.5625,188.7188 888.5625,190.8125 Q888.5625,192.9063 889.25,193.9766 Q889.9375,195.0469 891.2813,195.0469 Q891.9063,195.0469 892.5,194.7734 Q893.0938,194.5 893.7188,193.9219 L893.7188,196.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="911.25" y="195.8467">aRMOR Tools</text><line style="stroke:#181818;stroke-width:0.5;" x1="725" x2="1158" y1="207" y2="207"/><line style="stroke:#181818;stroke-width:0.5;" x1="725" x2="1158" y1="215" y2="215"/><ellipse cx="735" cy="226" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="744" y="231.9951">bool ConnectAndLoad( ... )</text><ellipse cx="735" cy="242.2969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="744" y="248.292">bool LoadOntology( ... )</text><ellipse cx="735" cy="258.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="409" x="744" y="264.5889">bool Connect( float timeout = ARMOR_DEFAULT_TIMEOUT )</text><ellipse cx="735" cy="274.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="744" y="280.8857">bool Success( )</text><ellipse cx="735" cy="291.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="744" y="297.1826">bool LoadedOntology( )</text><ellipse cx="735" cy="307.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="744" y="313.4795">bool TestInterface( )</text><ellipse cx="735" cy="323.7813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="744" y="329.7764">bool SendCommand( ... )</text><ellipse cx="735" cy="340.0781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="314" x="744" y="346.0732">armor_msgs::ArmorDirective GetRequest( ... )</text><ellipse cx="735" cy="356.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="359" x="744" y="362.3701">bool CallArmor( armor_msgs::ArmorDirective&amp; data )</text><ellipse cx="735" cy="372.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="744" y="378.667">bool UpdateOntology( )</text><ellipse cx="735" cy="388.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="253" x="744" y="394.9639">bool SaveOntology( std::string path )</text><ellipse cx="735" cy="405.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="744" y="411.2607">void SwitchDebugMode( )</text><ellipse cx="735" cy="421.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="744" y="427.5576">int GetLastErrorCode( )</text><ellipse cx="735" cy="437.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="254" x="744" y="443.8545">std::string GetLastErrorDescription( )</text></g><!--MD5=[9156ae9bbd67c0d66877b244e40367cf]
class NODE_RCL_ARMOR.ARMOR_CLUEDO--><g id="elem_NODE_RCL_ARMOR.ARMOR_CLUEDO"><rect codeLine="21" fill="#F1F1F1" height="243.5625" id="NODE_RCL_ARMOR.ARMOR_CLUEDO" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="617" x="633" y="512"/><ellipse cx="883.25" cy="528" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M886.2188,533.6406 Q885.6406,533.9375 885,534.0859 Q884.3594,534.2344 883.6563,534.2344 Q881.1563,534.2344 879.8359,532.5859 Q878.5156,530.9375 878.5156,527.8125 Q878.5156,524.6875 879.8359,523.0313 Q881.1563,521.375 883.6563,521.375 Q884.3594,521.375 885.0078,521.5313 Q885.6563,521.6875 886.2188,521.9844 L886.2188,524.7031 Q885.5938,524.125 885,523.8516 Q884.4063,523.5781 883.7813,523.5781 Q882.4375,523.5781 881.75,524.6484 Q881.0625,525.7188 881.0625,527.8125 Q881.0625,529.9063 881.75,530.9766 Q882.4375,532.0469 883.7813,532.0469 Q884.4063,532.0469 885,531.7734 Q885.5938,531.5 886.2188,530.9219 L886.2188,533.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="903.75" y="532.8467">aRMOR CLuedo</text><line style="stroke:#181818;stroke-width:0.5;" x1="634" x2="1249" y1="544" y2="544"/><line style="stroke:#181818;stroke-width:0.5;" x1="634" x2="1249" y1="552" y2="552"/><ellipse cx="644" cy="563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="238" x="653" y="568.9951">bool Init( std::string ontologyPath )</text><ellipse cx="644" cy="579.2969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="591" x="653" y="585.292">bool AddIndiv( std::string indivname, std::string classname, bool makeDisjoint = true )</text><ellipse cx="644" cy="595.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="523" x="653" y="601.5889">std::vector&lt;std::string&gt; GetClassOfIndiv( std::string indivname, bool deep )</text><ellipse cx="644" cy="611.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="449" x="653" y="617.8857">std::vector&lt;std::string&gt; GetIndivOfClass( std::string classname )</text><ellipse cx="644" cy="628.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="653" y="634.1826">bool ExistsIndiv( std::string indivname )</text><ellipse cx="644" cy="644.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="538" x="653" y="650.4795">bool SetObjectProperty( std::string prop, std::string Aelem, std::string Belem )</text><ellipse cx="644" cy="660.7813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="570" x="653" y="666.7764">std::vector&lt;std::string&gt; GetValuedOfIndiv( std::string prop, std::string indivname )</text><ellipse cx="644" cy="677.0781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="367" x="653" y="683.0732">std::vector&lt;std::string&gt; FindCompleteHypotheses( )</text><ellipse cx="644" cy="693.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="385" x="653" y="699.3701">std::vector&lt;std::string&gt; FindInconsistentHypotheses( )</text><ellipse cx="644" cy="709.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="312" x="653" y="715.667">bool RemoveHypothesis( std::string hypTag )</text><ellipse cx="644" cy="725.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="653" y="731.9639">std::string FilterValue( std::string raw )</text><ellipse cx="644" cy="742.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="505" x="653" y="748.2607">std::vector&lt;std::string&gt; FilterVector( std::vector&lt;std::string&gt;&amp; itemlist )</text></g><!--MD5=[bd6f0174d6c8cf3399456c44a5f04e4b]
entity SRV_ARMOR_DIRECTIVE--><g id="elem_SRV_ARMOR_DIRECTIVE"><ellipse cx="496.5" cy="313" fill="#F1F1F1" rx="8" ry="8" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="427" y="342.9951">/armor_interface_srv</text></g><!--MD5=[ff6769c984590f49ebaa14c52fb754a5]
entity SRV_ARMOR_ADD--><g id="elem_SRV_ARMOR_ADD"><ellipse cx="87.5" cy="14" fill="#F1F1F1" rx="8" ry="8" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="6" y="43.9951">/cluedo_armor/add_hint</text></g><!--MD5=[9a50e2d0d5368a0a1b0a68b01337ec49]
entity SRV_ARMOR_FIND--><g id="elem_SRV_ARMOR_FIND"><ellipse cx="395.5" cy="14" fill="#F1F1F1" rx="8" ry="8" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="225" x="283" y="43.9951">/cluedo_armor/find_consistent_h</text></g><!--MD5=[3b3b20904a042ad183e8b7df1d6262e8]
entity SRV_ARMOR_DEL--><g id="elem_SRV_ARMOR_DEL"><ellipse cx="822.5" cy="14" fill="#F1F1F1" rx="8" ry="8" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="707.5" y="43.9951">/cluedo_armor/wrong_hypothesis</text></g><!--MD5=[780a75eaa14ca967fc45d84d76f7efe8]
entity SRV_ARMOR_BACKUP--><g id="elem_SRV_ARMOR_BACKUP"><ellipse cx="1198.5" cy="14" fill="#F1F1F1" rx="8" ry="8" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="1121" y="43.9951">/cluedo_armor/backup</text></g><!--MD5=[2af3f33ea83f687b4f014737a57df37f]
link NODE_RCL_ARMOR.ARMOR_TOOLS to NODE_RCL_ARMOR.ARMOR_CLUEDO--><g id="link_NODE_RCL_ARMOR.ARMOR_TOOLS_NODE_RCL_ARMOR.ARMOR_CLUEDO"><path codeLine="36" d="M941.5,451.14 C941.5,464.48 941.5,478.04 941.5,491.42 " fill="none" id="NODE_RCL_ARMOR.ARMOR_TOOLS-to-NODE_RCL_ARMOR.ARMOR_CLUEDO" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="948.5,491.56,941.5,511.56,934.5,491.56,948.5,491.56" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[43d1468092c39fa55b840c9fa3c55196]
link SRV_ARMOR_DIRECTIVE to NODE_RCL_ARMOR.ARMOR_CLUEDO--><g id="link_SRV_ARMOR_DIRECTIVE_NODE_RCL_ARMOR.ARMOR_CLUEDO"><path codeLine="41" d="M500.41,322.11 C511.76,344.99 546.87,410.97 592.5,451 C616.39,471.96 643.12,491.31 670.87,508.95 " fill="none" id="SRV_ARMOR_DIRECTIVE-to-NODE_RCL_ARMOR.ARMOR_CLUEDO" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="675.33,511.76,669.8576,503.5714,671.1029,509.0895,665.5848,510.3348,675.33,511.76" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="10" x="648.8056" y="500.9382">cl</text></g><!--MD5=[3721c989f9d2d191e6db0bf5e96bb979]
reverse link SRV_ARMOR_ADD to NODE_RCL_ARMOR--><g id="link_SRV_ARMOR_ADD_NODE_RCL_ARMOR"><path codeLine="44" d="M85.49,28.14 C83.17,48.8 82.25,88.5 105.5,108 C126.19,125.36 571.75,97.59 591.5,116 C593.4675,117.8344 595.2573,120.1849 596.8837,122.9812 C597.6969,124.3793 598.4693,125.8889 599.2027,127.5011 C599.5694,128.3071 599.9263,129.1389 600.2737,129.9952 C600.4474,130.4233 600.6187,130.8576 600.7877,131.2979 C600.8722,131.5181 600.9561,131.7397 601.0394,131.9628 " fill="none" id="SRV_ARMOR_ADD-backto-NODE_RCL_ARMOR" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="86.13,23.09,81.0327,31.5172,85.5028,28.0505,88.9695,32.5207,86.13,23.09" style="stroke:#181818;stroke-width:1.0;"/><path d="M110.5,78 L110.5,103 L368.5,103 L368.5,88 L358.5,78 L110.5,78 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M358.5,78 L358.5,88 L368.5,88 L358.5,78 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="237" x="116.5" y="95.0669">robocluedo_armor_msgs/AddHint.srv</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="19" x="589.51" y="308.9469">srv</text></g><!--MD5=[5cc841e0567fd334b494e3a819467fbd]
reverse link SRV_ARMOR_FIND to NODE_RCL_ARMOR--><g id="link_SRV_ARMOR_FIND_NODE_RCL_ARMOR"><path codeLine="48" d="M390.08,27.72 C382.51,47.74 371.87,86.52 392.5,108 C407.83,123.96 575.49,100.72 591.5,116 C593.4456,117.8575 595.2162,120.2283 596.8259,123.0423 C597.6308,124.4492 598.3954,125.967 599.1216,127.5868 C599.4847,128.3966 599.8382,129.232 600.1823,130.0918 C600.3544,130.5217 600.5241,130.9577 600.6914,131.3997 " fill="none" id="SRV_ARMOR_FIND-backto-NODE_RCL_ARMOR" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="391.92,23.06,384.9002,29.9681,390.0878,27.7122,392.3437,32.8997,391.92,23.06" style="stroke:#181818;stroke-width:1.0;"/><path d="M397.5,78 L397.5,103 L774.5,103 L774.5,88 L764.5,78 L397.5,78 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M764.5,78 L764.5,88 L774.5,88 L764.5,78 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="356" x="403.5" y="95.0669">robocluedo_armor_msgs/FindConsistentHypotheses.srv</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="19" x="608.51" y="323.9469">srv</text></g><!--MD5=[585414b7d0d5af5f6ee9434af1287889]
reverse link SRV_ARMOR_DEL to NODE_RCL_ARMOR--><g id="link_SRV_ARMOR_DEL_NODE_RCL_ARMOR"><path codeLine="52" d="M821.27,28.37 C818.54,49.34 809.96,89.47 783.5,108 C768.28,118.65 629.59,102.82 616.5,116 C614.6106,117.9031 612.9234,120.3139 611.4207,123.1628 C610.6693,124.5872 609.9641,126.1211 609.3027,127.7559 C608.9721,128.5732 608.6524,129.4158 608.3434,130.2825 C608.1889,130.7158 608.037,131.1552 607.8879,131.6004 " fill="none" id="SRV_ARMOR_DEL-backto-NODE_RCL_ARMOR" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="821.87,23.24,816.8416,31.7085,821.2833,28.2055,824.7863,32.6472,821.87,23.24" style="stroke:#181818;stroke-width:1.0;"/><path d="M813.5,78 L813.5,103 L1139.5,103 L1139.5,88 L1129.5,78 L813.5,78 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1129.5,78 L1129.5,88 L1139.5,88 L1129.5,78 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="305" x="819.5" y="95.0669">robocluedo_armor_msgs/DiscardHypothesis.srv</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="19" x="589.48" y="323.9469">srv</text></g><!--MD5=[8cc748b0308c37013ac8d10c857ad750]
reverse link SRV_ARMOR_BACKUP to NODE_RCL_ARMOR--><g id="link_SRV_ARMOR_BACKUP_NODE_RCL_ARMOR"><path codeLine="56" d="M1196.38,28.24 C1192.21,49.37 1180.74,90.17 1152.5,108 C1127.32,123.9 637.83,95.22 616.5,116 C614.5794,117.8719 612.8648,120.2553 611.3382,123.0803 C610.5749,124.4928 609.8586,126.0156 609.187,127.6401 C608.8512,128.4524 608.5266,129.29 608.2129,130.152 C608.0561,130.583 607.9019,131.02 607.7505,131.463 " fill="none" id="SRV_ARMOR_BACKUP-backto-NODE_RCL_ARMOR" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1197.33,23.08,1191.7783,31.215,1196.4318,27.9987,1199.6482,32.6521,1197.33,23.08" style="stroke:#181818;stroke-width:1.0;"/><path d="M1185.5,78 L1185.5,103 L1330.5,103 L1330.5,88 L1320.5,78 L1185.5,78 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1320.5,78 L1320.5,88 L1330.5,88 L1320.5,78 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="124" x="1191.5" y="95.0669">std_srvs/Trigger.srv</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="19" x="608.48" y="308.9469">srv</text></g><!--MD5=[f226ad0b6bc5229042142b08b40c6caa]
@startuml

''' COMPONENTS
component "aRMOR Interface" as NODE_RCL_ARMOR {
	class "aRMOR Tools" as NODE_RCL_ARMOR.ARMOR_TOOLS {
		+ bool ConnectAndLoad( ... )
		+ bool LoadOntology( ... )
		+ bool Connect( float timeout = ARMOR_DEFAULT_TIMEOUT )
		+ bool Success( )
		+ bool LoadedOntology( )
		+ bool TestInterface( )
		+ bool SendCommand( ... )
		+ armor_msgs::ArmorDirective GetRequest( ... )
		+ bool CallArmor( armor_msgs::ArmorDirective& data )
		+ bool UpdateOntology( )
		+ bool SaveOntology( std::string path )
		+ void SwitchDebugMode( )
		+ int GetLastErrorCode( )
		+ std::string GetLastErrorDescription( )
	}
	
	class "aRMOR CLuedo" as NODE_RCL_ARMOR.ARMOR_CLUEDO {
		+ bool Init( std::string ontologyPath )
		+ bool AddIndiv( std::string indivname, std::string classname, bool makeDisjoint = true )
		+ std::vector<std::string> GetClassOfIndiv( std::string indivname, bool deep )
		+ std::vector<std::string> GetIndivOfClass( std::string classname )
		+ bool ExistsIndiv( std::string indivname )
		+ bool SetObjectProperty( std::string prop, std::string Aelem, std::string Belem )
		+ std::vector<std::string> GetValuedOfIndiv( std::string prop, std::string indivname )
		+ std::vector<std::string> FindCompleteHypotheses( )
		+ std::vector<std::string> FindInconsistentHypotheses( )
		+ bool RemoveHypothesis( std::string hypTag )
		+ std::string FilterValue( std::string raw )
		+ std::vector<std::string> FilterVector( std::vector<std::string>& itemlist )
	}
	
	NODE_RCL_ARMOR.ARMOR_TOOLS - -|> NODE_RCL_ARMOR.ARMOR_CLUEDO
}

''' LINKS
() "/armor_interface_srv" as SRV_ARMOR_DIRECTIVE
SRV_ARMOR_DIRECTIVE - -> "cl" NODE_RCL_ARMOR.ARMOR_CLUEDO

() "/cluedo_armor/add_hint" as SRV_ARMOR_ADD
SRV_ARMOR_ADD <- - "srv" NODE_RCL_ARMOR
note on link: robocluedo_armor_msgs/AddHint.srv

() "/cluedo_armor/find_consistent_h" as SRV_ARMOR_FIND
SRV_ARMOR_FIND <- - "srv" NODE_RCL_ARMOR
note on link: robocluedo_armor_msgs/FindConsistentHypotheses.srv

() "/cluedo_armor/wrong_hypothesis" as SRV_ARMOR_DEL
SRV_ARMOR_DEL <- - "srv" NODE_RCL_ARMOR
note on link: robocluedo_armor_msgs/DiscardHypothesis.srv

() "/cluedo_armor/backup" as SRV_ARMOR_BACKUP
SRV_ARMOR_BACKUP <- - "srv" NODE_RCL_ARMOR
note on link: std_srvs/Trigger.srv

@enduml

@startuml

component "aRMOR Interface" as NODE_RCL_ARMOR {
	class "aRMOR Tools" as NODE_RCL_ARMOR.ARMOR_TOOLS {
		+ bool ConnectAndLoad( ... )
		+ bool LoadOntology( ... )
		+ bool Connect( float timeout = ARMOR_DEFAULT_TIMEOUT )
		+ bool Success( )
		+ bool LoadedOntology( )
		+ bool TestInterface( )
		+ bool SendCommand( ... )
		+ armor_msgs::ArmorDirective GetRequest( ... )
		+ bool CallArmor( armor_msgs::ArmorDirective& data )
		+ bool UpdateOntology( )
		+ bool SaveOntology( std::string path )
		+ void SwitchDebugMode( )
		+ int GetLastErrorCode( )
		+ std::string GetLastErrorDescription( )
	}
	
	class "aRMOR CLuedo" as NODE_RCL_ARMOR.ARMOR_CLUEDO {
		+ bool Init( std::string ontologyPath )
		+ bool AddIndiv( std::string indivname, std::string classname, bool makeDisjoint = true )
		+ std::vector<std::string> GetClassOfIndiv( std::string indivname, bool deep )
		+ std::vector<std::string> GetIndivOfClass( std::string classname )
		+ bool ExistsIndiv( std::string indivname )
		+ bool SetObjectProperty( std::string prop, std::string Aelem, std::string Belem )
		+ std::vector<std::string> GetValuedOfIndiv( std::string prop, std::string indivname )
		+ std::vector<std::string> FindCompleteHypotheses( )
		+ std::vector<std::string> FindInconsistentHypotheses( )
		+ bool RemoveHypothesis( std::string hypTag )
		+ std::string FilterValue( std::string raw )
		+ std::vector<std::string> FilterVector( std::vector<std::string>& itemlist )
	}
	
	NODE_RCL_ARMOR.ARMOR_TOOLS - -|> NODE_RCL_ARMOR.ARMOR_CLUEDO
}

() "/armor_interface_srv" as SRV_ARMOR_DIRECTIVE
SRV_ARMOR_DIRECTIVE - -> "cl" NODE_RCL_ARMOR.ARMOR_CLUEDO

() "/cluedo_armor/add_hint" as SRV_ARMOR_ADD
SRV_ARMOR_ADD <- - "srv" NODE_RCL_ARMOR
note on link: robocluedo_armor_msgs/AddHint.srv

() "/cluedo_armor/find_consistent_h" as SRV_ARMOR_FIND
SRV_ARMOR_FIND <- - "srv" NODE_RCL_ARMOR
note on link: robocluedo_armor_msgs/FindConsistentHypotheses.srv

() "/cluedo_armor/wrong_hypothesis" as SRV_ARMOR_DEL
SRV_ARMOR_DEL <- - "srv" NODE_RCL_ARMOR
note on link: robocluedo_armor_msgs/DiscardHypothesis.srv

() "/cluedo_armor/backup" as SRV_ARMOR_BACKUP
SRV_ARMOR_BACKUP <- - "srv" NODE_RCL_ARMOR
note on link: std_srvs/Trigger.srv

@enduml

PlantUML version 1.2022.6(Tue Jun 21 17:34:49 UTC 2022)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>