<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="695px" preserveAspectRatio="none" style="width:2337px;height:695px;background:#FFFFFF;" version="1.1" viewBox="0 0 2337 695" width="2337px" zoomAndPan="magnify"><defs/><g><!--MD5=[1c66db8d4ddf4f1f0ddf2cee58876e7b]
cluster ARMOR--><g id="cluster_ARMOR"><path d="M8.5,122 L63.5,122 A3.75,3.75 0 0 1 66,124.5 L73,144.2969 L169.5,144.2969 A2.5,2.5 0 0 1 172,146.7969 L172,588 A2.5,2.5 0 0 1 169.5,590.5 L8.5,590.5 A2.5,2.5 0 0 1 6,588 L6,124.5 A2.5,2.5 0 0 1 8.5,122 " style="stroke:#000000;stroke-width:1.5;fill:none;"/><line style="stroke:#000000;stroke-width:1.5;fill:none;" x1="6" x2="73" y1="144.2969" y2="144.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="54" x="10" y="136.9951">aRMOR</text></g><!--MD5=[e4496b15dd90759367543683a167e801]
cluster NODE_RCL_ARMOR--><g id="cluster_NODE_RCL_ARMOR"><rect height="682" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;fill:none;" width="674" x="389" y="7"/><rect height="10" style="stroke:#181818;stroke-width:1.0;fill:none;" width="15" x="1043" y="12"/><rect height="2" style="stroke:#181818;stroke-width:1.0;fill:none;" width="4" x="1041" y="14"/><rect height="2" style="stroke:#181818;stroke-width:1.0;fill:none;" width="4" x="1041" y="18"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="130" x="661" y="32.9951">aRMOR Interface</text></g><!--MD5=[e897962d761a5d48dd6fd6e93de41f4f]
entity ARMOR.KB--><g id="elem_ARMOR.KB"><path d="M22,167 C22,157 89,157 89,157 C89,157 156,157 156,167 L156,208.5938 C156,218.5938 89,218.5938 89,218.5938 C89,218.5938 22,218.5938 22,208.5938 L22,167 " fill="#F1F1F1" style="stroke:#181818;stroke-width:0.5;"/><path d="M22,167 C22,177 89,177 89,177 C89,177 156,177 156,167 " fill="none" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="69" x="54.5" y="193.9951">«aRMOR»</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="32" y="210.292">knowledge base</text></g><!--MD5=[0aa88e9046e94c886c19c17824edf041]
entity ARMOR.NODE--><g id="elem_ARMOR.NODE"><rect fill="#F1F1F1" height="62.5938" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="109" x="34.5" y="511.5"/><rect fill="#F1F1F1" height="10" style="stroke:#181818;stroke-width:0.5;" width="15" x="123.5" y="516.5"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="121.5" y="518.5"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="121.5" y="522.5"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="69" x="49.5" y="544.4951">«aRMOR»</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="55.5" y="560.792">services</text></g><!--MD5=[5616d5e5474d0ac0409a1255e923756c]
class NODE_RCL_ARMOR.ARMOR_TOOLS--><g id="elem_NODE_RCL_ARMOR.ARMOR_TOOLS"><rect codeLine="13" fill="#F1F1F1" height="276.1563" id="NODE_RCL_ARMOR.ARMOR_TOOLS" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="435" x="504.5" y="50"/><ellipse cx="671.25" cy="66" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M674.2188,71.6406 Q673.6406,71.9375 673,72.0859 Q672.3594,72.2344 671.6563,72.2344 Q669.1563,72.2344 667.8359,70.5859 Q666.5156,68.9375 666.5156,65.8125 Q666.5156,62.6875 667.8359,61.0313 Q669.1563,59.375 671.6563,59.375 Q672.3594,59.375 673.0078,59.5313 Q673.6563,59.6875 674.2188,59.9844 L674.2188,62.7031 Q673.5938,62.125 673,61.8516 Q672.4063,61.5781 671.7813,61.5781 Q670.4375,61.5781 669.75,62.6484 Q669.0625,63.7188 669.0625,65.8125 Q669.0625,67.9063 669.75,68.9766 Q670.4375,70.0469 671.7813,70.0469 Q672.4063,70.0469 673,69.7734 Q673.5938,69.5 674.2188,68.9219 L674.2188,71.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="691.75" y="70.8467">aRMOR Tools</text><line style="stroke:#181818;stroke-width:0.5;" x1="505.5" x2="938.5" y1="82" y2="82"/><line style="stroke:#181818;stroke-width:0.5;" x1="505.5" x2="938.5" y1="90" y2="90"/><ellipse cx="515.5" cy="101" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="524.5" y="106.9951">bool ConnectAndLoad( ... )</text><ellipse cx="515.5" cy="117.2969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="524.5" y="123.292">bool LoadOntology( ... )</text><ellipse cx="515.5" cy="133.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="409" x="524.5" y="139.5889">bool Connect( float timeout = ARMOR_DEFAULT_TIMEOUT )</text><ellipse cx="515.5" cy="149.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="524.5" y="155.8857">bool Success( )</text><ellipse cx="515.5" cy="166.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="524.5" y="172.1826">bool LoadedOntology( )</text><ellipse cx="515.5" cy="182.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="524.5" y="188.4795">bool TestInterface( )</text><ellipse cx="515.5" cy="198.7813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="524.5" y="204.7764">bool SendCommand( ... )</text><ellipse cx="515.5" cy="215.0781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="314" x="524.5" y="221.0732">armor_msgs::ArmorDirective GetRequest( ... )</text><ellipse cx="515.5" cy="231.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="359" x="524.5" y="237.3701">bool CallArmor( armor_msgs::ArmorDirective&amp; data )</text><ellipse cx="515.5" cy="247.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="524.5" y="253.667">bool UpdateOntology( )</text><ellipse cx="515.5" cy="263.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="253" x="524.5" y="269.9639">bool SaveOntology( std::string path )</text><ellipse cx="515.5" cy="280.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="524.5" y="286.2607">void SwitchDebugMode( )</text><ellipse cx="515.5" cy="296.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="524.5" y="302.5576">int GetLastErrorCode( )</text><ellipse cx="515.5" cy="312.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="254" x="524.5" y="318.8545">std::string GetLastErrorDescription( )</text></g><!--MD5=[9156ae9bbd67c0d66877b244e40367cf]
class NODE_RCL_ARMOR.ARMOR_CLUEDO--><g id="elem_NODE_RCL_ARMOR.ARMOR_CLUEDO"><rect codeLine="30" fill="#F1F1F1" height="243.5625" id="NODE_RCL_ARMOR.ARMOR_CLUEDO" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="617" x="413.5" y="421"/><ellipse cx="663.75" cy="437" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M666.7188,442.6406 Q666.1406,442.9375 665.5,443.0859 Q664.8594,443.2344 664.1563,443.2344 Q661.6563,443.2344 660.3359,441.5859 Q659.0156,439.9375 659.0156,436.8125 Q659.0156,433.6875 660.3359,432.0313 Q661.6563,430.375 664.1563,430.375 Q664.8594,430.375 665.5078,430.5313 Q666.1563,430.6875 666.7188,430.9844 L666.7188,433.7031 Q666.0938,433.125 665.5,432.8516 Q664.9063,432.5781 664.2813,432.5781 Q662.9375,432.5781 662.25,433.6484 Q661.5625,434.7188 661.5625,436.8125 Q661.5625,438.9063 662.25,439.9766 Q662.9375,441.0469 664.2813,441.0469 Q664.9063,441.0469 665.5,440.7734 Q666.0938,440.5 666.7188,439.9219 L666.7188,442.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="684.25" y="441.8467">aRMOR CLuedo</text><line style="stroke:#181818;stroke-width:0.5;" x1="414.5" x2="1029.5" y1="453" y2="453"/><line style="stroke:#181818;stroke-width:0.5;" x1="414.5" x2="1029.5" y1="461" y2="461"/><ellipse cx="424.5" cy="472" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="238" x="433.5" y="477.9951">bool Init( std::string ontologyPath )</text><ellipse cx="424.5" cy="488.2969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="591" x="433.5" y="494.292">bool AddIndiv( std::string indivname, std::string classname, bool makeDisjoint = true )</text><ellipse cx="424.5" cy="504.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="523" x="433.5" y="510.5889">std::vector&lt;std::string&gt; GetClassOfIndiv( std::string indivname, bool deep )</text><ellipse cx="424.5" cy="520.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="449" x="433.5" y="526.8857">std::vector&lt;std::string&gt; GetIndivOfClass( std::string classname )</text><ellipse cx="424.5" cy="537.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="433.5" y="543.1826">bool ExistsIndiv( std::string indivname )</text><ellipse cx="424.5" cy="553.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="538" x="433.5" y="559.4795">bool SetObjectProperty( std::string prop, std::string Aelem, std::string Belem )</text><ellipse cx="424.5" cy="569.7813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="570" x="433.5" y="575.7764">std::vector&lt;std::string&gt; GetValuedOfIndiv( std::string prop, std::string indivname )</text><ellipse cx="424.5" cy="586.0781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="367" x="433.5" y="592.0732">std::vector&lt;std::string&gt; FindCompleteHypotheses( )</text><ellipse cx="424.5" cy="602.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="385" x="433.5" y="608.3701">std::vector&lt;std::string&gt; FindInconsistentHypotheses( )</text><ellipse cx="424.5" cy="618.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="312" x="433.5" y="624.667">bool RemoveHypothesis( std::string hypTag )</text><ellipse cx="424.5" cy="634.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="433.5" y="640.9639">std::string FilterValue( std::string raw )</text><ellipse cx="424.5" cy="651.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="505" x="433.5" y="657.2607">std::vector&lt;std::string&gt; FilterVector( std::vector&lt;std::string&gt;&amp; itemlist )</text></g><!--MD5=[bd6f0174d6c8cf3399456c44a5f04e4b]
entity SRV_ARMOR_DIRECTIVE--><g id="elem_SRV_ARMOR_DIRECTIVE"><ellipse cx="278" cy="188" fill="#F1F1F1" rx="8" ry="8" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="208.5" y="217.9951">/armor_interface_srv</text></g><!--MD5=[ff6769c984590f49ebaa14c52fb754a5]
entity SRV_ARMOR_ADD--><g id="elem_SRV_ARMOR_ADD"><ellipse cx="1176" cy="543" fill="#F1F1F1" rx="8" ry="8" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="1094.5" y="572.9951">/cluedo_armor/add_hint</text></g><!--MD5=[9a50e2d0d5368a0a1b0a68b01337ec49]
entity SRV_ARMOR_FIND--><g id="elem_SRV_ARMOR_FIND"><ellipse cx="1420" cy="543" fill="#F1F1F1" rx="8" ry="8" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="225" x="1307.5" y="572.9951">/cluedo_armor/find_consistent_h</text></g><!--MD5=[3b3b20904a042ad183e8b7df1d6262e8]
entity SRV_ARMOR_DEL--><g id="elem_SRV_ARMOR_DEL"><ellipse cx="1836" cy="543" fill="#F1F1F1" rx="8" ry="8" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="1721" y="572.9951">/cluedo_armor/wrong_hypothesis</text></g><!--MD5=[780a75eaa14ca967fc45d84d76f7efe8]
entity SRV_ARMOR_BACKUP--><g id="elem_SRV_ARMOR_BACKUP"><ellipse cx="2212" cy="543" fill="#F1F1F1" rx="8" ry="8" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="2134.5" y="572.9951">/cluedo_armor/backup</text></g><!--MD5=[8fe1cbb8cdb5cd2e66b8ebd4bee4b855]
reverse link ARMOR.KB to ARMOR.NODE--><g id="link_ARMOR.KB_ARMOR.NODE"><path codeLine="8" d="M80.97,224.34 C74.52,293.63 74.68,446.26 81.44,511.48 " fill="none" id="ARMOR.KB-backto-ARMOR.NODE" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="81.48,219.1,76.6238,227.6684,80.9938,224.0763,84.5859,228.4463,81.48,219.1" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[722c758c5f1447dcc01e42514b50437e]
link ARMOR.KB to ARMOR.NODE--><g id="link_ARMOR.KB_ARMOR.NODE"><path codeLine="9" d="M96.96,219.1 C104.14,283.93 104.34,436.55 97.55,506.21 " fill="none" id="ARMOR.KB-to-ARMOR.NODE" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="97.01,511.48,101.9149,502.9394,97.5245,506.5065,93.9573,502.1162,97.01,511.48" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2af3f33ea83f687b4f014737a57df37f]
link NODE_RCL_ARMOR.ARMOR_TOOLS to NODE_RCL_ARMOR.ARMOR_CLUEDO--><g id="link_NODE_RCL_ARMOR.ARMOR_TOOLS_NODE_RCL_ARMOR.ARMOR_CLUEDO"><path codeLine="45" d="M722,326.24 C722,350.6 722,376.01 722,400.49 " fill="none" id="NODE_RCL_ARMOR.ARMOR_TOOLS-to-NODE_RCL_ARMOR.ARMOR_CLUEDO" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="729,400.79,722,420.79,715,400.79,729,400.79" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[43d1468092c39fa55b840c9fa3c55196]
link SRV_ARMOR_DIRECTIVE to NODE_RCL_ARMOR.ARMOR_CLUEDO--><g id="link_SRV_ARMOR_DIRECTIVE_NODE_RCL_ARMOR.ARMOR_CLUEDO"><path codeLine="50" d="M283.79,197.08 C299.98,219.34 347.78,282.74 397,326 C433.7,358.26 475.52,389.48 516.65,417.7 " fill="none" id="SRV_ARMOR_DIRECTIVE-to-NODE_RCL_ARMOR.ARMOR_CLUEDO" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="521.15,420.77,515.9862,412.3834,517.0252,417.944,511.4646,418.9831,521.15,420.77" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="10" x="498.606" y="409.9488">cl</text></g><!--MD5=[cedd9f2c5e2246818534c6b5cbada513]
reverse link SRV_ARMOR_DIRECTIVE to ARMOR.NODE--><g id="link_SRV_ARMOR_DIRECTIVE_ARMOR.NODE"><path codeLine="51" d="M268.03,201.18 C246.51,227.9 194.99,294.23 162,356 C134.05,408.32 110.87,473.74 98.56,511.41 " fill="none" id="SRV_ARMOR_DIRECTIVE-backto-ARMOR.NODE" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="271.22,197.24,262.4501,201.7221,268.0757,201.1276,268.6702,206.7531,271.22,197.24" style="stroke:#181818;stroke-width:1.0;"/><path d="M167,361 L167,386 L392,386 L392,371 L382,361 L167,361 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M382,361 L382,371 L392,371 L382,361 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="204" x="173" y="378.0669">armor_msgs/ArmorDirective.srv</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="19" x="79.5724" y="500.4702">srv</text></g><!--MD5=[23c049ba7d9d47522334fc4727d6c90f]
link NODE_RCL_ARMOR to SRV_ARMOR_ADD--><g id="link_NODE_RCL_ARMOR_SRV_ARMOR_ADD"><path codeLine="55" d="M1063.1097,246.9137 C1063.2048,247.4913 1063.3008,248.0719 1063.3977,248.6554 C1063.5916,249.8223 1063.789,251.0008 1063.9901,252.1902 C1064.3922,254.5692 1064.8088,256.9922 1065.24,259.455 C1072.14,298.86 1082.795,348.46 1098,391 C1117.35,445.14 1152.44,504.35 1168.09,529.54 " fill="none" id="NODE_RCL_ARMOR-to-SRV_ARMOR_ADD" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1170.78,533.84,1169.402,524.088,1168.13,529.6,1162.618,528.328,1170.78,533.84" style="stroke:#181818;stroke-width:1.0;"/><path d="M1103,361 L1103,386 L1361,386 L1361,371 L1351,361 L1103,361 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1351,361 L1351,371 L1361,371 L1351,361 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="237" x="1109" y="378.0669">robocluedo_armor_msgs/AddHint.srv</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="19" x="1036.01" y="201.1469">srv</text></g><!--MD5=[a0ddc7d7dea6fdbd78e48fdf14eecba0]
link NODE_RCL_ARMOR to SRV_ARMOR_FIND--><g id="link_NODE_RCL_ARMOR_SRV_ARMOR_FIND"><path codeLine="59" d="M1063.1559,190.7856 C1063.5061,190.8661 1063.8668,190.9494 1064.2378,191.0356 C1064.9799,191.2079 1065.7634,191.3915 1066.5871,191.5865 C1073.1766,193.1468 1082.3395,195.4387 1093.4539,198.5323 C1115.6828,204.7197 1145.7181,214.1144 1178.5863,227.2787 C1244.3225,253.6075 1321.39,295.015 1370,356 C1412.56,409.39 1419.04,495.94 1419.91,528.79 " fill="none" id="NODE_RCL_ARMOR-to-SRV_ARMOR_FIND" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1420.02,533.93,1423.8392,524.8518,1419.92,528.931,1415.8408,525.0118,1420.02,533.93" style="stroke:#181818;stroke-width:1.0;"/><path d="M1395,361 L1395,386 L1772,386 L1772,371 L1762,361 L1395,361 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1762,361 L1762,371 L1772,371 L1762,361 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="356" x="1401" y="378.0669">robocluedo_armor_msgs/FindConsistentHypotheses.srv</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="19" x="1055.16" y="201.0969">srv</text></g><!--MD5=[940e6afe201d3db93a7128e9aa75434d]
link NODE_RCL_ARMOR to SRV_ARMOR_DEL--><g id="link_NODE_RCL_ARMOR_SRV_ARMOR_DEL"><path codeLine="63" d="M1063.5446,189.7622 C1068.4935,190.2146 1075.4922,190.8696 1084.2785,191.7298 C1101.8513,193.4503 1126.5748,195.9918 1156.3514,199.3761 C1215.9047,206.1447 1295.6706,216.2844 1378.8687,229.9687 C1545.265,257.3375 1725.39,298.885 1785,356 C1834.59,403.52 1837.45,494.31 1836.63,528.52 " fill="none" id="NODE_RCL_ARMOR-to-SRV_ARMOR_DEL" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1836.46,533.86,1840.7407,524.9901,1836.6171,528.8625,1832.7447,524.7388,1836.46,533.86" style="stroke:#181818;stroke-width:1.0;"/><path d="M1815,361 L1815,386 L2141,386 L2141,371 L2131,361 L1815,361 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M2131,361 L2131,371 L2141,371 L2131,361 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="305" x="1821" y="378.0669">robocluedo_armor_msgs/DiscardHypothesis.srv</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="19" x="1055.11" y="186.0769">srv</text></g><!--MD5=[fb34de3187972ea81caccb94175416cd]
link NODE_RCL_ARMOR to SRV_ARMOR_BACKUP--><g id="link_NODE_RCL_ARMOR_SRV_ARMOR_BACKUP"><path codeLine="67" d="M1063.9435,189.0892 C1064.3332,189.0939 1064.7352,189.0988 1065.1494,189.1039 C1065.9778,189.1141 1066.8548,189.1253 1067.7798,189.1375 C1075.1794,189.2347 1085.6453,189.3951 1098.7875,189.6543 C1125.0718,190.1727 1162.0611,191.0859 1206.6347,192.6781 C1295.7819,195.8625 1415.2663,201.7625 1540.1225,212.65 C1789.835,234.425 2061.035,276.15 2154,356 C2206.85,401.4 2212.2,494.16 2212.28,528.67 " fill="none" id="NODE_RCL_ARMOR-to-SRV_ARMOR_BACKUP" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2212.25,533.69,2216.2757,524.7015,2212.2643,528.69,2208.2757,524.6786,2212.25,533.69" style="stroke:#181818;stroke-width:1.0;"/><path d="M2185,361 L2185,386 L2330,386 L2330,371 L2320,361 L2185,361 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M2320,361 L2320,371 L2330,371 L2320,361 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="124" x="2191" y="378.0669">std_srvs/Trigger.srv</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="19" x="1036.17" y="186.0669">srv</text></g><!--MD5=[3ef752193443026613b8d37d8801d1aa]
@startuml

allow_mixing

''' COMPONENTS
package "aRMOR" as ARMOR {
	database "knowledge base" <<aRMOR>> as ARMOR.KB
	component "services" <<aRMOR>> as ARMOR.NODE
	ARMOR.KB <- - ARMOR.NODE
	ARMOR.KB - -> ARMOR.NODE
}

component "aRMOR Interface" as NODE_RCL_ARMOR {
	class "aRMOR Tools" as NODE_RCL_ARMOR.ARMOR_TOOLS {
		+ bool ConnectAndLoad( ... )
		+ bool LoadOntology( ... )
		+ bool Connect( float timeout = ARMOR_DEFAULT_TIMEOUT )
		+ bool Success( )
		+ bool LoadedOntology( )
		+ bool TestInterface( )
		+ bool SendCommand( ... )
		+ armor_msgs::ArmorDirective GetRequest( ... )
		+ bool CallArmor( armor_msgs::ArmorDirective& data )
		+ bool UpdateOntology( )
		+ bool SaveOntology( std::string path )
		+ void SwitchDebugMode( )
		+ int GetLastErrorCode( )
		+ std::string GetLastErrorDescription( )
	}
	
	class "aRMOR CLuedo" as NODE_RCL_ARMOR.ARMOR_CLUEDO {
		+ bool Init( std::string ontologyPath )
		+ bool AddIndiv( std::string indivname, std::string classname, bool makeDisjoint = true )
		+ std::vector<std::string> GetClassOfIndiv( std::string indivname, bool deep )
		+ std::vector<std::string> GetIndivOfClass( std::string classname )
		+ bool ExistsIndiv( std::string indivname )
		+ bool SetObjectProperty( std::string prop, std::string Aelem, std::string Belem )
		+ std::vector<std::string> GetValuedOfIndiv( std::string prop, std::string indivname )
		+ std::vector<std::string> FindCompleteHypotheses( )
		+ std::vector<std::string> FindInconsistentHypotheses( )
		+ bool RemoveHypothesis( std::string hypTag )
		+ std::string FilterValue( std::string raw )
		+ std::vector<std::string> FilterVector( std::vector<std::string>& itemlist )
	}
	
	NODE_RCL_ARMOR.ARMOR_TOOLS - -|> NODE_RCL_ARMOR.ARMOR_CLUEDO
}

''' LINKS
() "/armor_interface_srv" as SRV_ARMOR_DIRECTIVE
SRV_ARMOR_DIRECTIVE - -> "cl" NODE_RCL_ARMOR.ARMOR_CLUEDO
SRV_ARMOR_DIRECTIVE <- - "srv" ARMOR.NODE
note on link: armor_msgs/ArmorDirective.srv

() "/cluedo_armor/add_hint" as SRV_ARMOR_ADD
SRV_ARMOR_ADD <-up- "srv" NODE_RCL_ARMOR
note on link: robocluedo_armor_msgs/AddHint.srv

() "/cluedo_armor/find_consistent_h" as SRV_ARMOR_FIND
SRV_ARMOR_FIND <-up- "srv" NODE_RCL_ARMOR
note on link: robocluedo_armor_msgs/FindConsistentHypotheses.srv

() "/cluedo_armor/wrong_hypothesis" as SRV_ARMOR_DEL
SRV_ARMOR_DEL <-up- "srv" NODE_RCL_ARMOR
note on link: robocluedo_armor_msgs/DiscardHypothesis.srv

() "/cluedo_armor/backup" as SRV_ARMOR_BACKUP
SRV_ARMOR_BACKUP <-up- "srv" NODE_RCL_ARMOR
note on link: std_srvs/Trigger.srv

@enduml

@startuml

allow_mixing

package "aRMOR" as ARMOR {
	database "knowledge base" <<aRMOR>> as ARMOR.KB
	component "services" <<aRMOR>> as ARMOR.NODE
	ARMOR.KB <- - ARMOR.NODE
	ARMOR.KB - -> ARMOR.NODE
}

component "aRMOR Interface" as NODE_RCL_ARMOR {
	class "aRMOR Tools" as NODE_RCL_ARMOR.ARMOR_TOOLS {
		+ bool ConnectAndLoad( ... )
		+ bool LoadOntology( ... )
		+ bool Connect( float timeout = ARMOR_DEFAULT_TIMEOUT )
		+ bool Success( )
		+ bool LoadedOntology( )
		+ bool TestInterface( )
		+ bool SendCommand( ... )
		+ armor_msgs::ArmorDirective GetRequest( ... )
		+ bool CallArmor( armor_msgs::ArmorDirective& data )
		+ bool UpdateOntology( )
		+ bool SaveOntology( std::string path )
		+ void SwitchDebugMode( )
		+ int GetLastErrorCode( )
		+ std::string GetLastErrorDescription( )
	}
	
	class "aRMOR CLuedo" as NODE_RCL_ARMOR.ARMOR_CLUEDO {
		+ bool Init( std::string ontologyPath )
		+ bool AddIndiv( std::string indivname, std::string classname, bool makeDisjoint = true )
		+ std::vector<std::string> GetClassOfIndiv( std::string indivname, bool deep )
		+ std::vector<std::string> GetIndivOfClass( std::string classname )
		+ bool ExistsIndiv( std::string indivname )
		+ bool SetObjectProperty( std::string prop, std::string Aelem, std::string Belem )
		+ std::vector<std::string> GetValuedOfIndiv( std::string prop, std::string indivname )
		+ std::vector<std::string> FindCompleteHypotheses( )
		+ std::vector<std::string> FindInconsistentHypotheses( )
		+ bool RemoveHypothesis( std::string hypTag )
		+ std::string FilterValue( std::string raw )
		+ std::vector<std::string> FilterVector( std::vector<std::string>& itemlist )
	}
	
	NODE_RCL_ARMOR.ARMOR_TOOLS - -|> NODE_RCL_ARMOR.ARMOR_CLUEDO
}

() "/armor_interface_srv" as SRV_ARMOR_DIRECTIVE
SRV_ARMOR_DIRECTIVE - -> "cl" NODE_RCL_ARMOR.ARMOR_CLUEDO
SRV_ARMOR_DIRECTIVE <- - "srv" ARMOR.NODE
note on link: armor_msgs/ArmorDirective.srv

() "/cluedo_armor/add_hint" as SRV_ARMOR_ADD
SRV_ARMOR_ADD <-up- "srv" NODE_RCL_ARMOR
note on link: robocluedo_armor_msgs/AddHint.srv

() "/cluedo_armor/find_consistent_h" as SRV_ARMOR_FIND
SRV_ARMOR_FIND <-up- "srv" NODE_RCL_ARMOR
note on link: robocluedo_armor_msgs/FindConsistentHypotheses.srv

() "/cluedo_armor/wrong_hypothesis" as SRV_ARMOR_DEL
SRV_ARMOR_DEL <-up- "srv" NODE_RCL_ARMOR
note on link: robocluedo_armor_msgs/DiscardHypothesis.srv

() "/cluedo_armor/backup" as SRV_ARMOR_BACKUP
SRV_ARMOR_BACKUP <-up- "srv" NODE_RCL_ARMOR
note on link: std_srvs/Trigger.srv

@enduml

PlantUML version 1.2022.6(Tue Jun 21 17:34:49 UTC 2022)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>