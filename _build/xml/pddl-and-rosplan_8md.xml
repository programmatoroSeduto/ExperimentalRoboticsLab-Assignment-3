<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="pddl-and-rosplan_8md" kind="file" language="Markdown">
    <compoundname>pddl-and-rosplan.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>PDDL<sp/>and<sp/>ROSPlan</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Unfortunately,<sp/>the<sp/>ROS<sp/>Plan<sp/>knowledge<sp/>base<sp/>is<sp/>able<sp/>only<sp/>to<sp/>parse<sp/>a<sp/>very<sp/>particular,<sp/>limited<sp/>version<sp/>of<sp/>the<sp/>PDDL.<sp/>And<sp/>worse,<sp/>this<sp/>doesn&apos;t<sp/>seem<sp/>to<sp/>appear<sp/>in<sp/>any<sp/>documentation<sp/>about<sp/>ROS<sp/>Plan!<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>validation<sp/>with<sp/>Parser</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">from<sp/>inside<sp/>the<sp/>folder<sp/>`(package<sp/>robocluedo_rosplan_interface)/pddl/`<sp/>run<sp/>the<sp/>command</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">./parser<sp/>&lt;domain<sp/>file&gt;<sp/>&lt;(opt)<sp/>problem<sp/>file&gt;</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>solution<sp/>with<sp/>popf</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">the<sp/>repository<sp/>contains<sp/>a<sp/>already<sp/>compiled<sp/>version<sp/>of<sp/>the<sp/>planner<sp/>popf.<sp/>In<sp/>case<sp/>is<sp/>doesn&apos;t<sp/>work,<sp/>you<sp/>can<sp/>find<sp/>another<sp/>executable<sp/>in<sp/>the<sp/>folder<sp/>`&lt;tour<sp/>workspace&gt;/src/ROSPlan/rosplan_planning_system/common/bin/`.<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">&lt;path&gt;/popf<sp/>DOMAIN<sp/>PROBLEM</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">some<sp/>useful<sp/>options:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`-n`<sp/>search<sp/>for<sp/>many<sp/>solutions<sp/>(optimal<sp/>search)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`-v2`<sp/>verbose<sp/>option</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`-LP2`<sp/>another<sp/>verbose<sp/>option</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`-b`<sp/>disable<sp/>best-first-search;<sp/>often<sp/>it<sp/>couldn&apos;t<sp/>solve<sp/>the<sp/>plan<sp/>with<sp/>this<sp/>method</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`-T`<sp/>in<sp/>the<sp/>case<sp/>of<sp/>the<sp/>robocluedo<sp/>project,<sp/>it<sp/>helped<sp/>me<sp/>to<sp/>speed<sp/>up<sp/>the<sp/>planning<sp/>process</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Specific<sp/>rules<sp/>for<sp/>the<sp/>PDDL<sp/>in<sp/>ROS<sp/>Plan</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">you<sp/>can<sp/>set<sp/>the<sp/>planner<sp/>in<sp/>a<sp/>suitable<sp/>way<sp/>for<sp/>your<sp/>application<sp/>by<sp/>the<sp/>`planner_command`<sp/>parameter<sp/>in<sp/>the<sp/>planner<sp/>interface.<sp/>BUT<sp/>the<sp/>knowledge<sp/>base<sp/>node<sp/>is<sp/>able<sp/>to<sp/>interpret<sp/>a<sp/>non-standard<sp/>particular<sp/>version<sp/>of<sp/>PDDL,<sp/>otherwise<sp/>it<sp/>closes<sp/>unexpectedly.<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>use<sp/>this<sp/>list<sp/>of<sp/>requirements:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```lisp</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(:requirements<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:strips<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:typing<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:equality<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:universal-preconditions<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:durative-actions</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>seemingly<sp/>there&apos;s<sp/>no<sp/>bugs<sp/>in<sp/>tabulation<sp/>parsing</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**always<sp/>specify<sp/>the<sp/>type<sp/>of<sp/>the<sp/>objects<sp/>and<sp/>the<sp/>parameters!**<sp/>Typing<sp/>is<sp/>a<sp/>requirement<sp/>in<sp/>ROSPlan,<sp/>nevertheless<sp/>it<sp/>is<sp/>optional<sp/>in<sp/>the<sp/>standard<sp/>model<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>In<sp/>particular<sp/>ROSPlan<sp/>can&apos;t<sp/>deal<sp/>with<sp/>the<sp/>*pure<sp/>classical<sp/>planning*:<sp/>it<sp/>works<sp/>fine<sp/>only<sp/>with<sp/>`durative-actions`.<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">-<sp/>durative<sp/>actions<sp/>with<sp/>empty<sp/>parameters<sp/>are<sp/>*allowed*<sp/>by<sp/>the<sp/>system</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>*don&apos;t<sp/>use<sp/>`(and<sp/>...)`<sp/>with<sp/>only<sp/>one<sp/>argument!*<sp/>If<sp/>the<sp/>and<sp/>is<sp/>going<sp/>to<sp/>contain<sp/>only<sp/>one<sp/>predicate,<sp/>simply<sp/>don&apos;t<sp/>use<sp/>such<sp/>operators:<sp/>just<sp/>write<sp/>the<sp/>predicate,<sp/>and<sp/>nothing<sp/>else.<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**empty<sp/>`:condition<sp/>(...<sp/>)`<sp/>statements<sp/>are<sp/>not<sp/>allowed!**</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>you<sp/>cannot<sp/>use<sp/>`(not<sp/>...)`<sp/>inside<sp/>the<sp/>goal<sp/>statement:<sp/>the<sp/>planner<sp/>doesn&apos;t<sp/>fully<sp/>support<sp/>`:adl`<sp/>requirement.<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**don&apos;t<sp/>use<sp/>the<sp/>upper<sp/>case<sp/>characters!**<sp/>ROSPlan<sp/>poorly<sp/>supports<sp/>the<sp/>uppercase<sp/>letters,<sp/>and<sp/>sometimes<sp/>it<sp/>returns<sp/>lower-case<sp/>names<sp/>instead<sp/>of<sp/>the<sp/>expected<sp/>upper-case<sp/>ones,<sp/>making<sp/>the<sp/>query<sp/>to<sp/>fail<sp/>without<sp/>reason.<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>here&apos;s<sp/>an<sp/>example<sp/>of<sp/>this<sp/>nasty<sp/>feature.<sp/>let&apos;s<sp/>suppose<sp/>to<sp/>have<sp/>written<sp/>this<sp/>in<sp/>the<sp/>problem<sp/>file:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```lisp</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(h-open<sp/>ID1<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(=<sp/>(h-count-who<sp/>ID1<sp/>)<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(=<sp/>(h-count-where<sp/>ID1<sp/>)<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(=<sp/>(h-count-what<sp/>ID1<sp/>)<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(h-open<sp/>ID2<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(=<sp/>(h-count-who<sp/>ID2<sp/>)<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(=<sp/>(h-count-where<sp/>ID2<sp/>)<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(=<sp/>(h-count-what<sp/>ID2<sp/>)<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(h-open<sp/>ID3<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(=<sp/>(h-count-who<sp/>ID3<sp/>)<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(=<sp/>(h-count-where<sp/>ID3<sp/>)<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(=<sp/>(h-count-what<sp/>ID3<sp/>)<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(h-open<sp/>ID4<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(=<sp/>(h-count-who<sp/>ID4<sp/>)<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(=<sp/>(h-count-where<sp/>ID4<sp/>)<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(=<sp/>(h-count-what<sp/>ID4<sp/>)<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(h-open<sp/>ID5<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(=<sp/>(h-count-who<sp/>ID5<sp/>)<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(=<sp/>(h-count-where<sp/>ID5<sp/>)<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(=<sp/>(h-count-what<sp/>ID5<sp/>)<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(h-open<sp/>ID6<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(=<sp/>(h-count-who<sp/>ID6<sp/>)<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(=<sp/>(h-count-where<sp/>ID6<sp/>)<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(=<sp/>(h-count-what<sp/>ID6<sp/>)<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>but,<sp/>after<sp/>a<sp/>simple<sp/>test,<sp/>we<sp/>discover<sp/>that<sp/>the<sp/>knowledge<sp/>base<sp/>returns<sp/>this<sp/>instead.<sp/>Here<sp/>is<sp/>a<sp/>simple<sp/>query,<sp/>which<sp/>fails<sp/>because<sp/>of<sp/>this<sp/>buggy,<sp/>not<sp/>documented<sp/>behaviour<sp/>of<sp/>the<sp/>knowledge<sp/>base:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```lisp</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>[<sp/>INFO]<sp/>[1657462216.628493200]:<sp/>[kb_tools]<sp/>kb_tools::get_fluent(<sp/>h-count-who,<sp/>id=ID1<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>[<sp/>INFO]<sp/>[1657462216.638314500]:<sp/>[kb_tools]<sp/>kb_tools::get_fluent<sp/>FROM<sp/>SERVICE:<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>[0]<sp/>(h-count-who,<sp/>id=id1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>[1]<sp/>(h-count-who,<sp/>id=id2)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>[2]<sp/>(h-count-who,<sp/>id=id3)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>[3]<sp/>(h-count-who,<sp/>id=id4)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>[4]<sp/>(h-count-who,<sp/>id=id5)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>[5]<sp/>(h-count-who,<sp/>id=id6)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>[<sp/>INFO]<sp/>[1657462216.638412900]:<sp/>[kb_tools]<sp/>kb_tools::get_fluent(<sp/>CALL<sp/>SUCCESS<sp/>with<sp/>return<sp/>0<sp/>(success=0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>[<sp/>INFO]<sp/>[1657462216.638467900]:<sp/>[kb_tools]<sp/>kb_tools::ok(<sp/>)<sp/>!!!<sp/>FAILURE<sp/>!!!</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>whatever<sp/>query<sp/>fails<sp/>with<sp/>this<sp/>return!<sp/>beautiful<sp/>ROSPlan<sp/>...<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Durative<sp/>Actions<sp/>-<sp/>the<sp/>right<sp/>syntax</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```lisp</highlight></codeline>
<codeline><highlight class="normal">(:durative-action<sp/>???</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:parameters<sp/>(<sp/>???<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:duration<sp/>(=<sp/>?duration<sp/>1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:condition<sp/>(<sp/>???<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:effect<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>???</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Issue<sp/>in<sp/>the<sp/>problem<sp/>preprocessing</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">even<sp/>with<sp/>a<sp/>perfect<sp/>PDDL<sp/>code,<sp/>the<sp/>planner,<sp/>after<sp/>the<sp/>preprocessing<sp/>phase,<sp/>could<sp/>complain<sp/>a<sp/>mysterious<sp/>syntax<sp/>error...<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">maybe<sp/>you<sp/>wrote<sp/>this<sp/>in<sp/>the<sp/>original<sp/>problem:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```lisp</highlight></codeline>
<codeline><highlight class="normal">(:goal<sp/>(my-predicate<sp/>))</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">ROSPlan<sp/>will<sp/>process<sp/>it<sp/>into<sp/>this:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```lisp</highlight></codeline>
<codeline><highlight class="normal">(:goal<sp/>(and<sp/>(my-predicate<sp/>)))</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*that<sp/>is<sp/>syntactically<sp/>wrong!*<sp/>It<sp/>explains<sp/>the<sp/>strange<sp/>message.<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**but<sp/>notice<sp/>that**<sp/>this<sp/>is<sp/>just<sp/>a<sp/>warning,<sp/>therefore<sp/>you<sp/>can<sp/>skip<sp/>it.<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>ADL<sp/>support</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**ROSPlan<sp/>doesn&apos;t<sp/>have<sp/>a<sp/>complete<sp/>support<sp/>for<sp/>ADL**,<sp/>which<sp/>is<sp/>definitely<sp/>a<sp/>bad<sp/>news.<sp/>Classical<sp/>planning<sp/>isn&apos;t<sp/>supported,<sp/>in<sp/>particular<sp/>the<sp/>common<sp/>actions.<sp/>When<sp/>you<sp/>set<sp/>the<sp/>requirement<sp/>*ADL*,<sp/>the<sp/>message<sp/>is<sp/>this:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">A<sp/>problem<sp/>has<sp/>been<sp/>encountered,<sp/>and<sp/>the<sp/>planner<sp/>has<sp/>to<sp/>terminate.</highlight></codeline>
<codeline><highlight class="normal">-----------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="normal">Unfortunately,<sp/>at<sp/>present,<sp/>the<sp/>planner<sp/>does<sp/>not<sp/>fully<sp/>support<sp/>ADL</highlight></codeline>
<codeline><highlight class="normal">unless<sp/>in<sp/>the<sp/>rules<sp/>for<sp/>derived<sp/>predicates.<sp/><sp/>Only<sp/>two<sp/>aspects<sp/>of</highlight></codeline>
<codeline><highlight class="normal">ADL<sp/>can<sp/>be<sp/>used<sp/>in<sp/>action<sp/>definitions:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>forall<sp/>conditions,<sp/>containing<sp/>a<sp/>simple<sp/>conjunct<sp/>of<sp/>propositional<sp/>and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>numeric<sp/>facts;</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Conditional<sp/>(when...<sp/>)<sp/>effects,<sp/>and<sp/>then<sp/>only<sp/>with<sp/>numeric<sp/>conditions</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>and<sp/>numeric<sp/>consequences<sp/>on<sp/>values<sp/>which<sp/>do<sp/>not<sp/>appear<sp/>in<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>preconditions<sp/>of<sp/>actions.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>use<sp/>this<sp/>planner<sp/>with<sp/>your<sp/>problem,<sp/>you<sp/>will<sp/>have<sp/>to<sp/>reformulate<sp/>it<sp/>to</highlight></codeline>
<codeline><highlight class="normal">avoid<sp/>ADL.<sp/><sp/>Alternatively,<sp/>if<sp/>you<sp/>have<sp/>a<sp/>particularly<sp/>compelling<sp/>case</highlight></codeline>
<codeline><highlight class="normal">for<sp/>them,<sp/>please<sp/>contact<sp/>the<sp/>authors<sp/>to<sp/>discuss<sp/>it<sp/>with<sp/>them,<sp/>who<sp/>may<sp/>be<sp/>able<sp/>to</highlight></codeline>
<codeline><highlight class="normal">extend<sp/>the<sp/>planner<sp/>to<sp/>meet<sp/>your<sp/>needs.</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">the<sp/>funny<sp/>thing<sp/>is<sp/>that<sp/>*the<sp/>planners<sp/>support<sp/>ADL,<sp/>but<sp/>KB<sp/>does<sp/>not!*<sp/>And,<sp/>since<sp/>KB<sp/>parses<sp/>the<sp/>problem,<sp/>there&apos;s<sp/>no<sp/>way<sp/>to<sp/>parse<sp/>things<sp/>like<sp/>classical<sp/>planning,<sp/>unless<sp/>you<sp/>don&apos;t<sp/>want<sp/>to<sp/>throw<sp/>away<sp/>most<sp/>of<sp/>the<sp/>ROS<sp/>Plan<sp/>framework.<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Available<sp/>Planners</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**Attention**<sp/>:<sp/>Better<sp/>to<sp/>use<sp/>POPF,<sp/>as<sp/>suggested<sp/>in<sp/>the<sp/>official<sp/>tutorial.<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>POPF<sp/>help</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">see<sp/>[popf<sp/>infos](https://planning.wiki/ref/planners/popf)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**temporal<sp/>planner<sp/>(supporting<sp/>durative<sp/>actions<sp/>only)**.<sp/>Supported<sp/>requirements:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```lisp</highlight></codeline>
<codeline><highlight class="normal">(:requirements<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:strips<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:typing<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:equality<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:universal-preconditions<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:durative-actions</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**PLanning<sp/>interface**<sp/>:<sp/>`&lt;node<sp/>pkg=&quot;rosplan_planning_system&quot;<sp/>name=&quot;popf_planning_interface&quot;<sp/>type=&quot;popf_planning_interface&quot;&gt;`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">help<sp/>from<sp/>the<sp/>program:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">root@dbfbde77a543:~/ros_ws/src/ROSPlan/rosplan_planning_system/common/bin#<sp/>./popf<sp/>--help</highlight></codeline>
<codeline><highlight class="normal">Unrecognised<sp/>command-line<sp/>switch<sp/>&apos;-&apos;</highlight></codeline>
<codeline><highlight class="normal">POPF,<sp/>Release<sp/>2</highlight></codeline>
<codeline><highlight class="normal">By<sp/>releasing<sp/>this<sp/>code<sp/>we<sp/>imply<sp/>no<sp/>warranty<sp/>as<sp/>to<sp/>its<sp/>reliability</highlight></codeline>
<codeline><highlight class="normal">and<sp/>its<sp/>use<sp/>is<sp/>entirely<sp/>at<sp/>your<sp/>own<sp/>risk.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Usage:<sp/>./popf<sp/>[OPTIONS]<sp/>domainfile<sp/>problemfile<sp/>[planfile,<sp/>if<sp/>-r<sp/>specified]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Options<sp/>are:<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-citation<sp/><sp/><sp/>Display<sp/>citation<sp/>to<sp/>relevant<sp/>conference<sp/>paper<sp/>(ICAPS<sp/>2010);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-b<sp/><sp/><sp/><sp/><sp/><sp/>Disable<sp/>best-first<sp/>search<sp/>-<sp/>if<sp/>EHC<sp/>fails,<sp/>abort;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-E<sp/><sp/><sp/><sp/><sp/><sp/>Skip<sp/>EHC:<sp/>go<sp/>straight<sp/>to<sp/>best-first<sp/>search;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-e<sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>standard<sp/>EHC<sp/>instead<sp/>of<sp/>steepest<sp/>descent;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-h<sp/><sp/><sp/><sp/><sp/><sp/>Disable<sp/>helpful-action<sp/>pruning;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-k<sp/><sp/><sp/><sp/><sp/><sp/>Disable<sp/>compression-safe<sp/>action<sp/>detection;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-c<sp/><sp/><sp/><sp/><sp/><sp/>Disable<sp/>the<sp/>tie-breaking<sp/>in<sp/>RPG<sp/>that<sp/>favour<sp/>actions<sp/>that<sp/>slot<sp/>into<sp/>the<sp/>partial<sp/>order<sp/>earlier;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-S<sp/><sp/><sp/><sp/><sp/><sp/>Sort<sp/>initial<sp/>layer<sp/>facts<sp/>in<sp/>RPG<sp/>by<sp/>availability<sp/>order<sp/>(only<sp/>use<sp/>if<sp/>using<sp/>-c);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-m<sp/><sp/><sp/><sp/><sp/><sp/>Disable<sp/>the<sp/>tie-breaking<sp/>in<sp/>search<sp/>that<sp/>favours<sp/>plans<sp/>with<sp/>shorter<sp/>makespans;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-F<sp/><sp/><sp/><sp/><sp/><sp/>Full<sp/>FF<sp/>helpful<sp/>actions<sp/>(rather<sp/>than<sp/>just<sp/>those<sp/>in<sp/>the<sp/>RP<sp/>applicable<sp/>in<sp/>the<sp/>current<sp/>state);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-r<sp/><sp/><sp/><sp/><sp/><sp/>Read<sp/>in<sp/>a<sp/>plan<sp/>instead<sp/>of<sp/>planning;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-T<sp/><sp/><sp/><sp/><sp/><sp/>Rather<sp/>than<sp/>building<sp/>a<sp/>partial<sp/>order,<sp/>build<sp/>a<sp/>total-order</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-n<sp/><sp/><sp/><sp/><sp/><sp/>Optimise,<sp/>finding<sp/>many<sp/>solutions;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-v&lt;n&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Verbose<sp/>to<sp/>degree<sp/>n<sp/>(n<sp/>defaults<sp/>to<sp/>1<sp/>if<sp/>not<sp/>specified).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-L&lt;n&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>LP<sp/>verbose<sp/>to<sp/>degree<sp/>n<sp/>(n<sp/>defaults<sp/>to<sp/>1<sp/>if<sp/>not<sp/>specified).</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**Command<sp/>line<sp/>for<sp/>POPF**<sp/>:<sp/>for<sp/>normal<sp/>planning,</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">timeout<sp/>10<sp/>&lt;popf_path&gt;/popf<sp/>-v2<sp/>DOMAIN<sp/>PROBLEM<sp/>&gt;<sp/>plan.pddl</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*optimal<sp/>planning<sp/>if<sp/>possible*<sp/>:<sp/>(it<sp/>could<sp/>significantly<sp/>slow<sp/>down<sp/>the<sp/>planning<sp/>workflow)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">&lt;popf_path&gt;/popf<sp/>-n<sp/>-v2<sp/>DOMAIN<sp/>PROBLEM<sp/>&gt;<sp/>plan.pddl</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Metric-ff<sp/>help</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">see<sp/>[Metric-FF<sp/>on<sp/>planning.wiki](https://planning.wiki/ref/planners/metricff)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">see<sp/>also<sp/>the<sp/>[official<sp/>page<sp/>of<sp/>Metric-FF](https://fai.cs.uni-saarland.de/hoffmann/metric-ff.html)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**temporal<sp/>and<sp/>numerical<sp/>planning<sp/>(with<sp/>support<sp/>for<sp/>ADL)**.<sp/>Supported<sp/>requirements:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">(:requirements<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>===<sp/>PDDL1.1<sp/>===<sp/>;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:strips<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:typing<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:equality<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:existential-preconditions</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:universal-preconditions<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:conditional-effects</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:quantified-preconditions</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>===<sp/>PDDL2.1<sp/>===<sp/>;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:fluents</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:durative-actions</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">help<sp/>from<sp/>metric-ff:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">root@dbfbde77a543:~/ros_ws/src/ROSPlan/rosplan_planning_system/common/bin#<sp/>./Metric-FF<sp/>--help</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">usage<sp/>of<sp/>ff:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">OPTIONS<sp/><sp/><sp/>DESCRIPTIONS</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-p<sp/>&lt;str&gt;<sp/><sp/><sp/><sp/>Path<sp/>for<sp/>operator<sp/>and<sp/>fact<sp/>file</highlight></codeline>
<codeline><highlight class="normal">-o<sp/>&lt;str&gt;<sp/><sp/><sp/><sp/>Operator<sp/>file<sp/>name</highlight></codeline>
<codeline><highlight class="normal">-f<sp/>&lt;str&gt;<sp/><sp/><sp/><sp/>Fact<sp/>file<sp/>name</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-r<sp/>&lt;int&gt;<sp/><sp/><sp/><sp/>Random<sp/>seed<sp/>[used<sp/>for<sp/>random<sp/>restarts;<sp/>preset:<sp/>0]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-s<sp/>&lt;int&gt;<sp/><sp/><sp/><sp/>Search<sp/>configuration<sp/>[preset:<sp/>s=5];<sp/>&apos;+H&apos;:<sp/>helpful<sp/>actions<sp/>pruning</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>Standard-FF:<sp/>EHC+H<sp/>then<sp/>BFS<sp/>(cost<sp/>minimization:<sp/>NO)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/>BFS<sp/>(cost<sp/>minimization:<sp/>NO)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/>BFS+H<sp/>(cost<sp/>minimization:<sp/>NO)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/>Weighted<sp/>A*<sp/>(cost<sp/>minimization:<sp/>YES)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/><sp/><sp/><sp/><sp/>A*epsilon<sp/>(cost<sp/>minimization:<sp/>YES)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>5<sp/><sp/><sp/><sp/><sp/>EHC+H<sp/>then<sp/>A*epsilon<sp/>(cost<sp/>minimization:<sp/>YES)</highlight></codeline>
<codeline><highlight class="normal">-w<sp/>&lt;num&gt;<sp/><sp/><sp/><sp/>Set<sp/>weight<sp/>w<sp/>for<sp/>search<sp/>configs<sp/>3,4,5<sp/>[preset:<sp/>w=5]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-C<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Do<sp/>NOT<sp/>use<sp/>cost-minimizing<sp/>relaxed<sp/>plans<sp/>for<sp/>options<sp/>3,4,5</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-b<sp/>&lt;float&gt;<sp/><sp/>Fixed<sp/>upper<sp/>bound<sp/>on<sp/>solution<sp/>cost<sp/>(prune<sp/>based<sp/>on<sp/>g+hmax);<sp/>active<sp/>only<sp/>with<sp/>cost<sp/>minimization</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**Command<sp/>line<sp/>for<sp/>Metric-FF**<sp/>:<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">timeout<sp/>10<sp/>&lt;metric-ff_path&gt;/Metric-FF<sp/>-o<sp/>DOMAIN<sp/>-p<sp/>PROBLEM<sp/></highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
    </programlisting>
    <location file="robocluedo_rosplan/_docs/pddl-and-rosplan.md"/>
  </compounddef>
</doxygen>
