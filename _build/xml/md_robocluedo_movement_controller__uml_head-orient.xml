<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="md_robocluedo_movement_controller__uml_head-orient" kind="page">
    <compoundname>md_robocluedo_movement_controller__uml_head-orient</compoundname>
    <title>UML – head orientation PY</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><hruler/>
</para>
<para><programlisting filename=".toctree"><codeline><highlight class="normal">---</highlight></codeline>
<codeline><highlight class="normal">caption:<sp/>Contents</highlight></codeline>
<codeline><highlight class="normal">maxdepth:<sp/>3</highlight></codeline>
<codeline><highlight class="normal">---</highlight></codeline>
<codeline><highlight class="normal">./head-orient.md</highlight></codeline>
</programlisting></para>
<para><hruler/>
</para>
<sect1 id="md_robocluedo_movement_controller__uml_head-orient_1autotoc_md414">
<title>SCHEMA</title>
<para><programlisting filename=".uml"><codeline><highlight class="normal">@startuml</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&apos;&apos;&apos;<sp/>INFOS</highlight></codeline>
<codeline><highlight class="normal">title<sp/>NODE<sp/>head_orientation</highlight></codeline>
<codeline><highlight class="normal">skinparam<sp/>Padding<sp/>8</highlight></codeline>
<codeline><highlight class="normal">allow_mixing</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&apos;&apos;&apos;<sp/>COMPONENTS</highlight></codeline>
<codeline><highlight class="normal">database<sp/>&quot;ROS<sp/>parameter<sp/>server&quot;<sp/>as<sp/>PARAMETERS<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>&quot;des_yaw&quot;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">component<sp/>&quot;head_orientation&quot;<sp/>&lt;&lt;ROSPy<sp/>node&gt;&gt;<sp/>as<sp/>NODE_HEAD_ORIENT<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>&quot;head_orient_switch&quot;<sp/>as<sp/>NODE_HEAD_ORIENT.SWITCH</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>&quot;clbk_odom&quot;<sp/>as<sp/>NODE_HEAD_ORIENT.READ_ODOM</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">NODE_HEAD_ORIENT<sp/>&quot;get&quot;<sp/>&lt;--<sp/>PARAMETERS</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">()<sp/>&quot;/cmd_vel&quot;<sp/>as<sp/>TOPIC_VEL</highlight></codeline>
<codeline><highlight class="normal">NODE_HEAD_ORIENT<sp/>&quot;pub&quot;<sp/>--&gt;<sp/>TOPIC_VEL</highlight></codeline>
<codeline><highlight class="normal">note<sp/>on<sp/>link:<sp/>geometry_msgs/Twist.msg</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">()<sp/>&quot;/odom&quot;<sp/>as<sp/>TOPIC_ODOM</highlight></codeline>
<codeline><highlight class="normal">NODE_HEAD_ORIENT.READ_ODOM<sp/>&quot;sub&quot;<sp/>&lt;--<sp/>TOPIC_ODOM</highlight></codeline>
<codeline><highlight class="normal">note<sp/>on<sp/>link:<sp/>nav_msgs/Odometry.msg</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">()<sp/>&quot;/head_orient_switch&quot;<sp/>as<sp/>SRV_HEAD_ORIENT_SWITCH</highlight></codeline>
<codeline><highlight class="normal">NODE_HEAD_ORIENT.SWITCH<sp/>&quot;srv&quot;<sp/>--&gt;<sp/>SRV_HEAD_ORIENT_SWITCH</highlight></codeline>
<codeline><highlight class="normal">note<sp/>on<sp/>link:<sp/>std_srvs/SetBool.srv</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">@enduml</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="md_robocluedo_movement_controller__uml_head-orient_1autotoc_md415">
<title>HOW TO use the node – basic way</title>
<para>it requires another node listening for the odom channel and checking when to deactivate the service</para>
<para><itemizedlist>
<listitem><para>set <computeroutput>des_yaw</computeroutput> into the paramater server</para>
</listitem><listitem><para>activate the service with a request to <computeroutput>/head_orient_switch</computeroutput> of type <computeroutput>std_srvs/SetBool</computeroutput> (flag <computeroutput>SetBool.Request.data=True</computeroutput>)</para>
</listitem><listitem><para>... wait until the error is under your threshold ...</para>
</listitem><listitem><para>turn off the node (flag <computeroutput>SetBool.Request.data=False</computeroutput>) </para>
</listitem></itemizedlist>
</para>
</sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
