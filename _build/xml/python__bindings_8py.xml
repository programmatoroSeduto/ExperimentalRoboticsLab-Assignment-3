<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="python__bindings_8py" kind="file" language="Python">
    <compoundname>python_bindings.py</compoundname>
    <innernamespace refid="namespacepython__bindings">python_bindings</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacepython__bindings" refkind="compound"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>nose.tools<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>assert_equal</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cv_bridge</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="namespacepython__bindings_1a6fd97964ea8e1f29076990a56b3957d3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacepython__bindings_1a6fd97964ea8e1f29076990a56b3957d3" kindref="member">test_cvtColorForDisplay</ref>():</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>convert<sp/>label<sp/>image<sp/>to<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>label<sp/>=<sp/>np.zeros((480,<sp/>640),<sp/>dtype=np.int32)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>height,<sp/>width<sp/>=<sp/>label.shape[:2]</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>label_value<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>grid_num_y,<sp/>grid_num_x<sp/>=<sp/>3,<sp/>4</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>grid_row<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(grid_num_y):</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grid_size_y<sp/>=<sp/>height<sp/>/<sp/>grid_num_y</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_y<sp/>=<sp/>grid_size_y<sp/>*<sp/>grid_row</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_y<sp/>=<sp/>min_y<sp/>+<sp/>grid_size_y</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>grid_col<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(grid_num_x):</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grid_size_x<sp/>=<sp/>width<sp/>/<sp/>grid_num_x</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_x<sp/>=<sp/>grid_size_x<sp/>*<sp/>grid_col</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_x<sp/>=<sp/>min_x<sp/>+<sp/>grid_size_x</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label[int(min_y):int(max_y),<sp/>int(min_x):int(max_x)]<sp/>=<sp/>label_value</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label_value<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>label_viz<sp/>=<sp/><ref refid="namespacecv__bridge_1ac82f0aba256a6eac48cf4378a8990268" kindref="member">cv_bridge.cvtColorForDisplay</ref>(label,<sp/></highlight><highlight class="stringliteral">&apos;32SC1&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;bgr8&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_equal(label_viz.dtype,<sp/>np.uint8)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_equal(label_viz.min(),<sp/>0)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_equal(label_viz.max(),<sp/>255)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>that<sp/>mono8<sp/>conversion<sp/>returns<sp/>the<sp/>right<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>bridge<sp/>=<sp/><ref refid="classcv__bridge_1_1core_1_1_cv_bridge" kindref="compound">cv_bridge.CvBridge</ref>()</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>mono<sp/>=<sp/>np.random.random((100,<sp/>100))<sp/>*<sp/>255</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>mono<sp/>=<sp/>mono.astype(np.uint8)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>input_msg<sp/>=<sp/>bridge.cv2_to_imgmsg(mono,<sp/>encoding=</highlight><highlight class="stringliteral">&apos;mono8&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>bridge.imgmsg_to_cv2(input_msg,<sp/>desired_encoding=</highlight><highlight class="stringliteral">&apos;mono8&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_equal(output.shape,<sp/>(100,100))</highlight></codeline>
    </programlisting>
    <location file="robocluedo_dependencies/vision_opencv/cv_bridge/test/python_bindings.py"/>
  </compounddef>
</doxygen>
