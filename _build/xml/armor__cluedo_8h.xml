<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="armor__cluedo_8h" kind="file" language="C++">
    <compoundname>armor_cluedo.h</compoundname>
    <includes refid="armor__tools_8h" local="yes">armor_tools/armor_tools.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includedby refid="armor__cluedo_8cpp" local="yes">robocluedo_armor/src/armor_tools/armor_cluedo.cpp</includedby>
    <includedby refid="cluedo__armor__interface_8cpp" local="yes">robocluedo_armor/src/cluedo_armor_interface.cpp</includedby>
    <includedby refid="test__armor__cluedo_8cpp" local="yes">robocluedo_module_testing/src/test_armor/test_armor_cluedo.cpp</includedby>
    <includedby refid="test__armor__tools_8cpp" local="yes">robocluedo_module_testing/src/test_armor/test_armor_tools.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>robocluedo_armor/include/armor_tools/armor_cluedo.h</label>
        <link refid="armor__cluedo_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>armor_msgs/ArmorDirectiveRes.h</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="5">
        <label>armor_msgs/ArmorDirective.h</label>
      </node>
      <node id="10">
        <label>map</label>
      </node>
      <node id="12">
        <label>fstream</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="3">
        <label>ros/ros.h</label>
      </node>
      <node id="6">
        <label>armor_msgs/ArmorDirectiveReq.h</label>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>armor_tools/armor_tools.h</label>
        <link refid="armor__tools_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>armor_msgs/QueryItem.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>robocluedo_armor/include/armor_tools/armor_cluedo.h</label>
        <link refid="armor__cluedo_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>robocluedo_armor/src/cluedo_armor_interface.cpp</label>
        <link refid="cluedo__armor__interface_8cpp"/>
      </node>
      <node id="4">
        <label>robocluedo_module_testing/src/test_armor/test_armor_cluedo.cpp</label>
        <link refid="test__armor__cluedo_8cpp"/>
      </node>
      <node id="5">
        <label>robocluedo_module_testing/src/test_armor/test_armor_tools.cpp</label>
        <link refid="test__armor__tools_8cpp"/>
      </node>
      <node id="2">
        <label>robocluedo_armor/src/armor_tools/armor_cluedo.cpp</label>
        <link refid="armor__cluedo_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_armor_cluedo" prot="public">ArmorCluedo</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="armor__cluedo_8h_1a327627da2bf2dc69d12331fec53d12c1" prot="public" static="no" mutable="no">
        <type><ref refid="class_armor_cluedo" kindref="compound">ArmorCluedo</ref></type>
        <definition>ArmorCluedo get_predicate</definition>
        <argsstring></argsstring>
        <name>get_predicate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_armor/include/armor_tools/armor_cluedo.h" line="343" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>additional aRMOR C++ interface </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="authors"><para>Francesco Ganci (S4143910) </para>
</simplesect>
<simplesect kind="version"><para>v1.0</para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_armor_cluedo" kindref="compound">ArmorCluedo</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_armor_tools" kindref="compound">ArmorTools</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/********************************************/</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor">#ifndef<sp/>__H_ARMOR_CLUEDO_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__H_ARMOR_CLUEDO_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="armor__tools_8h" kindref="compound">armor_tools/armor_tools.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/********************************************/</highlight></codeline>
<codeline lineno="56" refid="class_armor_cluedo" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_armor_cluedo" kindref="compound">ArmorCluedo</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_armor_tools" kindref="compound">ArmorTools</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/********************************************/</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_armor_cluedo_1a87fe995ebd26c4618a4b962e47dd3a40" kindref="member">ArmorCluedo</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debugmode<sp/>=<sp/><ref refid="armor__tools_8h_1a15b43f9d816bb354831481b25c069d2e" kindref="member">ARMOR_DEFAULT_DEBUGMODE</ref><sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_armor_cluedo_1a1a6e15d936d2d6e1279d86e5dbaa9c22" kindref="member">~ArmorCluedo</ref>(<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/********************************************/</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_armor_cluedo_1a66ce2d9f5c665ab14761233b32ab1ec6" kindref="member">Init</ref>(<sp/>std::string<sp/>ontologyPath<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>========<sp/>individuals<sp/>and<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>methods<sp/>for<sp/>adding<sp/>individuals<sp/>to<sp/>the<sp/>ontology</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/********************************************/</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_armor_cluedo_1ad29930fec7803aed87b7244e73b98bff" kindref="member">AddIndiv</ref>(<sp/>std::string<sp/>indivname,<sp/>std::string<sp/>classname,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>makeDisjoint<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/********************************************/</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="class_armor_cluedo_1a49216d015f97a9d510406a90e8c1fe30" kindref="member">GetClassOfIndiv</ref>(<sp/>std::string<sp/>indivname,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deep<sp/>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/********************************************/</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="class_armor_cluedo_1afef8229a755f495f008bfe4630a745fa" kindref="member">GetIndivOfClass</ref>(<sp/>std::string<sp/>classname<sp/>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/********************************************/</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_armor_cluedo_1a2086082362b61607798d6f968c263f9e" kindref="member">ExistsIndiv</ref>(<sp/>std::string<sp/>indivname<sp/>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>========<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>methods<sp/>for<sp/>checking<sp/>and<sp/>adding<sp/>properties<sp/>between<sp/>individuals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/********************************************/</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_armor_cluedo_1ad179234fd676874a09c267abb416d2da" kindref="member">SetObjectProperty</ref>(<sp/>std::string<sp/>prop,<sp/>std::string<sp/>Aelem,<sp/>std::string<sp/>Belem<sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/********************************************/</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="class_armor_cluedo_1a580aef3f0bf9dd1affd06c588e731ff5" kindref="member">GetValuedOfIndiv</ref>(<sp/>std::string<sp/>prop,<sp/>std::string<sp/>indivname<sp/>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>========<sp/>hypotheses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>methods<sp/>for<sp/>formulating<sp/>and<sp/>working<sp/>with<sp/>hypotheses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/********************************************/</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="class_armor_cluedo_1aaf1832ed634a017c48e26c48f58c5f68" kindref="member">FindCompleteHypotheses</ref>(<sp/>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/********************************************/</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="class_armor_cluedo_1ab278ac3aaffc4c6aceaf3bfb8d5186af" kindref="member">FindInconsistentHypotheses</ref>(<sp/>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/********************************************/</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_armor_cluedo_1a4ae659375e7a6d9564973718ece248e2" kindref="member">RemoveHypothesis</ref>(<sp/>std::string<sp/>hypTag<sp/>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>========<sp/>utilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>general-purpose<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/********************************************/</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_armor_cluedo_1a6f824ec2cf4759952145f7f1d11e516c" kindref="member">FilterValue</ref>(<sp/>std::string<sp/>raw<sp/>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/********************************************/</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="class_armor_cluedo_1a76a60417cfc01397a6db462904139873" kindref="member">FilterVector</ref>(<sp/>std::vector&lt;std::string&gt;&amp;<sp/>itemlist<sp/>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>the<sp/>entities<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>individuals;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>removed<sp/>hypotheses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>DiscardHypotheses;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>a<sp/>string<sp/>exists<sp/>in<sp/>one<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ExistsItem(<sp/>std::string<sp/>item,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>container<sp/>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>track<sp/>individual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TrackIndiv(<sp/>std::string<sp/>indivname<sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disjoint<sp/>all<sp/>the<sp/>individuals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DisjointAllIndiv(<sp/>std::string<sp/>from<sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>search<sp/>for<sp/>a<sp/>specific<sp/>iterator<sp/>on<sp/>a<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>it<sp/>return<sp/>vector::end()<sp/>if<sp/>the<sp/>element<sp/>is<sp/>not<sp/>contained</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;::iterator<sp/>GetPositionOf(<sp/>std::string<sp/>tag,<sp/>std::vector&lt;std::string&gt;&amp;<sp/>list<sp/>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal">};</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="robocluedo_armor/include/armor_tools/armor_cluedo.h"/>
  </compounddef>
</doxygen>
