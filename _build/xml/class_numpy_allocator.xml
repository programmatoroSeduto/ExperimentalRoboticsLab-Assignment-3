<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_numpy_allocator" kind="class" language="C++" prot="public">
    <compoundname>NumpyAllocator</compoundname>
    <basecompoundref prot="public" virt="non-virtual">MatAllocator</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_numpy_allocator_1af594805363d4aa048adae8edcd53c4bf" prot="public" static="no" mutable="no">
        <type>const MatAllocator *</type>
        <definition>const MatAllocator* NumpyAllocator::stdAllocator</definition>
        <argsstring></argsstring>
        <name>stdAllocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/module_opencv4.cpp" line="160" column="24" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/module_opencv4.cpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_numpy_allocator_1ab3b00d82b77307073d36e8739738c126" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NumpyAllocator::NumpyAllocator</definition>
        <argsstring>()</argsstring>
        <name>NumpyAllocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/module_opencv4.cpp" line="99" column="5" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/module_opencv4.cpp" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_numpy_allocator_1ab4628f343d91ae7bca5645fbc36b4779" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NumpyAllocator::~NumpyAllocator</definition>
        <argsstring>()</argsstring>
        <name>~NumpyAllocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/module_opencv4.cpp" line="100" column="5" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/module_opencv4.cpp" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_numpy_allocator_1a4b0b5445873d10d23190d8878fe7c6ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>UMatData *</type>
        <definition>UMatData* NumpyAllocator::allocate</definition>
        <argsstring>(PyObject *o, int dims, const int *sizes, int type, size_t *step) const</argsstring>
        <name>allocate</name>
        <param>
          <type>PyObject *</type>
          <declname>o</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dims</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>sizes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/module_opencv4.cpp" line="102" column="14" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/module_opencv4.cpp" bodystart="102" bodyend="113"/>
        <references refid="run-the-project_8md_8txt_1a81eeb1c188ea41368eb194317402cfc0" compoundref="run-the-project_8md_8txt" startline="4">step</references>
        <references refid="erl2-oracle-user-manual_8md_8txt_1a09d0680988bbc4127cbfa7c02b57c0b8" compoundref="erl2-oracle-user-manual_8md_8txt" startline="126">type</references>
      </memberdef>
      <memberdef kind="function" id="class_numpy_allocator_1a72a6a1d57bf1ab257c75c1e52efcd51d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>UMatData *</type>
        <definition>UMatData* NumpyAllocator::allocate</definition>
        <argsstring>(int dims0, const int *sizes, int type, void *data, size_t *step, AccessFlag flags, UMatUsageFlags usageFlags) const</argsstring>
        <name>allocate</name>
        <param>
          <type>int</type>
          <declname>dims0</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>sizes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>step</declname>
        </param>
        <param>
          <type>AccessFlag</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>UMatUsageFlags</type>
          <declname>usageFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/module_opencv4.cpp" line="115" column="14" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/module_opencv4.cpp" bodystart="115" bodyend="142"/>
        <references refid="erl2-oracle-user-manual_8md_8txt_1a09d0680988bbc4127cbfa7c02b57c0b8" compoundref="erl2-oracle-user-manual_8md_8txt" startline="126">type</references>
        <references refid="run-the-project_8md_8txt_1a81eeb1c188ea41368eb194317402cfc0" compoundref="run-the-project_8md_8txt" startline="4">step</references>
      </memberdef>
      <memberdef kind="function" id="class_numpy_allocator_1a93f968ee499dacc0c207ededf0383a5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool NumpyAllocator::allocate</definition>
        <argsstring>(UMatData *u, AccessFlag accessFlags, UMatUsageFlags usageFlags) const</argsstring>
        <name>allocate</name>
        <param>
          <type>UMatData *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>AccessFlag</type>
          <declname>accessFlags</declname>
        </param>
        <param>
          <type>UMatUsageFlags</type>
          <declname>usageFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/module_opencv4.cpp" line="144" column="10" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/module_opencv4.cpp" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_numpy_allocator_1ab3775daa783f9cde50129678de92eaaf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NumpyAllocator::deallocate</definition>
        <argsstring>(UMatData *u) const</argsstring>
        <name>deallocate</name>
        <param>
          <type>UMatData *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/module_opencv4.cpp" line="149" column="10" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/module_opencv4.cpp" bodystart="149" bodyend="158"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>NumpyAllocator</label>
        <link refid="class_numpy_allocator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>MatAllocator</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>NumpyAllocator</label>
        <link refid="class_numpy_allocator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>stdAllocator</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>const</label>
      </node>
      <node id="2">
        <label>MatAllocator</label>
      </node>
    </collaborationgraph>
    <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/module_opencv4.cpp" line="92" column="1" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/module_opencv4.cpp" bodystart="91" bodyend="161"/>
    <listofallmembers>
      <member refid="class_numpy_allocator_1a4b0b5445873d10d23190d8878fe7c6ef" prot="public" virt="non-virtual"><scope>NumpyAllocator</scope><name>allocate</name></member>
      <member refid="class_numpy_allocator_1a72a6a1d57bf1ab257c75c1e52efcd51d" prot="public" virt="non-virtual"><scope>NumpyAllocator</scope><name>allocate</name></member>
      <member refid="class_numpy_allocator_1a93f968ee499dacc0c207ededf0383a5c" prot="public" virt="non-virtual"><scope>NumpyAllocator</scope><name>allocate</name></member>
      <member refid="class_numpy_allocator_1ab3775daa783f9cde50129678de92eaaf" prot="public" virt="non-virtual"><scope>NumpyAllocator</scope><name>deallocate</name></member>
      <member refid="class_numpy_allocator_1ab3b00d82b77307073d36e8739738c126" prot="public" virt="non-virtual"><scope>NumpyAllocator</scope><name>NumpyAllocator</name></member>
      <member refid="class_numpy_allocator_1af594805363d4aa048adae8edcd53c4bf" prot="public" virt="non-virtual"><scope>NumpyAllocator</scope><name>stdAllocator</name></member>
      <member refid="class_numpy_allocator_1ab4628f343d91ae7bca5645fbc36b4779" prot="public" virt="non-virtual"><scope>NumpyAllocator</scope><name>~NumpyAllocator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
