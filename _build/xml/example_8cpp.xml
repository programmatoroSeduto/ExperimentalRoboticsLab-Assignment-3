<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="example_8cpp" kind="file" language="C++">
    <compoundname>example.cpp</compoundname>
    <includes local="no">ros/ros.h</includes>
    <includes refid="cv__bridge_8h" local="no">cv_bridge/cv_bridge.h</includes>
    <includes local="no">sensor_msgs/image_encodings.h</includes>
    <includes local="no">opencv2/imgproc/imgproc.hpp</includes>
    <includes local="no">opencv2/highgui/highgui.hpp</includes>
    <incdepgraph>
      <node id="7">
        <label>ros/static_assert.h</label>
      </node>
      <node id="3">
        <label>cv_bridge/cv_bridge.h</label>
        <link refid="cv__bridge_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stdexcept</label>
      </node>
      <node id="8">
        <label>opencv2/core/core.hpp</label>
      </node>
      <node id="4">
        <label>sensor_msgs/Image.h</label>
      </node>
      <node id="6">
        <label>sensor_msgs/image_encodings.h</label>
      </node>
      <node id="10">
        <label>opencv2/imgproc/types_c.h</label>
      </node>
      <node id="9">
        <label>opencv2/imgproc/imgproc.hpp</label>
      </node>
      <node id="2">
        <label>ros/ros.h</label>
      </node>
      <node id="12">
        <label>opencv2/highgui/highgui.hpp</label>
      </node>
      <node id="5">
        <label>sensor_msgs/CompressedImage.h</label>
      </node>
      <node id="1">
        <label>robocluedo_dependencies/bridge_example/src/example.cpp</label>
        <link refid="example_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_image_converter" prot="public">ImageConverter</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="example_8cpp_1ac8b1805a7073a3ed84d89f2aaef3f254" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string OPENCV_WINDOW</definition>
        <argsstring></argsstring>
        <name>OPENCV_WINDOW</name>
        <initializer>= &quot;Image window&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/bridge_example/src/example.cpp" line="7" column="26" bodyfile="robocluedo_dependencies/bridge_example/src/example.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="example_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/bridge_example/src/example.cpp" line="57" column="5" bodyfile="robocluedo_dependencies/bridge_example/src/example.cpp" bodystart="57" bodyend="63"/>
        <references refid="main-launch-file_8md_8txt_1acb5acd5cc43c0b557a25f3a47407448b" compoundref="main-launch-file_8md_8txt" startline="38">init</references>
        <references refid="moveit-snippets_8md_8txt_1a94746a96dcd774d592c90c07aec27a7d" compoundref="moveit-snippets_8md_8txt" startline="125" endline="144">spin</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;ros/ros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cv__bridge_8h" kindref="compound">cv_bridge/cv_bridge.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sensor_msgs/image_encodings.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/imgproc/imgproc.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/highgui/highgui.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>OPENCV_WINDOW<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Image<sp/>window&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="class_image_converter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_image_converter" kindref="compound">ImageConverter</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>ros::NodeHandle<sp/>nh_;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>ros::Subscriber<sp/>image_sub_;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>ros::Publisher<sp/>image_pub_;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16" refid="class_image_converter_1a0823099e2fca4a0dc13137106d64ffa0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_image_converter_1a0823099e2fca4a0dc13137106d64ffa0" kindref="member">ImageConverter</ref>()</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Subscrive<sp/>to<sp/>input<sp/>video<sp/>feed<sp/>and<sp/>publish<sp/>output<sp/>video<sp/>feed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>image_sub_<sp/>=<sp/>nh_.subscribe(</highlight><highlight class="stringliteral">&quot;/robot/camera1/image_raw&quot;</highlight><highlight class="normal">,<sp/>1,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="class_image_converter_1ab70b33720d4f8b71be32e9e17201d0a3" kindref="member">ImageConverter::imageCb</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>image_pub_<sp/>=<sp/>nh_.advertise&lt;sensor_msgs::Image&gt;(</highlight><highlight class="stringliteral">&quot;/image_converter/output_video&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::namedWindow(OPENCV_WINDOW);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_image_converter_1a19280eaf7cc9e8251573174f5bfc2422" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_image_converter_1a19280eaf7cc9e8251573174f5bfc2422" kindref="member">~ImageConverter</ref>()</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::destroyWindow(OPENCV_WINDOW);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_image_converter_1ab70b33720d4f8b71be32e9e17201d0a3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_image_converter_1ab70b33720d4f8b71be32e9e17201d0a3" kindref="member">imageCb</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sensor_msgs::ImageConstPtr&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecv__bridge_1a1be6ad7c0a2d37ef773198f59ed2f456" kindref="member">cv_bridge::CvImagePtr</ref><sp/>cv_ptr;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv_ptr<sp/>=<sp/><ref refid="namespacecv__bridge_1acbf2da402f4d3e505613e95b5a2aed35" kindref="member">cv_bridge::toCvCopy</ref>(msg,<sp/>sensor_msgs::image_encodings::BGR8);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="classcv__bridge_1_1_exception" kindref="compound">cv_bridge::Exception</ref>&amp;<sp/>e)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;cv_bridge<sp/>exception:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>e.what());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>an<sp/>example<sp/>circle<sp/>on<sp/>the<sp/>video<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cv_ptr-&gt;image.rows<sp/>&gt;<sp/>60<sp/>&amp;&amp;<sp/>cv_ptr-&gt;image.cols<sp/>&gt;<sp/>60)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv::circle(cv_ptr-&gt;image,<sp/>cv::Point(50,<sp/>50),<sp/>10,<sp/>CV_RGB(255,0,0));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>GUI<sp/>Window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::imshow(OPENCV_WINDOW,<sp/>cv_ptr-&gt;image);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::waitKey(3);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>modified<sp/>video<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>image_pub_.publish(cv_ptr-&gt;toImageMsg());</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="example_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="example_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="main-launch-file_8md_8txt_1acb5acd5cc43c0b557a25f3a47407448b" kindref="member">ros::init</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;image_converter&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="class_image_converter" kindref="compound">ImageConverter</ref><sp/>ic;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="moveit-snippets_8md_8txt_1a94746a96dcd774d592c90c07aec27a7d" kindref="member">ros::spin</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="robocluedo_dependencies/bridge_example/src/example.cpp"/>
  </compounddef>
</doxygen>
