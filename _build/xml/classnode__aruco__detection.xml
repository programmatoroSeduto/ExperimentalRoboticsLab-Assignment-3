<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classnode__aruco__detection" kind="class" language="C++" prot="public">
    <compoundname>node_aruco_detection</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnode__aruco__detection_1a607e45faf7da1b9631c8764159626ce6" prot="private" static="no" mutable="no">
        <type>ros::NodeHandle</type>
        <definition>ros::NodeHandle node_aruco_detection::nh</definition>
        <argsstring></argsstring>
        <name>nh</name>
        <briefdescription>
<para>ROS node handle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="444" column="21" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__aruco__detection_1a35a662c7ca9cf445b6aec1af579c88b4" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex node_aruco_detection::mtx_detect</definition>
        <argsstring></argsstring>
        <name>mtx_detect</name>
        <briefdescription>
<para>control semaphore for detection </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="447" column="12" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__aruco__detection_1a842ac54f01c3d0cfc3f05f295c475d23" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex node_aruco_detection::mtx_show</definition>
        <argsstring></argsstring>
        <name>mtx_show</name>
        <briefdescription>
<para>control semaphore for image output </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="450" column="12" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__aruco__detection_1a05839e60eb3be7e53bd79b8d3a1db58e" prot="private" static="no" mutable="no">
        <type><ref refid="classaruco_1_1_camera_parameters" kindref="compound">aruco::CameraParameters</ref></type>
        <definition>aruco::CameraParameters node_aruco_detection::camParam</definition>
        <argsstring></argsstring>
        <name>camParam</name>
        <briefdescription>
<para>arUco camera parameters </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="453" column="25" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__aruco__detection_1ad9b4e3f51743ba8f25e32bdbaaffcfb9" prot="private" static="no" mutable="no">
        <type>image_transport::ImageTransport</type>
        <definition>image_transport::ImageTransport node_aruco_detection::it</definition>
        <argsstring></argsstring>
        <name>it</name>
        <briefdescription>
<para>image transport object </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="456" column="33" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__aruco__detection_1a92babd4135c3e496f0150832641c5949" prot="private" static="no" mutable="no">
        <type>image_transport::Subscriber</type>
        <definition>image_transport::Subscriber node_aruco_detection::image_sub_arm</definition>
        <argsstring></argsstring>
        <name>image_sub_arm</name>
        <briefdescription>
<para>input img subscriber : arm </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="459" column="29" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="459" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__aruco__detection_1a969bcfdc8aa6b8278101ebd009fa7b5a" prot="private" static="no" mutable="no">
        <type>image_transport::Subscriber</type>
        <definition>image_transport::Subscriber node_aruco_detection::image_sub_front</definition>
        <argsstring></argsstring>
        <name>image_sub_front</name>
        <briefdescription>
<para>input img subscriber : front </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="462" column="29" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__aruco__detection_1a74171c58eb719cf39845f1513e632c2c" prot="private" static="no" mutable="no">
        <type>image_transport::Subscriber</type>
        <definition>image_transport::Subscriber node_aruco_detection::image_sub_left</definition>
        <argsstring></argsstring>
        <name>image_sub_left</name>
        <briefdescription>
<para>input img subscriber : left </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="465" column="29" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__aruco__detection_1a7071274252b9a2b67cabde02d5461e3d" prot="private" static="no" mutable="no">
        <type>image_transport::Subscriber</type>
        <definition>image_transport::Subscriber node_aruco_detection::image_sub_right</definition>
        <argsstring></argsstring>
        <name>image_sub_right</name>
        <briefdescription>
<para>input img subscriber : right </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="468" column="29" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__aruco__detection_1abcb4bc61aeaf2ddaa7abfb6b24751aa8" prot="private" static="no" mutable="no">
        <type><ref refid="classaruco_1_1_marker_detector" kindref="compound">aruco::MarkerDetector</ref></type>
        <definition>aruco::MarkerDetector node_aruco_detection::mDetector</definition>
        <argsstring></argsstring>
        <name>mDetector</name>
        <briefdescription>
<para>arUco detector </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="471" column="23" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__aruco__detection_1abef36bba20a94ad0b3484248d3f26ff3" prot="private" static="no" mutable="no">
        <type><ref refid="robocluedo__dependencies_2vision__opencv_2cv__bridge_2_c_make_lists_8txt_1ae327ecbeb73df2f6640391f6d8775b50" kindref="member">std::set</ref>&lt; int &gt;</type>
        <definition>std::set&lt;int&gt; node_aruco_detection::ids</definition>
        <argsstring></argsstring>
        <name>ids</name>
        <briefdescription>
<para>the set of the found IDs </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="474" column="10" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__aruco__detection_1a8eb6d8f441c15d215edc8d295fd2247c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; node_aruco_detection::ids_to_publish</definition>
        <argsstring></argsstring>
        <name>ids_to_publish</name>
        <briefdescription>
<para>the list of IDs to publish </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="477" column="13" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__aruco__detection_1a9e009be377fb7c72e22680c8cb89bcd9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int node_aruco_detection::last_id_published</definition>
        <argsstring></argsstring>
        <name>last_id_published</name>
        <initializer>= -1</initializer>
        <briefdescription>
<para>the last index sent in the vector </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="480" column="5" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__aruco__detection_1a15f7939a0f2e47cd625295885c7fee0f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool node_aruco_detection::useCamInfo</definition>
        <argsstring></argsstring>
        <name>useCamInfo</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>use the camera parameters </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="483" column="6" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="483" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__aruco__detection_1a43021ff3d35aab373deaf728672f13d8" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int node_aruco_detection::current_camera_id</definition>
        <argsstring></argsstring>
        <name>current_camera_id</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>current camera showing the image on the window </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="486" column="5" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__aruco__detection_1a07f1b22ff6913e2e35b97e31b6551bd3" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher node_aruco_detection::pub_marker_ids</definition>
        <argsstring></argsstring>
        <name>pub_marker_ids</name>
        <briefdescription>
<para>marker ids publisher </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="489" column="16" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__aruco__detection_1af32540c6557c11f137290ed78a01ec45" prot="private" static="no" mutable="no">
        <type>ros::Rate</type>
        <definition>ros::Rate node_aruco_detection::max_sub_rate</definition>
        <argsstring></argsstring>
        <name>max_sub_rate</name>
        <briefdescription>
<para>max rate of the subscribers </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="492" column="11" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="492" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnode__aruco__detection_1a4bb177d7130f384e5e6a35b6fa05b658" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>node_aruco_detection::node_aruco_detection</definition>
        <argsstring>()</argsstring>
        <name>node_aruco_detection</name>
        <briefdescription>
<para>class constructor </para>
        </briefdescription>
        <detaileddescription>
<para>the constructor opens all the subscriptions with the cameras, and instanciates the publisher that will transmit the new IDs when identified.</para>
<para>done that, the constructor opens the window.</para>
<para><simplesect kind="note"><para>the class uses the ImageTransport which enables the class to use a compressed way to read the images.</para>
</simplesect>
<xrefsect id="todo_1_todo000049"><xreftitle>Todo</xreftitle><xrefdescription><para>let the user decide whether to open the window and when to close it. It could be a good idea to create a server for switching the window. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="125" column="1" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="125" bodyend="143"/>
        <references refid="aruco__detection_8cpp_1a4ba63f78da2ebe3c9c57b58d60ce1395" compoundref="aruco__detection_8cpp" startline="79">TOPIC_CAMERA_ARM</references>
        <references refid="classnode__aruco__detection_1a41fd24f3c07665cf1299c29bc8707edd" compoundref="aruco__detection_8cpp" startline="247" endline="261">cbk_cam_arm</references>
        <references refid="aruco__detection_8cpp_1af40335a3070dd5846e1464763160925e" compoundref="aruco__detection_8cpp" startline="85">TOPIC_CAMERA_FRONT</references>
        <references refid="classnode__aruco__detection_1ae51572f59a8124dfe8cdca3514c9ffda" compoundref="aruco__detection_8cpp" startline="272" endline="286">cbk_cam_front</references>
        <references refid="aruco__detection_8cpp_1a065c688f7ac81f6c2818cf3f7c152b4c" compoundref="aruco__detection_8cpp" startline="91">TOPIC_CAMERA_LEFT</references>
        <references refid="classnode__aruco__detection_1a657f1b6d746318bf2504e0bca06f62e6" compoundref="aruco__detection_8cpp" startline="297" endline="311">cbk_cam_left</references>
        <references refid="aruco__detection_8cpp_1a439910ff4133e37a0cdd868663638f93" compoundref="aruco__detection_8cpp" startline="97">TOPIC_CAMERA_RIGHT</references>
        <references refid="classnode__aruco__detection_1ad41c720ea1e290da6664bca32bef07bc" compoundref="aruco__detection_8cpp" startline="322" endline="336">cbk_cam_right</references>
        <references refid="aruco__detection_8cpp_1aaff6821abb69310b0f85ec06ef42e3ff" compoundref="aruco__detection_8cpp" startline="100">TOPIC_DETECTED_IDS</references>
      </memberdef>
      <memberdef kind="function" id="classnode__aruco__detection_1a407c112c6ab8989c48ee3e55822bdb7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>node_aruco_detection::~node_aruco_detection</definition>
        <argsstring>()</argsstring>
        <name>~node_aruco_detection</name>
        <briefdescription>
<para>class destructor </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000050"><xreftitle>Todo</xreftitle><xrefdescription><para>see the constructor: it could be a good idea to provide the &quot;user&quot; the control on the window. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="153" column="1" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="153" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classnode__aruco__detection_1a1b672639359e9237e9b154f1901341b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void node_aruco_detection::spin</definition>
        <argsstring>()</argsstring>
        <name>spin</name>
        <briefdescription>
<para>working cycle of the node </para>
        </briefdescription>
        <detaileddescription>
<para>This working cycle is executed in concurrency with the receiving and the detection from the cameras signals. Its main purpose is to detect when the set of IDs has changed size (i.e. when there are new IDs to send) and in that case, to publish them.</para>
<para>This cycle also changes the video stream each UPDATE_TIME seconds.</para>
<para><simplesect kind="attention"><para>Very important to point out that <emphasis>the node sends only the new IDs without repetitions</emphasis>. The node could detect the same marker a number of times, but only one message is sent, corresponding to the first succeeded detection. This is another trick to not waste time: it is important to keep this node as much efficient as possible. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="177" column="6" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="177" bodyend="220"/>
        <references refid="aruco__detection_8cpp_1af706869d3f5c53d54533ee9eb6cd0450" compoundref="aruco__detection_8cpp" startline="67">UPDATE_TIME</references>
        <references refid="erl2-oracle-user-manual_8md_8txt_1a060ea53faa9c0b619cd0d5ccec07b0fe" compoundref="erl2-oracle-user-manual_8md_8txt" startline="127">r</references>
        <references refid="examples__tools_8md_8txt_1a706b8cd9925dea99a8c064f39110620d">ROS_INFO_STREAM</references>
        <referencedby refid="aruco__detection_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="aruco__detection_8cpp" startline="534" endline="549">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnode__aruco__detection_1a41fd24f3c07665cf1299c29bc8707edd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void node_aruco_detection::cbk_cam_arm</definition>
        <argsstring>(const sensor_msgs::ImageConstPtr &amp;msg)</argsstring>
        <name>cbk_cam_arm</name>
        <param>
          <type>const sensor_msgs::ImageConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>subscription to the camera topic </para>
        </briefdescription>
        <detaileddescription>
<para>The node has four subscription callbacks, one for each camera image topic, each one with pretty much the same structure: read the image, try to perform the detection, try to send the output to the window, and finally wait a bit.</para>
<para>In particular, the last waiting ensures that the update rate of the camera isn&apos;t going to be not so high. See MAX_SUB_RATE, which is the maximum frequency the subscriber can read the images. See also the class constructor, which ggives queue size 1 to all the topics: this causes a image drop if the rate from the cameras is too much high.</para>
<para>There are other workarounds for overcome the performance issue, see the method for the detection. The point is that <emphasis>the arUco detection process is quite heavy to carry out</emphasis>: if the cameras would run the detection at each frame with a too much high frequency, the application would perform poorly.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message from the camera </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="247" column="6" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="247" bodyend="261"/>
        <references refid="namespacecv__bridge_1acbf2da402f4d3e505613e95b5a2aed35" compoundref="cv__bridge_8cpp" startline="425" endline="429">cv_bridge::toCvCopy</references>
        <references refid="classnode__aruco__detection_1accadff48488a2770614fc04f33857e29" compoundref="aruco__detection_8cpp" startline="368" endline="395">aruco_detect</references>
        <references refid="aruco__detection_8cpp_1a31b2db41e3b0d0548633efd91011c43f" compoundref="aruco__detection_8cpp" startline="76">ID_CAMERA_ARM</references>
        <references refid="classnode__aruco__detection_1a3a90b963c7ae7791932c683bdfb61641" compoundref="aruco__detection_8cpp" startline="412" endline="439">show_camera</references>
        <referencedby refid="classnode__aruco__detection_1a4bb177d7130f384e5e6a35b6fa05b658" compoundref="aruco__detection_8cpp" startline="125" endline="143">node_aruco_detection</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnode__aruco__detection_1ae51572f59a8124dfe8cdca3514c9ffda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void node_aruco_detection::cbk_cam_front</definition>
        <argsstring>(const sensor_msgs::ImageConstPtr &amp;msg)</argsstring>
        <name>cbk_cam_front</name>
        <param>
          <type>const sensor_msgs::ImageConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>sub front camera callback </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message from the camera</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classnode__aruco__detection_1a41fd24f3c07665cf1299c29bc8707edd" kindref="member">cbk_cam_arm</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="272" column="6" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="272" bodyend="286"/>
        <references refid="namespacecv__bridge_1acbf2da402f4d3e505613e95b5a2aed35" compoundref="cv__bridge_8cpp" startline="425" endline="429">cv_bridge::toCvCopy</references>
        <references refid="classnode__aruco__detection_1accadff48488a2770614fc04f33857e29" compoundref="aruco__detection_8cpp" startline="368" endline="395">aruco_detect</references>
        <references refid="aruco__detection_8cpp_1a09688581757864b3a229e25fa08c5cbd" compoundref="aruco__detection_8cpp" startline="82">ID_CAMERA_FRONT</references>
        <references refid="classnode__aruco__detection_1a3a90b963c7ae7791932c683bdfb61641" compoundref="aruco__detection_8cpp" startline="412" endline="439">show_camera</references>
        <referencedby refid="classnode__aruco__detection_1a4bb177d7130f384e5e6a35b6fa05b658" compoundref="aruco__detection_8cpp" startline="125" endline="143">node_aruco_detection</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnode__aruco__detection_1a657f1b6d746318bf2504e0bca06f62e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void node_aruco_detection::cbk_cam_left</definition>
        <argsstring>(const sensor_msgs::ImageConstPtr &amp;msg)</argsstring>
        <name>cbk_cam_left</name>
        <param>
          <type>const sensor_msgs::ImageConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>sub left camera callback </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message from the camera</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classnode__aruco__detection_1a41fd24f3c07665cf1299c29bc8707edd" kindref="member">cbk_cam_arm</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="297" column="6" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="297" bodyend="311"/>
        <references refid="namespacecv__bridge_1acbf2da402f4d3e505613e95b5a2aed35" compoundref="cv__bridge_8cpp" startline="425" endline="429">cv_bridge::toCvCopy</references>
        <references refid="classnode__aruco__detection_1accadff48488a2770614fc04f33857e29" compoundref="aruco__detection_8cpp" startline="368" endline="395">aruco_detect</references>
        <references refid="aruco__detection_8cpp_1a5a71dd8f7078d4af4bdf41b047dc5205" compoundref="aruco__detection_8cpp" startline="88">ID_CAMERA_LEFT</references>
        <references refid="classnode__aruco__detection_1a3a90b963c7ae7791932c683bdfb61641" compoundref="aruco__detection_8cpp" startline="412" endline="439">show_camera</references>
        <referencedby refid="classnode__aruco__detection_1a4bb177d7130f384e5e6a35b6fa05b658" compoundref="aruco__detection_8cpp" startline="125" endline="143">node_aruco_detection</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnode__aruco__detection_1ad41c720ea1e290da6664bca32bef07bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void node_aruco_detection::cbk_cam_right</definition>
        <argsstring>(const sensor_msgs::ImageConstPtr &amp;msg)</argsstring>
        <name>cbk_cam_right</name>
        <param>
          <type>const sensor_msgs::ImageConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>sub right camera callback </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message from the camera</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classnode__aruco__detection_1a41fd24f3c07665cf1299c29bc8707edd" kindref="member">cbk_cam_arm</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="322" column="6" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="322" bodyend="336"/>
        <references refid="namespacecv__bridge_1acbf2da402f4d3e505613e95b5a2aed35" compoundref="cv__bridge_8cpp" startline="425" endline="429">cv_bridge::toCvCopy</references>
        <references refid="classnode__aruco__detection_1accadff48488a2770614fc04f33857e29" compoundref="aruco__detection_8cpp" startline="368" endline="395">aruco_detect</references>
        <references refid="aruco__detection_8cpp_1a90c613f9fd1c144ddea8733a8671f2d3" compoundref="aruco__detection_8cpp" startline="94">ID_CAMERA_RIGHT</references>
        <references refid="classnode__aruco__detection_1a3a90b963c7ae7791932c683bdfb61641" compoundref="aruco__detection_8cpp" startline="412" endline="439">show_camera</references>
        <referencedby refid="classnode__aruco__detection_1a4bb177d7130f384e5e6a35b6fa05b658" compoundref="aruco__detection_8cpp" startline="125" endline="143">node_aruco_detection</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnode__aruco__detection_1accadff48488a2770614fc04f33857e29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void node_aruco_detection::aruco_detect</definition>
        <argsstring>(int camera_id, cv::Mat &amp;image)</argsstring>
        <name>aruco_detect</name>
        <param>
          <type>int</type>
          <declname>camera_id</declname>
        </param>
        <param>
          <type>cv::Mat &amp;</type>
          <declname>image</declname>
        </param>
        <briefdescription>
<para>perform the ArUco detection </para>
        </briefdescription>
        <detaileddescription>
<para>This function enables to use the arUco detector for detecting new markers in one camera frame.</para>
<para>Since this is a very time-consuming operation, in order to not call this function with a prohibitive frequency, a number of workarounds have been put in action.</para>
<para>First of all, the function can be called by one thread each time. There&apos;s a semaphore to be acquired when the function is called, and released after the detection has been completed.</para>
<para>Second, the &apos;wait&apos; of the semaphore is not a lock, but a try_lock, meaning that if the thread can&apos;t use the callback, the functon returns immediately and the frame dropped. The main assumption, satisfied in most of the cases, is that the frame of the cameras is high enough. Moreover, in this case the robot doesn&apos;t move at a high velocity, hence the approach works well.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>camera_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID of the camera requiring the detection </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>the image read from the camera stream (one frame)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the two assumptions are: the frequency the robot acquires new images is high enough; and the robot doesn&apos;t move too much fast. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="368" column="6" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="368" bodyend="395"/>
        <references refid="simple__double_8cpp_1ad3609934b55a628fdda977ca8724ce34" compoundref="simple__double_8cpp" startline="57">markers</references>
        <references refid="simple__double_8cpp_1a46ba90e214408b92c4329be16a5cd5d0" compoundref="simple__double_8cpp" startline="68">marker_size</references>
        <references refid="classaruco_1_1_marker_detector_1adfb8f5e750be70433fff38e7270aaf82" compoundref="markerdetector_8cpp" startline="137" endline="142">aruco::MarkerDetector::detect</references>
        <references refid="bug__m_8rst_8txt_1a58306b7819d4924921d922ffdf9b396a" compoundref="bug__m_8rst_8txt" startline="9">m</references>
        <references refid="examples__tools_8md_8txt_1a706b8cd9925dea99a8c064f39110620d">ROS_INFO_STREAM</references>
        <referencedby refid="classnode__aruco__detection_1a41fd24f3c07665cf1299c29bc8707edd" compoundref="aruco__detection_8cpp" startline="247" endline="261">cbk_cam_arm</referencedby>
        <referencedby refid="classnode__aruco__detection_1ae51572f59a8124dfe8cdca3514c9ffda" compoundref="aruco__detection_8cpp" startline="272" endline="286">cbk_cam_front</referencedby>
        <referencedby refid="classnode__aruco__detection_1a657f1b6d746318bf2504e0bca06f62e6" compoundref="aruco__detection_8cpp" startline="297" endline="311">cbk_cam_left</referencedby>
        <referencedby refid="classnode__aruco__detection_1ad41c720ea1e290da6664bca32bef07bc" compoundref="aruco__detection_8cpp" startline="322" endline="336">cbk_cam_right</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnode__aruco__detection_1a3a90b963c7ae7791932c683bdfb61641" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void node_aruco_detection::show_camera</definition>
        <argsstring>(int camera_id, cv::Mat &amp;image)</argsstring>
        <name>show_camera</name>
        <param>
          <type>int</type>
          <declname>camera_id</declname>
        </param>
        <param>
          <type>cv::Mat &amp;</type>
          <declname>image</declname>
        </param>
        <briefdescription>
<para>update the image in the window </para>
        </briefdescription>
        <detaileddescription>
<para>The function shows a new frame into the window. It also applies a writing pointing out which camera the user is looking currently.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>camera_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID of the camera requiring the detection </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>the image read from the camera stream (one frame)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>if the camera_id doesn&apos;t coincide with the one set by the working cycle, the function returns immediately without updating the window. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="412" column="6" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="412" bodyend="439"/>
        <references refid="aruco__detection_8cpp_1a31b2db41e3b0d0548633efd91011c43f" compoundref="aruco__detection_8cpp" startline="76">ID_CAMERA_ARM</references>
        <references refid="aruco__detection_8cpp_1a09688581757864b3a229e25fa08c5cbd" compoundref="aruco__detection_8cpp" startline="82">ID_CAMERA_FRONT</references>
        <references refid="aruco__detection_8cpp_1a5a71dd8f7078d4af4bdf41b047dc5205" compoundref="aruco__detection_8cpp" startline="88">ID_CAMERA_LEFT</references>
        <references refid="aruco__detection_8cpp_1a90c613f9fd1c144ddea8733a8671f2d3" compoundref="aruco__detection_8cpp" startline="94">ID_CAMERA_RIGHT</references>
        <referencedby refid="classnode__aruco__detection_1a41fd24f3c07665cf1299c29bc8707edd" compoundref="aruco__detection_8cpp" startline="247" endline="261">cbk_cam_arm</referencedby>
        <referencedby refid="classnode__aruco__detection_1ae51572f59a8124dfe8cdca3514c9ffda" compoundref="aruco__detection_8cpp" startline="272" endline="286">cbk_cam_front</referencedby>
        <referencedby refid="classnode__aruco__detection_1a657f1b6d746318bf2504e0bca06f62e6" compoundref="aruco__detection_8cpp" startline="297" endline="311">cbk_cam_left</referencedby>
        <referencedby refid="classnode__aruco__detection_1ad41c720ea1e290da6664bca32bef07bc" compoundref="aruco__detection_8cpp" startline="322" endline="336">cbk_cam_right</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnode__aruco__detection_1a41da5fcc6ec2d1be39a2ef3fb4243fc9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string node_aruco_detection::set2string</definition>
        <argsstring>(std::set&lt; int &gt; &amp;st)</argsstring>
        <name>set2string</name>
        <param>
          <type><ref refid="robocluedo__dependencies_2vision__opencv_2cv__bridge_2_c_make_lists_8txt_1ae327ecbeb73df2f6640391f6d8775b50" kindref="member">std::set</ref>&lt; int &gt; &amp;</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert a set into a string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="495" column="13" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="495" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="classnode__aruco__detection_1a199a8882ee0c3d3d6b97ea9f9423aa31" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; node_aruco_detection::set2vector</definition>
        <argsstring>(std::set&lt; int &gt; &amp;st)</argsstring>
        <name>set2vector</name>
        <param>
          <type><ref refid="robocluedo__dependencies_2vision__opencv_2cv__bridge_2_c_make_lists_8txt_1ae327ecbeb73df2f6640391f6d8775b50" kindref="member">std::set</ref>&lt; int &gt; &amp;</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert a set into a dynamic array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="506" column="13" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="506" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="classnode__aruco__detection_1ad23c95af6683c361290defe48822b4f7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool node_aruco_detection::t0_greater_than_t1</definition>
        <argsstring>(ros::WallTime t0, ros::WallTime t1)</argsstring>
        <name>t0_greater_than_t1</name>
        <param>
          <type>ros::WallTime</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>ros::WallTime</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>comparison between two time instants: t0 &gt;= t1? </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_vision/src/aruco_detection.cpp" line="516" column="6" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="516" bodyend="520"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>node implementation (as class) </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="robocluedo_vision/src/aruco_detection.cpp" line="104" column="1" bodyfile="robocluedo_vision/src/aruco_detection.cpp" bodystart="103" bodyend="521"/>
    <listofallmembers>
      <member refid="classnode__aruco__detection_1accadff48488a2770614fc04f33857e29" prot="public" virt="non-virtual"><scope>node_aruco_detection</scope><name>aruco_detect</name></member>
      <member refid="classnode__aruco__detection_1a05839e60eb3be7e53bd79b8d3a1db58e" prot="private" virt="non-virtual"><scope>node_aruco_detection</scope><name>camParam</name></member>
      <member refid="classnode__aruco__detection_1a41fd24f3c07665cf1299c29bc8707edd" prot="public" virt="non-virtual"><scope>node_aruco_detection</scope><name>cbk_cam_arm</name></member>
      <member refid="classnode__aruco__detection_1ae51572f59a8124dfe8cdca3514c9ffda" prot="public" virt="non-virtual"><scope>node_aruco_detection</scope><name>cbk_cam_front</name></member>
      <member refid="classnode__aruco__detection_1a657f1b6d746318bf2504e0bca06f62e6" prot="public" virt="non-virtual"><scope>node_aruco_detection</scope><name>cbk_cam_left</name></member>
      <member refid="classnode__aruco__detection_1ad41c720ea1e290da6664bca32bef07bc" prot="public" virt="non-virtual"><scope>node_aruco_detection</scope><name>cbk_cam_right</name></member>
      <member refid="classnode__aruco__detection_1a43021ff3d35aab373deaf728672f13d8" prot="private" virt="non-virtual"><scope>node_aruco_detection</scope><name>current_camera_id</name></member>
      <member refid="classnode__aruco__detection_1abef36bba20a94ad0b3484248d3f26ff3" prot="private" virt="non-virtual"><scope>node_aruco_detection</scope><name>ids</name></member>
      <member refid="classnode__aruco__detection_1a8eb6d8f441c15d215edc8d295fd2247c" prot="private" virt="non-virtual"><scope>node_aruco_detection</scope><name>ids_to_publish</name></member>
      <member refid="classnode__aruco__detection_1a92babd4135c3e496f0150832641c5949" prot="private" virt="non-virtual"><scope>node_aruco_detection</scope><name>image_sub_arm</name></member>
      <member refid="classnode__aruco__detection_1a969bcfdc8aa6b8278101ebd009fa7b5a" prot="private" virt="non-virtual"><scope>node_aruco_detection</scope><name>image_sub_front</name></member>
      <member refid="classnode__aruco__detection_1a74171c58eb719cf39845f1513e632c2c" prot="private" virt="non-virtual"><scope>node_aruco_detection</scope><name>image_sub_left</name></member>
      <member refid="classnode__aruco__detection_1a7071274252b9a2b67cabde02d5461e3d" prot="private" virt="non-virtual"><scope>node_aruco_detection</scope><name>image_sub_right</name></member>
      <member refid="classnode__aruco__detection_1ad9b4e3f51743ba8f25e32bdbaaffcfb9" prot="private" virt="non-virtual"><scope>node_aruco_detection</scope><name>it</name></member>
      <member refid="classnode__aruco__detection_1a9e009be377fb7c72e22680c8cb89bcd9" prot="private" virt="non-virtual"><scope>node_aruco_detection</scope><name>last_id_published</name></member>
      <member refid="classnode__aruco__detection_1af32540c6557c11f137290ed78a01ec45" prot="private" virt="non-virtual"><scope>node_aruco_detection</scope><name>max_sub_rate</name></member>
      <member refid="classnode__aruco__detection_1abcb4bc61aeaf2ddaa7abfb6b24751aa8" prot="private" virt="non-virtual"><scope>node_aruco_detection</scope><name>mDetector</name></member>
      <member refid="classnode__aruco__detection_1a35a662c7ca9cf445b6aec1af579c88b4" prot="private" virt="non-virtual"><scope>node_aruco_detection</scope><name>mtx_detect</name></member>
      <member refid="classnode__aruco__detection_1a842ac54f01c3d0cfc3f05f295c475d23" prot="private" virt="non-virtual"><scope>node_aruco_detection</scope><name>mtx_show</name></member>
      <member refid="classnode__aruco__detection_1a607e45faf7da1b9631c8764159626ce6" prot="private" virt="non-virtual"><scope>node_aruco_detection</scope><name>nh</name></member>
      <member refid="classnode__aruco__detection_1a4bb177d7130f384e5e6a35b6fa05b658" prot="public" virt="non-virtual"><scope>node_aruco_detection</scope><name>node_aruco_detection</name></member>
      <member refid="classnode__aruco__detection_1a07f1b22ff6913e2e35b97e31b6551bd3" prot="private" virt="non-virtual"><scope>node_aruco_detection</scope><name>pub_marker_ids</name></member>
      <member refid="classnode__aruco__detection_1a41da5fcc6ec2d1be39a2ef3fb4243fc9" prot="private" virt="non-virtual"><scope>node_aruco_detection</scope><name>set2string</name></member>
      <member refid="classnode__aruco__detection_1a199a8882ee0c3d3d6b97ea9f9423aa31" prot="private" virt="non-virtual"><scope>node_aruco_detection</scope><name>set2vector</name></member>
      <member refid="classnode__aruco__detection_1a3a90b963c7ae7791932c683bdfb61641" prot="public" virt="non-virtual"><scope>node_aruco_detection</scope><name>show_camera</name></member>
      <member refid="classnode__aruco__detection_1a1b672639359e9237e9b154f1901341b3" prot="public" virt="non-virtual"><scope>node_aruco_detection</scope><name>spin</name></member>
      <member refid="classnode__aruco__detection_1ad23c95af6683c361290defe48822b4f7" prot="private" virt="non-virtual"><scope>node_aruco_detection</scope><name>t0_greater_than_t1</name></member>
      <member refid="classnode__aruco__detection_1a15f7939a0f2e47cd625295885c7fee0f" prot="private" virt="non-virtual"><scope>node_aruco_detection</scope><name>useCamInfo</name></member>
      <member refid="classnode__aruco__detection_1a407c112c6ab8989c48ee3e55822bdb7b" prot="public" virt="non-virtual"><scope>node_aruco_detection</scope><name>~node_aruco_detection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
