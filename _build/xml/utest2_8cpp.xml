<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="utest2_8cpp" kind="file" language="C++">
    <compoundname>utest2.cpp</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">gtest/gtest.h</includes>
    <includes local="yes">opencv2/core/core.hpp</includes>
    <includes refid="cv__bridge_8h" local="yes">cv_bridge/cv_bridge.h</includes>
    <includes local="no">sensor_msgs/Image.h</includes>
    <includes local="no">sensor_msgs/image_encodings.h</includes>
    <incdepgraph>
      <node id="10">
        <label>ros/static_assert.h</label>
      </node>
      <node id="13">
        <label>stdexcept</label>
      </node>
      <node id="5">
        <label>opencv2/core/core.hpp</label>
      </node>
      <node id="7">
        <label>sensor_msgs/Image.h</label>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="1">
        <label>robocluedo_dependencies/vision_opencv/cv_bridge/test/utest2.cpp</label>
        <link refid="utest2_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>sensor_msgs/image_encodings.h</label>
      </node>
      <node id="12">
        <label>opencv2/imgproc/types_c.h</label>
      </node>
      <node id="11">
        <label>opencv2/imgproc/imgproc.hpp</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="6">
        <label>cv_bridge/cv_bridge.h</label>
        <link refid="cv__bridge_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>gtest/gtest.h</label>
      </node>
      <node id="8">
        <label>sensor_msgs/CompressedImage.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacesensor__msgs_1_1image__encodings">sensor_msgs::image_encodings</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="utest2_8cpp_1a77e5f3472d6d1c0744110e1ab2276a4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isUnsigned</definition>
        <argsstring>(const std::string &amp;encoding)</argsstring>
        <name>isUnsigned</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>encoding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/test/utest2.cpp" line="47" column="6" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/test/utest2.cpp" bodystart="47" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="utest2_8cpp_1abbe633f760aca6e543aefdd4f4458870" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; getEncodings</definition>
        <argsstring>()</argsstring>
        <name>getEncodings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/test/utest2.cpp" line="55" column="1" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/test/utest2.cpp" bodystart="55" bodyend="69"/>
        <referencedby refid="utest2_8cpp_1a12a74fc6deee1e23a64bb3565e88d9b6" compoundref="utest2_8cpp" startline="71" endline="150">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="utest2_8cpp_1a12a74fc6deee1e23a64bb3565e88d9b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(OpencvTests, testCase_encode_decode)</argsstring>
        <name>TEST</name>
        <param>
          <type>OpencvTests</type>
        </param>
        <param>
          <type>testCase_encode_decode</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/test/utest2.cpp" line="71" column="1" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/test/utest2.cpp" bodystart="71" bodyend="150"/>
        <references refid="utest2_8cpp_1abbe633f760aca6e543aefdd4f4458870" compoundref="utest2_8cpp" startline="55" endline="69">getEncodings</references>
        <references refid="namespacecv__bridge_1a60b43d74db6ef87fd6cd35d9305b1ef1" compoundref="cv__bridge_8cpp" startline="105" endline="146">cv_bridge::getCvType</references>
        <references refid="classcv__bridge_1_1_cv_image_1a943bd351cfeba6e67a0b961e3b4a1ba9" compoundref="cv__bridge_8cpp" startline="388" endline="393">cv_bridge::CvImage::toImageMsg</references>
        <references refid="namespacecv__bridge_1aafa38a1d9be98d9efaefe45fd873133c" compoundref="cv__bridge_8cpp" startline="439" endline="443">cv_bridge::toCvShare</references>
        <references refid="namespacecv__bridge_1ab9a4ba669b03a3b0a35651a6c0d77be1" compoundref="cv__bridge_8cpp" startline="462" endline="466">cv_bridge::cvtColor</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Software<sp/>License<sp/>Agreement<sp/>(BSD<sp/>License)</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/><sp/>Copyright<sp/>(c)<sp/>2009,<sp/>Willow<sp/>Garage,<sp/>Inc.</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/><sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/><sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Willow<sp/>Garage<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/><sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/><sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS</highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/><sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/><sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,</highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/><sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/><sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/><sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/><sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/><sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/><sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;opencv2/core/core.hpp&quot;</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cv__bridge_8h" kindref="compound">cv_bridge/cv_bridge.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sensor_msgs/Image.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sensor_msgs/image_encodings.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">sensor_msgs::image_encodings;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="utest2_8cpp_1a77e5f3472d6d1c0744110e1ab2276a4c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="utest2_8cpp_1a77e5f3472d6d1c0744110e1ab2276a4c" kindref="member">isUnsigned</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>encoding)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>encoding<sp/>==<sp/>RGB8<sp/>||<sp/>encoding<sp/>==<sp/>RGBA8<sp/>||<sp/>encoding<sp/>==<sp/>RGB16<sp/>||<sp/>encoding<sp/>==<sp/>RGBA16<sp/>||<sp/>encoding<sp/>==<sp/>BGR8<sp/>||<sp/>encoding<sp/>==<sp/>BGRA8<sp/>||<sp/>encoding<sp/>==<sp/>BGR16<sp/>||<sp/>encoding<sp/>==<sp/>BGRA16<sp/>||<sp/>encoding<sp/>==<sp/>MONO8<sp/>||<sp/>encoding<sp/>==<sp/>MONO16<sp/>||</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoding<sp/>==<sp/>MONO8<sp/>||<sp/>encoding<sp/>==<sp/>MONO16<sp/>||<sp/>encoding<sp/>==<sp/>TYPE_8UC1<sp/>||<sp/>encoding<sp/>==<sp/>TYPE_8UC2<sp/>||<sp/>encoding<sp/>==<sp/>TYPE_8UC3<sp/>||<sp/>encoding<sp/>==<sp/>TYPE_8UC4<sp/>||</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoding<sp/>==<sp/>TYPE_16UC1<sp/>||<sp/>encoding<sp/>==<sp/>TYPE_16UC2<sp/>||<sp/>encoding<sp/>==<sp/>TYPE_16UC3<sp/>||<sp/>encoding<sp/>==<sp/>TYPE_16UC4;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//BAYER_RGGB8,<sp/>BAYER_BGGR8,<sp/>BAYER_GBRG8,<sp/>BAYER_GRBG8,<sp/>BAYER_RGGB16,<sp/>BAYER_BGGR16,<sp/>BAYER_GBRG16,<sp/>BAYER_GRBG16,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//YUV422</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal">std::vector&lt;std::string&gt;</highlight></codeline>
<codeline lineno="55" refid="utest2_8cpp_1abbe633f760aca6e543aefdd4f4458870" refkind="member"><highlight class="normal"><ref refid="utest2_8cpp_1abbe633f760aca6e543aefdd4f4458870" kindref="member">getEncodings</ref>()<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>for<sp/>Groovy,<sp/>the<sp/>following<sp/>types<sp/>should<sp/>be<sp/>uncommented</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">std::string<sp/>encodings[]<sp/>=<sp/>{<sp/>RGB8,<sp/>RGBA8,<sp/>RGB16,<sp/>RGBA16,<sp/>BGR8,<sp/>BGRA8,<sp/>BGR16,<sp/>BGRA16,<sp/>MONO8,<sp/>MONO16,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TYPE_8UC1,<sp/></highlight><highlight class="comment">/*TYPE_8UC2,*/</highlight><highlight class="normal"><sp/>TYPE_8UC3,<sp/>TYPE_8UC4,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TYPE_8SC1,<sp/></highlight><highlight class="comment">/*TYPE_8SC2,*/</highlight><highlight class="normal"><sp/>TYPE_8SC3,<sp/>TYPE_8SC4,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TYPE_16UC1,<sp/></highlight><highlight class="comment">/*TYPE_16UC2,*/</highlight><highlight class="normal"><sp/>TYPE_16UC3,<sp/>TYPE_16UC4,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TYPE_16SC1,<sp/></highlight><highlight class="comment">/*TYPE_16SC2,*/</highlight><highlight class="normal"><sp/>TYPE_16SC3,<sp/>TYPE_16SC4,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TYPE_32SC1,<sp/></highlight><highlight class="comment">/*TYPE_32SC2,*/</highlight><highlight class="normal"><sp/>TYPE_32SC3,<sp/>TYPE_32SC4,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TYPE_32FC1,<sp/></highlight><highlight class="comment">/*TYPE_32FC2,*/</highlight><highlight class="normal"><sp/>TYPE_32FC3,<sp/>TYPE_32FC4,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TYPE_64FC1,<sp/></highlight><highlight class="comment">/*TYPE_64FC2,*/</highlight><highlight class="normal"><sp/>TYPE_64FC3,<sp/>TYPE_64FC4,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//BAYER_RGGB8,<sp/>BAYER_BGGR8,<sp/>BAYER_GBRG8,<sp/>BAYER_GRBG8,<sp/>BAYER_RGGB16,<sp/>BAYER_BGGR16,<sp/>BAYER_GBRG16,<sp/>BAYER_GRBG16,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>YUV422</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;(encodings,<sp/>encodings+47-8-7);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="utest2_8cpp_1a12a74fc6deee1e23a64bb3565e88d9b6" refkind="member"><highlight class="normal"><ref refid="utest2_8cpp_1a12a74fc6deee1e23a64bb3565e88d9b6" kindref="member">TEST</ref>(OpencvTests,<sp/>testCase_encode_decode)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>encodings<sp/>=<sp/><ref refid="utest2_8cpp_1abbe633f760aca6e543aefdd4f4458870" kindref="member">getEncodings</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;encodings.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>src_encoding<sp/>=<sp/>encodings[i];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_src_color_format<sp/>=<sp/>isColor(src_encoding)<sp/>||<sp/>isMono(src_encoding)<sp/>||<sp/>(src_encoding<sp/>==<sp/>sensor_msgs::image_encodings::YUV422);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>image_original(cv::Size(400,<sp/>400),<sp/><ref refid="namespacecv__bridge_1a60b43d74db6ef87fd6cd35d9305b1ef1" kindref="member">cv_bridge::getCvType</ref>(src_encoding));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::RNG<sp/>r(77);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>r.fill(image_original,<sp/>cv::RNG::UNIFORM,<sp/>0,<sp/>127);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor_msgs::Image<sp/>image_message;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcv__bridge_1_1_cv_image" kindref="compound">cv_bridge::CvImage</ref><sp/>image_bridge(std_msgs::Header(),<sp/>src_encoding,<sp/>image_original);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>a<sp/>sensor_msgs::Image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor_msgs::ImagePtr<sp/>image_msg<sp/>=<sp/>image_bridge.<ref refid="classcv__bridge_1_1_cv_image_1a943bd351cfeba6e67a0b961e3b4a1ba9" kindref="member">toImageMsg</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;encodings.size();<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>dst_encoding<sp/>=<sp/>encodings[j];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_dst_color_format<sp/>=<sp/>isColor(dst_encoding)<sp/>||<sp/>isMono(dst_encoding)<sp/>||<sp/>(dst_encoding<sp/>==<sp/>sensor_msgs::image_encodings::YUV422);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_num_channels_the_same<sp/>=<sp/>(numChannels(src_encoding)<sp/>==<sp/>numChannels(dst_encoding));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecv__bridge_1a87c18e83f76df1e0383ba9be59502d00" kindref="member">cv_bridge::CvImageConstPtr</ref><sp/>cv_image;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv::Mat<sp/>image_back;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>first<sp/>type<sp/>does<sp/>not<sp/>contain<sp/>any<sp/>color<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_src_color_format)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Converting<sp/>from<sp/>a<sp/>non<sp/>color<sp/>type<sp/>to<sp/>a<sp/>color<sp/>type<sp/>does<sp/>no<sp/>make<sp/>sense</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_dst_color_format)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_THROW(<ref refid="namespacecv__bridge_1aafa38a1d9be98d9efaefe45fd873133c" kindref="member">cv_bridge::toCvShare</ref>(image_msg,<sp/>dst_encoding),<sp/><ref refid="classcv__bridge_1_1_exception" kindref="compound">cv_bridge::Exception</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>only<sp/>convert<sp/>non-color<sp/>types<sp/>with<sp/>the<sp/>same<sp/>number<sp/>of<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_num_channels_the_same)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_THROW(<ref refid="namespacecv__bridge_1aafa38a1d9be98d9efaefe45fd873133c" kindref="member">cv_bridge::toCvShare</ref>(image_msg,<sp/>dst_encoding),<sp/><ref refid="classcv__bridge_1_1_exception" kindref="compound">cv_bridge::Exception</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv_image<sp/>=<sp/><ref refid="namespacecv__bridge_1aafa38a1d9be98d9efaefe45fd873133c" kindref="member">cv_bridge::toCvShare</ref>(image_msg,<sp/>dst_encoding);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>converting<sp/>to<sp/>a<sp/>non-color,<sp/>you<sp/>cannot<sp/>convert<sp/>to<sp/>a<sp/>different<sp/>number<sp/>of<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_dst_color_format)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_num_channels_the_same)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_THROW(<ref refid="namespacecv__bridge_1aafa38a1d9be98d9efaefe45fd873133c" kindref="member">cv_bridge::toCvShare</ref>(image_msg,<sp/>dst_encoding),<sp/><ref refid="classcv__bridge_1_1_exception" kindref="compound">cv_bridge::Exception</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv_image<sp/>=<sp/><ref refid="namespacecv__bridge_1aafa38a1d9be98d9efaefe45fd873133c" kindref="member">cv_bridge::toCvShare</ref>(image_msg,<sp/>dst_encoding);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>cannot<sp/>convert<sp/>from<sp/>non-color<sp/>to<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_THROW(<ref refid="namespacecv__bridge_1ab9a4ba669b03a3b0a35651a6c0d77be1" kindref="member">cvtColor</ref>(cv_image,<sp/>src_encoding)-&gt;image,<sp/><ref refid="classcv__bridge_1_1_exception" kindref="compound">cv_bridge::Exception</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>do<sp/>not<sp/>support<sp/>conversion<sp/>to<sp/>YUV422<sp/>for<sp/>now,<sp/>except<sp/>from<sp/>YUV422</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dst_encoding<sp/>==<sp/>YUV422)<sp/>&amp;&amp;<sp/>(src_encoding<sp/>!=<sp/>YUV422))<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_THROW(<ref refid="namespacecv__bridge_1aafa38a1d9be98d9efaefe45fd873133c" kindref="member">cv_bridge::toCvShare</ref>(image_msg,<sp/>dst_encoding),<sp/><ref refid="classcv__bridge_1_1_exception" kindref="compound">cv_bridge::Exception</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv_image<sp/>=<sp/><ref refid="namespacecv__bridge_1aafa38a1d9be98d9efaefe45fd873133c" kindref="member">cv_bridge::toCvShare</ref>(image_msg,<sp/>dst_encoding);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>do<sp/>not<sp/>support<sp/>conversion<sp/>to<sp/>YUV422<sp/>for<sp/>now,<sp/>except<sp/>from<sp/>YUV422</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((src_encoding<sp/>==<sp/>YUV422)<sp/>&amp;&amp;<sp/>(dst_encoding<sp/>!=<sp/>YUV422))<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_THROW(<ref refid="namespacecv__bridge_1ab9a4ba669b03a3b0a35651a6c0d77be1" kindref="member">cvtColor</ref>(cv_image,<sp/>src_encoding)-&gt;image,<sp/><ref refid="classcv__bridge_1_1_exception" kindref="compound">cv_bridge::Exception</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>convert<sp/>back<sp/>to<sp/>a<sp/>cv::Mat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>image_back<sp/>=<sp/><ref refid="namespacecv__bridge_1ab9a4ba669b03a3b0a35651a6c0d77be1" kindref="member">cvtColor</ref>(cv_image,<sp/>src_encoding)-&gt;image;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>number<sp/>of<sp/>channels,s<sp/>different<sp/>some<sp/>information<sp/>got<sp/>lost<sp/>at<sp/>some<sp/>point,<sp/>so<sp/>no<sp/>possible<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_num_channels_the_same)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitDepth(src_encoding)<sp/>&gt;=<sp/>32)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>case<sp/>where<sp/>the<sp/>input<sp/>has<sp/>floats,<sp/>we<sp/>will<sp/>lose<sp/>precision<sp/>but<sp/>no<sp/>more<sp/>than<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_LT(cv::norm(image_original,<sp/>image_back,<sp/>cv::NORM_INF),<sp/>1)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;problem<sp/>converting<sp/>from<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>src_encoding<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dst_encoding<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>back.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((bitDepth(src_encoding)<sp/>==<sp/>16)<sp/>&amp;&amp;<sp/>(bitDepth(dst_encoding)<sp/>==<sp/>8))<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>case<sp/>where<sp/>the<sp/>input<sp/>has<sp/>floats,<sp/>we<sp/>will<sp/>lose<sp/>precision<sp/>but<sp/>no<sp/>more<sp/>than<sp/>1<sp/>*<sp/>max(127)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_LT(cv::norm(image_original,<sp/>image_back,<sp/>cv::NORM_INF),<sp/>128)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;problem<sp/>converting<sp/>from<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>src_encoding<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dst_encoding<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>back.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(cv::norm(image_original,<sp/>image_back,<sp/>cv::NORM_INF),<sp/>0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;problem<sp/>converting<sp/>from<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>src_encoding<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dst_encoding<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>back.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="robocluedo_dependencies/vision_opencv/cv_bridge/test/utest2.cpp"/>
  </compounddef>
</doxygen>
