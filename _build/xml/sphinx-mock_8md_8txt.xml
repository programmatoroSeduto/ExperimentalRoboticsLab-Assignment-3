<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="sphinx-mock_8md_8txt" kind="file" language="C++">
    <compoundname>sphinx-mock.md.txt</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="sphinx-mock_8md_8txt_1abe05ec1b0ec6f8843707c9a8669307b1" prot="public" static="no" mutable="no">
        <type></type>
        <definition>sphinx</definition>
        <argsstring></argsstring>
        <name>sphinx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_build/html/_sources/_docs/sphinx-mock.md.txt" line="4" column="1" bodyfile="_build/html/_sources/_docs/sphinx-mock.md.txt" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sphinx-mock_8md_8txt_1a0d0d0cd93afd1f84ce808fe024d66777" prot="public" static="no" mutable="no">
        <type>when <ref refid="erl2-oracle-user-manual_8md_8txt_1a142a05fa1714b988fb0d42812eb6fce5" kindref="member">it</ref> finds <ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref> statement *import something *tries <ref refid="erl3-oracle-user-manual_8md_8txt_1af02cd2ec07331037df3b999a6221822b" kindref="member">to</ref></type>
        <definition>when it finds a statement* import something* tries to import</definition>
        <argsstring></argsstring>
        <name>import</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_build/html/_sources/_docs/sphinx-mock.md.txt" line="4" column="61" bodyfile="_build/html/_sources/_docs/sphinx-mock.md.txt" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sphinx-mock_8md_8txt_1a841386fb13edeb6b673c170c05f89366" prot="public" static="no" mutable="no">
        <type>when <ref refid="erl2-oracle-user-manual_8md_8txt_1a142a05fa1714b988fb0d42812eb6fce5" kindref="member">it</ref> finds <ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref> statement *<ref refid="sphinx-mock_8md_8txt_1a0d0d0cd93afd1f84ce808fe024d66777" kindref="member">import</ref> something *tries <ref refid="erl3-oracle-user-manual_8md_8txt_1af02cd2ec07331037df3b999a6221822b" kindref="member">to</ref> <ref refid="test-the-project_8md_8txt_1aa51bacc8577cd59a57530a0cceef3784" kindref="member">and</ref> complains <ref refid="rosplan-kb_8md_8txt_1a101e8d4e13051c1d9a3c167da5bfed54" kindref="member">if</ref> <ref refid="erl2-oracle-user-manual_8md_8txt_1a142a05fa1714b988fb0d42812eb6fce5" kindref="member">it</ref> doesn t exists This is <ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref> problem sometimes <ref refid="rosplan-kb_8md_8txt_1a70b081480885bd2f2b09ae4e492abc6c" kindref="member">for</ref> avoidig such <ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref></type>
        <definition>when it finds a statement* import something* tries to and complains if it doesn t exists This is a problem sometimes for avoidig such a situation</definition>
        <argsstring></argsstring>
        <name>situation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_build/html/_sources/_docs/sphinx-mock.md.txt" line="6" column="20" bodyfile="_build/html/_sources/_docs/sphinx-mock.md.txt" bodystart="6" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>Sphinx<sp/>for<sp/>Py<sp/>--<sp/>modules<sp/>mocking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="sphinx-mock_8md_8txt_1abe05ec1b0ec6f8843707c9a8669307b1" refkind="member"><highlight class="normal"><ref refid="sphinx-mock_8md_8txt_1abe05ec1b0ec6f8843707c9a8669307b1" kindref="member">sphinx</ref>,<sp/>when<sp/><ref refid="test-the-project_8md_8txt_1ae9880850b92fe7594f93a01193dc189d" kindref="member">it</ref><sp/>finds<sp/><ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref><sp/>statement<sp/>*</highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>something*<sp/>...<sp/>tries<sp/><ref refid="erl3-oracle-user-manual_8md_8txt_1af02cd2ec07331037df3b999a6221822b" kindref="member">to</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal">,<sp/><ref refid="test-the-project_8md_8txt_1aa51bacc8577cd59a57530a0cceef3784" kindref="member">and</ref><sp/>complains<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="test-the-project_8md_8txt_1ae9880850b92fe7594f93a01193dc189d" kindref="member">it</ref><sp/>doesn</highlight><highlight class="stringliteral">&apos;t<sp/>exists.<sp/>This<sp/>is<sp/>a<sp/>problem<sp/>sometimes.</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="6" refid="sphinx-mock_8md_8txt_1a841386fb13edeb6b673c170c05f89366" refkind="member"><highlight class="stringliteral">for<sp/>avoidig<sp/>such<sp/>a<sp/>situation,<sp/>there&apos;</highlight><highlight class="normal">s<sp/>an<sp/>extension<sp/>which<sp/>*emualtes*<sp/><ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref><sp/>library<sp/>which<sp/>doesn</highlight><highlight class="stringliteral">&apos;t<sp/>exist.</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral">```{note}</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">see<sp/>this<sp/>page<sp/>[here](https://stackoverflow.com/questions/15889621/sphinx-how-to-exclude-imports-in-automodule)</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral">```</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral">##<sp/>sphinx<sp/>configuration</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral">just<sp/>add<sp/>this<sp/>section:</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral">```py</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral">#<sp/>--<sp/>Options<sp/>for<sp/>autodoc<sp/>-----------------------------------------------------</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral">#<sp/>mock<sp/>ros<sp/>and<sp/>other<sp/>stuff</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral">autodoc_mock_imports<sp/>=<sp/>[&quot;rospy&quot;]</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral">```</highlight></codeline>
    </programlisting>
    <location file="_build/html/_sources/_docs/sphinx-mock.md.txt"/>
  </compounddef>
</doxygen>
