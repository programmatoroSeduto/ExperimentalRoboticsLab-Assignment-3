<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="markerdetector_8h" kind="file" language="C++">
    <compoundname>markerdetector.h</compoundname>
    <includes refid="aruco__export_8h" local="yes">aruco_export.h</includes>
    <includes local="no">opencv2/core.hpp</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">iostream</includes>
    <includes local="no">queue</includes>
    <includes local="no">mutex</includes>
    <includes local="no">condition_variable</includes>
    <includes local="no">vector</includes>
    <includes refid="marker_8h" local="yes">marker.h</includes>
    <includedby refid="aruco_8h" local="yes">robocluedo_dependencies/aruco_ros/aruco/include/aruco/aruco.h</includedby>
    <includedby refid="markerdetector_8cpp" local="yes">robocluedo_dependencies/aruco_ros/aruco/src/aruco/markerdetector.cpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>queue</label>
      </node>
      <node id="11">
        <label>cstdint</label>
      </node>
      <node id="8">
        <label>condition_variable</label>
      </node>
      <node id="4">
        <label>cstdio</label>
      </node>
      <node id="3">
        <label>opencv2/core.hpp</label>
      </node>
      <node id="1">
        <label>robocluedo_dependencies/aruco_ros/aruco/include/aruco/markerdetector.h</label>
        <link refid="markerdetector_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="2">
        <label>aruco_export.h</label>
        <link refid="aruco__export_8h"/>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="7">
        <label>mutex</label>
      </node>
      <node id="10">
        <label>marker.h</label>
        <link refid="marker_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>robocluedo_dependencies/aruco_ros/aruco_ros/src/simple_single.cpp</label>
        <link refid="simple__single_8cpp"/>
      </node>
      <node id="6">
        <label>robocluedo_dependencies/aruco_ros/aruco_ros/src/simple_double.cpp</label>
        <link refid="simple__double_8cpp"/>
      </node>
      <node id="3">
        <label>robocluedo_dependencies/aruco_ros/aruco/include/aruco/cvdrawingutils.h</label>
        <link refid="cvdrawingutils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>robocluedo_dependencies/aruco_ros/aruco_ros/include/aruco_ros/aruco_ros_utils.h</label>
        <link refid="aruco__ros__utils_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>robocluedo_dependencies/aruco_ros/aruco_ros/src/marker_publish.cpp</label>
        <link refid="marker__publish_8cpp"/>
      </node>
      <node id="2">
        <label>robocluedo_dependencies/aruco_ros/aruco/include/aruco/aruco.h</label>
        <link refid="aruco_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>robocluedo_dependencies/aruco_ros/aruco/include/aruco/markerdetector.h</label>
        <link refid="markerdetector_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>robocluedo_dependencies/aruco_ros/aruco_ros/src/aruco_ros_utils.cpp</label>
        <link refid="aruco__ros__utils_8cpp"/>
      </node>
      <node id="4">
        <label>robocluedo_dependencies/aruco_ros/aruco/src/aruco/cvdrawingutils.cpp</label>
        <link refid="cvdrawingutils_8cpp"/>
      </node>
      <node id="10">
        <label>robocluedo_dependencies/aruco_ros/aruco/src/aruco/markerdetector.cpp</label>
        <link refid="markerdetector_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classaruco_1_1_marker_detector" prot="public">aruco::MarkerDetector</innerclass>
    <innerclass refid="structaruco_1_1_marker_detector_1_1_params" prot="public">aruco::MarkerDetector::Params</innerclass>
    <innerclass refid="classaruco_1_1_marker_detector_1_1_marker_candidate" prot="public">aruco::MarkerDetector::MarkerCandidate</innerclass>
    <innerclass refid="structaruco_1_1_marker_detector_1_1_thres_and_detect_rect_t_a_s_k" prot="private">aruco::MarkerDetector::ThresAndDetectRectTASK</innerclass>
    <innerclass refid="classaruco_1_1_marker_detector_1_1_queue" prot="private">aruco::MarkerDetector::Queue</innerclass>
    <innernamespace refid="namespacearuco">aruco</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="29"><highlight class="preprocessor">#ifndef<sp/>_ARUCO_MarkerDetector_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_ARUCO_MarkerDetector_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="aruco__export_8h" kindref="compound">aruco_export.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/core.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;condition_variable&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="marker_8h" kindref="compound">marker.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearuco" kindref="compound">aruco</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="namespacearuco_1ad3e67c58edd9a7465b69f2eae833dcbb" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacearuco_1ad3e67c58edd9a7465b69f2eae833dcbb" kindref="member">DetectionMode</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="namespacearuco_1ad3e67c58edd9a7465b69f2eae833dcbba31c1159a1ac3e3550f259cd35d74212a" refkind="member"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="namespacearuco_1ad3e67c58edd9a7465b69f2eae833dcbba0fa3a9e206561c5bf35d2f27bcefcd5e" kindref="member">DM_NORMAL</ref><sp/>=<sp/>0,<sp/><ref refid="namespacearuco_1ad3e67c58edd9a7465b69f2eae833dcbba500e0934d202fea26cd667a808985a58" kindref="member">DM_FAST</ref><sp/>=<sp/>1,<sp/><ref refid="namespacearuco_1ad3e67c58edd9a7465b69f2eae833dcbba31c1159a1ac3e3550f259cd35d74212a" kindref="member">DM_VIDEO_FAST</ref><sp/>=<sp/>2</highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CameraParameters;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MarkerLabeler;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classaruco_1_1_marker_detector" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="aruco__export_8h_1a47f9a248e0fcb66919073dec9c96dbe7" kindref="member">ARUCO_EXPORT</ref><sp/><ref refid="classaruco_1_1_marker_detector" kindref="compound">MarkerDetector</ref></highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63" refid="classaruco_1_1_marker_detector_1a81f933a8be90d0f39b196bf93a3f5cda" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_marker_detector_1a81f933a8be90d0f39b196bf93a3f5cda" kindref="member">ThresMethod</ref></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classaruco_1_1_marker_detector_1a81f933a8be90d0f39b196bf93a3f5cdaaf2bae099c4f1d5c013b252f822a72b22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>THRES_ADAPTIVE<sp/>=<sp/>0,<sp/>THRES_AUTO_FIXED<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="structaruco_1_1_marker_detector_1_1_params" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structaruco_1_1_marker_detector_1_1_params" kindref="compound">Params</ref></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maximum<sp/>number<sp/>of<sp/>parallel<sp/>threads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="structaruco_1_1_marker_detector_1_1_params_1a6966891b087596b0dbb97426804778e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxThreads<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>-1<sp/>means<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>border<sp/>around<sp/>image<sp/>limits<sp/>in<sp/>which<sp/>corners<sp/>are<sp/>not<sp/>allowed<sp/>to<sp/>be<sp/>detected.<sp/>(0,1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="structaruco_1_1_marker_detector_1_1_params_1a847238d36d833fe61ec4ef1d2f4d7bb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>borderDistThres<sp/>=<sp/>0.015f;</highlight></codeline>
<codeline lineno="79" refid="structaruco_1_1_marker_detector_1_1_params_1a09bf488555cc288c17219f5ea75adff8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowResMarkerSize<sp/>=<sp/>20;<sp/></highlight><highlight class="comment">//<sp/>minimum<sp/>size<sp/>of<sp/>a<sp/>marker<sp/>in<sp/>the<sp/>low<sp/>resolution<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>minimum<sp/><sp/>size<sp/>of<sp/>a<sp/>contour<sp/>length.<sp/>We<sp/>use<sp/>the<sp/>following<sp/>formula</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>minLenght<sp/>=<sp/>min(_minSize_pix,<sp/>_minSize<sp/>*<sp/>Is)<sp/>*<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>being<sp/>Is<sp/>=<sp/>max(imageWidth,<sp/>imageHeight)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>value<sp/>_minSize<sp/>are<sp/>normalized,<sp/>thus,<sp/>depends<sp/>on<sp/>camera<sp/>image<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>however,<sp/>_minSize_pix<sp/>is<sp/>expressed<sp/>in<sp/>pixels<sp/>(you<sp/>can<sp/>use<sp/>the<sp/>one<sp/>you<sp/>prefer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="structaruco_1_1_marker_detector_1_1_params_1a0916c04a7beeee1be77c10557055b66e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minSize<sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>tau_i<sp/>in<sp/>paper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="structaruco_1_1_marker_detector_1_1_params_1a4ff96d2eea19dc170188861abdd6c73a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minSize_pix<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="88" refid="structaruco_1_1_marker_detector_1_1_params_1aac457f02da3b3bc56d6345ab61485dab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enclosedMarker<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>special<sp/>treatment<sp/>for<sp/>enclosed<sp/>markers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="structaruco_1_1_marker_detector_1_1_params_1a38112203b37659cb6a6cb3d5359df7d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structaruco_1_1_marker_detector_1_1_params_1a38112203b37659cb6a6cb3d5359df7d4" kindref="member">setThresholdMethod</ref>(<ref refid="classaruco_1_1_marker_detector_1a81f933a8be90d0f39b196bf93a3f5cda" kindref="member">ThresMethod</ref><sp/>method,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresHold<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wsize<sp/>=<sp/>15,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wsize_range<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_AdaptiveThresWindowSize<sp/>=<sp/>wsize;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_thresMethod<sp/>=<sp/>method;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(thresHold<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(method<sp/>==<sp/>THRES_AUTO_FIXED)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ThresHold<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ThresHold<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ThresHold<sp/>=<sp/>thresHold;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_AdaptiveThresWindowSize_range<sp/>=<sp/>wsize_range;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>threshold<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="structaruco_1_1_marker_detector_1_1_params_1a6c4eacc72612ef548bed5ed6e895e93e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaruco_1_1_marker_detector_1a81f933a8be90d0f39b196bf93a3f5cda" kindref="member">ThresMethod</ref><sp/>_thresMethod<sp/>=<sp/>THRES_ADAPTIVE;</highlight></codeline>
<codeline lineno="109" refid="structaruco_1_1_marker_detector_1_1_params_1a358967d73173b4107064a92cb439d254" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NAttemptsAutoThresFix<sp/>=<sp/>3;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>times<sp/>that<sp/>tries<sp/>a<sp/>random<sp/>threshold<sp/>in<sp/>case<sp/>of<sp/>THRES_AUTO_FIXED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>threshold<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="structaruco_1_1_marker_detector_1_1_params_1ad1efbebed1ee31c4067e8d40870dac2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_AdaptiveThresWindowSize<sp/>=<sp/>15,<sp/>_ThresHold<sp/>=<sp/>10,<sp/>_AdaptiveThresWindowSize_range<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>the<sp/>image<sp/>passed<sp/>to<sp/>the<sp/>MarkerLabeler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="structaruco_1_1_marker_detector_1_1_params_1a755d91c3304f94287af641fab0850c59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_markerWarpPixSize<sp/>=<sp/>5;<sp/></highlight><highlight class="comment">//<sp/>tau_c<sp/>in<sp/>paper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enable/disables<sp/>the<sp/>method<sp/>for<sp/>automatic<sp/>size<sp/>estimation<sp/>for<sp/>speed<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="structaruco_1_1_marker_detector_1_1_params_1a4eb546885f1c64555e74a1d285c56824" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_autoSize<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118" refid="structaruco_1_1_marker_detector_1_1_params_1a97ecbe801e86587f48016ded55f1a8eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_ts<sp/>=<sp/>0.25f;<sp/></highlight><highlight class="comment">//<sp/>$\tau_s$<sp/>is<sp/>a<sp/>factor<sp/>in<sp/>the<sp/>range<sp/>$(0,1]$<sp/>that<sp/>accounts<sp/>for<sp/>the<sp/>camera<sp/>motion<sp/>speed.<sp/>For<sp/>instance,<sp/>when<sp/>$\tau_s=0.1$,<sp/>it<sp/>means<sp/>that<sp/>in<sp/>the<sp/>next<sp/>frame,<sp/>$\tau_i$<sp/>is<sp/>such<sp/>that<sp/>markers<sp/>$10\%$<sp/>smaller<sp/>than<sp/>the<sp/>smallest<sp/>marker<sp/>in<sp/>the<sp/>current<sp/>image<sp/><sp/>will<sp/>be<sp/>seek.<sp/>To<sp/>avoid<sp/>loosing<sp/>track<sp/>of<sp/>the<sp/>markers.<sp/>If<sp/>no<sp/>markers<sp/>are<sp/>detected<sp/>in<sp/>a<sp/>frame,<sp/>$\tau_i$<sp/>is<sp/>set<sp/>to<sp/>zero<sp/>for<sp/>the<sp/>next<sp/>frame<sp/>so<sp/>that<sp/>markers<sp/>of<sp/>any<sp/>size<sp/>can<sp/>be<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="structaruco_1_1_marker_detector_1_1_params_1a60b8c8b9dce067a0441fb5cf7f10884c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structaruco_1_1_marker_detector_1_1_params_1a60b8c8b9dce067a0441fb5cf7f10884c" kindref="member">setAutoSizeSpeedUp</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ts<sp/>=<sp/>0.25)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_autoSize<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_ts<sp/>=<sp/>ts;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="structaruco_1_1_marker_detector_1_1_params_1a70207c4836da57da0cd257c2d5ca40cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structaruco_1_1_marker_detector_1_1_params_1a70207c4836da57da0cd257c2d5ca40cb" kindref="member">getAutoSizeSpeedUp</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="132"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_autoSize;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="structaruco_1_1_marker_detector_1_1_params_1aa74f07a309d1d58e81bffd70481d5b0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pyrfactor<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_detector" kindref="compound">MarkerDetector</ref>();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_detector" kindref="compound">MarkerDetector</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dict_type,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>error_correction_rate<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_detector" kindref="compound">MarkerDetector</ref>(std::string<sp/>dict_type,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>error_correction_rate<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>~<ref refid="classaruco_1_1_marker_detector" kindref="compound">MarkerDetector</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDetectionMode(<ref refid="namespacearuco_1ad3e67c58edd9a7465b69f2eae833dcbb" kindref="member">DetectionMode</ref><sp/>dm,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minMarkerSize<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><ref refid="namespacearuco_1ad3e67c58edd9a7465b69f2eae833dcbb" kindref="member">DetectionMode</ref><sp/>getDetectionMode();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>std::vector&lt;aruco::Marker&gt;<sp/>detect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>input);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>std::vector&lt;aruco::Marker&gt;<sp/>detect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>input,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_camera_parameters" kindref="compound">CameraParameters</ref>&amp;<sp/>camParams,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>markerSizeMeters,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setYPerperdicular<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>correctFisheye<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>detect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>input,<sp/>std::vector&lt;Marker&gt;&amp;<sp/>detectedMarkers,<sp/><ref refid="classaruco_1_1_camera_parameters" kindref="compound">CameraParameters</ref><sp/>camParams,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>markerSizeMeters<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setYPerperdicular<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>correctFisheye<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>detect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>input,<sp/>std::vector&lt;Marker&gt;&amp;<sp/>detectedMarkers,<sp/>cv::Mat<sp/>camMatrix<sp/>=<sp/>cv::Mat(),</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Mat<sp/>distCoeff<sp/>=<sp/>cv::Mat(),<sp/>cv::Mat<sp/>extrinsics<sp/>=<sp/>cv::Mat(),<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>markerSizeMeters<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setYPerperdicular<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>correctFisheye<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>/**</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>Sets<sp/>operating<sp/>params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>void<sp/>setParams(Params<sp/>p);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="classaruco_1_1_marker_detector_1afc3be319bb1db9237d9db80cc0bafc89" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structaruco_1_1_marker_detector_1_1_params" kindref="compound">Params</ref><sp/><ref refid="classaruco_1_1_marker_detector_1afc3be319bb1db9237d9db80cc0bafc89" kindref="member">getParameters</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="247"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_params;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="classaruco_1_1_marker_detector_1a11129dac9fa1832ca8a2e97dbb64c92e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structaruco_1_1_marker_detector_1_1_params" kindref="compound">Params</ref><sp/>&amp;<sp/><ref refid="classaruco_1_1_marker_detector_1a11129dac9fa1832ca8a2e97dbb64c92e" kindref="member">getParameters</ref>()</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_params;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDictionary(std::string<sp/>dict_type,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>error_correction_rate<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDictionary(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dict_type,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>error_correction_rate<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>getThresholdedImage(uint32_t<sp/>idx<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMarkerLabeler(cv::Ptr&lt;MarkerLabeler&gt;<sp/>detector);</highlight></codeline>
<codeline lineno="303" refid="classaruco_1_1_marker_detector_1a10154ebc733ce6f5bab431c6531505e4" refkind="member"><highlight class="normal"><sp/><sp/>cv::Ptr&lt;MarkerLabeler&gt;<sp/><ref refid="classaruco_1_1_marker_detector_1a10154ebc733ce6f5bab431c6531505e4" kindref="member">getMarkerLabeler</ref>()</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>markerIdDetector;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Represent<sp/>a<sp/>candidate<sp/>to<sp/>be<sp/>a<sp/>maker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="classaruco_1_1_marker_detector_1_1_marker_candidate" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classaruco_1_1_marker_detector_1_1_marker_candidate" kindref="compound">MarkerCandidate</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_marker" kindref="compound">Marker</ref></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="311" refid="classaruco_1_1_marker_detector_1_1_marker_candidate_1adad7bd66ecc4b887f12630821ee002e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaruco_1_1_marker_detector_1_1_marker_candidate_1adad7bd66ecc4b887f12630821ee002e1" kindref="member">MarkerCandidate</ref>()</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="classaruco_1_1_marker_detector_1_1_marker_candidate_1ab43a9ff111bbfd737a937e572ac3aed0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaruco_1_1_marker_detector_1_1_marker_candidate_1ab43a9ff111bbfd737a937e572ac3aed0" kindref="member">MarkerCandidate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_marker" kindref="compound">Marker</ref>&amp;<sp/>M)<sp/>:</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaruco_1_1_marker" kindref="compound">Marker</ref>(M)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="classaruco_1_1_marker_detector_1_1_marker_candidate_1a3504bfd04335da7f0da103f0a0bdade7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaruco_1_1_marker_detector_1_1_marker_candidate_1a3504bfd04335da7f0da103f0a0bdade7" kindref="member">MarkerCandidate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_marker_detector_1_1_marker_candidate" kindref="compound">MarkerCandidate</ref>&amp;<sp/>M)<sp/>:</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaruco_1_1_marker" kindref="compound">Marker</ref>(M)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>contour<sp/>=<sp/>M.<ref refid="classaruco_1_1_marker_detector_1_1_marker_candidate_1a0f6abf847dd7f620b6b65d2337171bea" kindref="member">contour</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>M.<ref refid="classaruco_1_1_marker_detector_1_1_marker_candidate_1abc39f35d25852efcb904748646f453b5" kindref="member">idx</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="classaruco_1_1_marker_detector_1_1_marker_candidate_1a0e9a7bba2548f5d7d26fdacd612d6f84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaruco_1_1_marker_detector_1_1_marker_candidate" kindref="compound">MarkerCandidate</ref>&amp;<sp/><ref refid="classaruco_1_1_marker_detector_1_1_marker_candidate_1a0e9a7bba2548f5d7d26fdacd612d6f84" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_marker_detector_1_1_marker_candidate" kindref="compound">MarkerCandidate</ref>&amp;<sp/>M)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*(<ref refid="classaruco_1_1_marker" kindref="compound">Marker</ref>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>=<sp/>(*(<ref refid="classaruco_1_1_marker" kindref="compound">Marker</ref>*)&amp;M);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>contour<sp/>=<sp/>M.<ref refid="classaruco_1_1_marker_detector_1_1_marker_candidate_1a0f6abf847dd7f620b6b65d2337171bea" kindref="member">contour</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>M.<ref refid="classaruco_1_1_marker_detector_1_1_marker_candidate_1abc39f35d25852efcb904748646f453b5" kindref="member">idx</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="classaruco_1_1_marker_detector_1_1_marker_candidate_1a0f6abf847dd7f620b6b65d2337171bea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;cv::Point&gt;<sp/><ref refid="classaruco_1_1_marker_detector_1_1_marker_candidate_1a0f6abf847dd7f620b6b65d2337171bea" kindref="member">contour</ref>;<sp/></highlight><highlight class="comment">//<sp/>all<sp/>the<sp/>points<sp/>of<sp/>its<sp/>contour</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="classaruco_1_1_marker_detector_1_1_marker_candidate_1abc39f35d25852efcb904748646f453b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_marker_detector_1_1_marker_candidate_1abc39f35d25852efcb904748646f453b5" kindref="member">idx</ref>;<sp/></highlight><highlight class="comment">//<sp/>index<sp/>position<sp/>in<sp/>the<sp/>global<sp/>contour<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>/**</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>Detection<sp/>of<sp/>candidates<sp/>to<sp/>be<sp/>markers,<sp/>i.e.,<sp/>rectangles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>This<sp/>function<sp/>returns<sp/>in<sp/>candidates<sp/>all<sp/>the<sp/>rectangles<sp/>found<sp/>in<sp/>a<sp/>thresholded<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>void<sp/>detectRectangles(const<sp/>ThresImage<sp/>&amp;thresImg,<sp/>vector&lt;std::vector&lt;cv::Point2f&gt;&gt;&amp;<sp/>candidates);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="classaruco_1_1_marker_detector_1a22763ba34972125b572b6990cca7f484" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;cv::Point2f&gt;&gt;<sp/><ref refid="classaruco_1_1_marker_detector_1a22763ba34972125b572b6990cca7f484" kindref="member">getCandidates</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="350"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_candidates;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>warp(cv::Mat&amp;<sp/>in,<sp/>cv::Mat&amp;<sp/>out,<sp/>cv::Size<sp/>size,<sp/>std::vector&lt;cv::Point2f&gt;<sp/>points);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>operating<sp/>params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>Params<sp/>_params;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><ref refid="namespacearuco_1ad3e67c58edd9a7465b69f2eae833dcbb" kindref="member">DetectionMode</ref><sp/>_detectMode<sp/>=<sp/><ref refid="namespacearuco_1ad3e67c58edd9a7465b69f2eae833dcbba0fa3a9e206561c5bf35d2f27bcefcd5e" kindref="member">DM_NORMAL</ref>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>images</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>grey,<sp/>thres;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>to<sp/>the<sp/>function<sp/>that<sp/>analyzes<sp/>a<sp/>rectangular<sp/>region<sp/>so<sp/>as<sp/>to<sp/>detect<sp/>its<sp/>internal<sp/>marker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>cv::Ptr&lt;MarkerLabeler&gt;<sp/>markerIdDetector;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>perimeter(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;cv::Point2f&gt;<sp/>&amp;<ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>auxiliary<sp/>functions<sp/>to<sp/>perform<sp/>LINES<sp/>refinement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>interpolate2Dline(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;cv::Point2f&gt;&amp;<sp/>inPoints,<sp/>cv::Point3f&amp;<sp/>outLine);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>cv::Point2f<sp/>getCrossPoint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Point3f&amp;<sp/>line1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Point3f&amp;<sp/>line2);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>distortPoints(std::vector&lt;cv::Point2f&gt;<sp/>in,<sp/>std::vector&lt;cv::Point2f&gt;&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>camMatrix,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>distCoeff);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>pixels<sp/>that<sp/>the<sp/>smallest<sp/>and<sp/>largest<sp/>allowed<sp/>markers<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getMinMarkerSizePix(cv::Size<sp/>orginput_imageSize)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>the<sp/>markerWarpSize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getMarkerWarpSize();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeElements(std::vector&lt;T&gt;&amp;<sp/>vinout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;&amp;<sp/>toRemove)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>the<sp/>invalid<sp/>ones<sp/>by<sp/>setting<sp/>the<sp/>valid<sp/>in<sp/>the<sp/>positions<sp/>left<sp/>by<sp/>the<sp/>invalids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>indexValid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>toRemove.size();<sp/>i++)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!toRemove[i])</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indexValid<sp/>!=<sp/>i)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vinout[indexValid]<sp/>=<sp/>vinout[i];</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexValid++;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>vinout.resize(indexValid);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>joinVectors(std::vector&lt;std::vector&lt;T&gt;&gt;&amp;<sp/>vv,<sp/>std::vector&lt;T&gt;&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clearv<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clearv)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v.clear();</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vv.size();<sp/>i++)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>vv[i].size();<sp/>j++)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.push_back(vv[i][j]);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>std::vector&lt;cv::Mat&gt;<sp/>imagePyramid;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>enlargeMarkerCandidate(MarkerCandidate<sp/>&amp;cand,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fact<sp/>=<sp/>1);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cornerUpsample(std::vector&lt;Marker&gt;&amp;<sp/>MarkerCanditates,<sp/>cv::Size<sp/>lowResImageSize);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cornerUpsample_SUBP(std::vector&lt;Marker&gt;&amp;<sp/>MarkerCanditates,<sp/>cv::Size<sp/>lowResImageSize);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>buildPyramid(std::vector&lt;cv::Mat&gt;<sp/>&amp;imagePyramid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat<sp/>&amp;grey,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minSize);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>std::vector&lt;aruco::MarkerDetector::MarkerCandidate&gt;<sp/>thresholdAndDetectRectangles(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat<sp/>&amp;<sp/>input,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thres_param1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thres_param2,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>erode,<sp/>cv::Mat<sp/>&amp;auxThresImage);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>std::vector&lt;aruco::MarkerDetector::MarkerCandidate&gt;<sp/>thresholdAndDetectRectangles(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat<sp/>&amp;image);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>std::vector&lt;aruco::MarkerDetector::MarkerCandidate&gt;<sp/>prefilterCandidates(std::vector&lt;MarkerCandidate&gt;<sp/>&amp;candidates,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Size<sp/>orgImageSize);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>std::vector&lt;cv::Mat&gt;<sp/>_thres_Images;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;MarkerCandidate&gt;<sp/>&gt;<sp/>_vcandidates;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;cv::Point2f&gt;<sp/>&gt;<sp/>_candidates;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>graphical<sp/>debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawApproxCurve(cv::Mat&amp;<sp/>in,<sp/>std::vector&lt;cv::Point&gt;&amp;<sp/>approxCurve,<sp/>cv::Scalar<sp/>color,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thickness<sp/>=<sp/>1);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawContour(cv::Mat&amp;<sp/>in,<sp/>std::vector&lt;cv::Point&gt;&amp;<sp/>contour,<sp/>cv::Scalar);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawAllContours(cv::Mat<sp/>input,<sp/>std::vector&lt;std::vector&lt;cv::Point&gt;&gt;&amp;<sp/>contours);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(cv::Mat<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Marker&gt;&amp;<sp/><ref refid="simple__double_8cpp_1ad3609934b55a628fdda977ca8724ce34" kindref="member">markers</ref>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ThreadTasks</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>THRESHOLD_TASK,<sp/>ERODE_TASK,<sp/>EXIT_TASK</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ThresAndDetectRectTASK</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inIdx,<sp/>outIdx;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>param1,<sp/>param2;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>ThreadTasks<sp/>task;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>thresholdAndDetectRectangles_thread();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>thread<sp/>safe<sp/>queue<sp/>to<sp/>implement<sp/>producer-consumer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Queue</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>pop()</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>mlock(mutex_);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(queue_.empty())</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cond_.wait(mlock);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>item<sp/>=<sp/>queue_.front();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>queue_.pop();</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>push(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>item)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>mlock(mutex_);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>queue_.push(item);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mlock.unlock();</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cond_.notify_one();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>size()</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>mlock(mutex_);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>s<sp/>=<sp/>queue_.size();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>std::queue&lt;T&gt;<sp/>queue_;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>std::mutex<sp/>mutex_;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>std::condition_variable<sp/>cond_;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>Queue&lt;ThresAndDetectRectTASK&gt;<sp/>_tasks;</highlight></codeline>
<codeline lineno="500"><highlight class="normal">};</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>aruco</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_ARUCO_MarkerDetector_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="robocluedo_dependencies/aruco_ros/aruco/include/aruco/markerdetector.h"/>
  </compounddef>
</doxygen>
