<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="endian_8h" kind="file" language="C++">
    <compoundname>endian.h</compoundname>
    <includes refid="version__number_8h" local="no">boost/predef/version_number.h</includes>
    <includes refid="make_8h" local="no">boost/predef/make.h</includes>
    <includes refid="gnu_8h" local="no">boost/predef/library/c/gnu.h</includes>
    <includes refid="macos_8h" local="no">boost/predef/os/macos.h</includes>
    <includes refid="bsd_8h" local="no">boost/predef/os/bsd.h</includes>
    <includes refid="android_8h" local="no">boost/predef/os/android.h</includes>
    <includes local="no">boost/predef/architecture.h</includes>
    <includes refid="test_8h" local="no">boost/predef/detail/test.h</includes>
    <includedby refid="endian__compat_8h" local="no">robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/predef/detail/endian_compat.h</includedby>
    <incdepgraph>
      <node id="13">
        <label>boost/predef/os/bsd/dragonfly.h</label>
        <link refid="dragonfly_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="4">
        <label>boost/predef/detail/test.h</label>
        <link refid="test_8h"/>
      </node>
      <node id="18">
        <label>boost/predef/architecture.h</label>
      </node>
      <node id="3">
        <label>boost/predef/make.h</label>
        <link refid="make_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>boost/predef/os/ios.h</label>
        <link refid="ios_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>boost/predef/os/bsd/open.h</label>
        <link refid="open_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>boost/predef/detail/_cassert.h</label>
        <link refid="__cassert_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>boost/predef/os/bsd/net.h</label>
        <link refid="net_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>boost/predef/os/macos.h</label>
        <link refid="macos_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>boost/predef/os/android.h</label>
        <link refid="android_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>boost/predef/os/bsd.h</label>
        <link refid="bsd_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>boost/predef/os/bsd/free.h</label>
        <link refid="free_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>boost/predef/library/c/gnu.h</label>
        <link refid="gnu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/predef/other/endian.h</label>
        <link refid="endian_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>boost/predef/version_number.h</label>
        <link refid="version__number_8h"/>
      </node>
      <node id="12">
        <label>boost/predef/os/bsd/bsdi.h</label>
        <link refid="bsdi_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>boost/predef/library/c/_prefix.h</label>
        <link refid="__prefix_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/predef/detail/endian_compat.h</label>
        <link refid="endian__compat_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>robocluedo_dependencies/vision_opencv/cv_bridge/src/cv_bridge.cpp</label>
        <link refid="cv__bridge_8cpp"/>
      </node>
      <node id="3">
        <label>robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp</label>
        <link refid="conversion_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/predef/other/endian.h</label>
        <link refid="endian_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>robocluedo_dependencies/vision_opencv/cv_bridge/test/test_endian.cpp</label>
        <link refid="test__endian_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="endian_8h_1a23dd70dd1f04391617d7f890b4ad24dd" prot="public" static="no">
        <name>BOOST_ENDIAN_BIG_BYTE</name>
        <initializer><ref refid="version__number_8h_1a8aa2f08a8ca6a0fb20ea17b199e033bd" kindref="member">BOOST_VERSION_NUMBER_NOT_AVAILABLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/predef/other/endian.h" line="47" column="9" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/predef/other/endian.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="endian_8h_1ab718b12cc1f2a4152aa278e2eaf315a1" prot="public" static="no">
        <name>BOOST_ENDIAN_BIG_WORD</name>
        <initializer><ref refid="version__number_8h_1a8aa2f08a8ca6a0fb20ea17b199e033bd" kindref="member">BOOST_VERSION_NUMBER_NOT_AVAILABLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/predef/other/endian.h" line="48" column="9" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/predef/other/endian.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="endian_8h_1ab7302a0a3094edc8f6f0547f07573128" prot="public" static="no">
        <name>BOOST_ENDIAN_LITTLE_BYTE</name>
        <initializer><ref refid="version__number_8h_1a8aa2f08a8ca6a0fb20ea17b199e033bd" kindref="member">BOOST_VERSION_NUMBER_NOT_AVAILABLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/predef/other/endian.h" line="49" column="9" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/predef/other/endian.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="endian_8h_1af840a3d9ef54716bf69ca817618d46aa" prot="public" static="no">
        <name>BOOST_ENDIAN_LITTLE_WORD</name>
        <initializer><ref refid="version__number_8h_1a8aa2f08a8ca6a0fb20ea17b199e033bd" kindref="member">BOOST_VERSION_NUMBER_NOT_AVAILABLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/predef/other/endian.h" line="50" column="9" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/predef/other/endian.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="endian_8h_1a9371815ff897ee92444bafef605dbe50" prot="public" static="no">
        <name>BOOST_ENDIAN_BIG_BYTE_NAME</name>
        <initializer>&quot;Byte-Swapped Big-Endian&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/predef/other/endian.h" line="187" column="9" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/predef/other/endian.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="endian_8h_1a0fb619dbffb8aa4ebf38797a6baa079f" prot="public" static="no">
        <name>BOOST_ENDIAN_BIG_WORD_NAME</name>
        <initializer>&quot;Word-Swapped Big-Endian&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/predef/other/endian.h" line="188" column="9" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/predef/other/endian.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="endian_8h_1a19f67d8691d7113a53996fc881f1ac55" prot="public" static="no">
        <name>BOOST_ENDIAN_LITTLE_BYTE_NAME</name>
        <initializer>&quot;Byte-Swapped Little-Endian&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/predef/other/endian.h" line="189" column="9" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/predef/other/endian.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="endian_8h_1a715b2619bf28db9ffbf10fa621039847" prot="public" static="no">
        <name>BOOST_ENDIAN_LITTLE_WORD_NAME</name>
        <initializer>&quot;Word-Swapped Little-Endian&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/predef/other/endian.h" line="190" column="9" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/predef/other/endian.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">Copyright<sp/>Rene<sp/>Rivera<sp/>2013-2015</highlight></codeline>
<codeline lineno="3"><highlight class="comment">Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight></codeline>
<codeline lineno="4"><highlight class="comment">(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight></codeline>
<codeline lineno="5"><highlight class="comment">http://www.boost.org/LICENSE_1_0.txt)</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_PREDEF_ENDIAN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_PREDEF_ENDIAN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="version__number_8h" kindref="compound">boost/predef/version_number.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="make_8h" kindref="compound">boost/predef/make.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gnu_8h" kindref="compound">boost/predef/library/c/gnu.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="macos_8h" kindref="compound">boost/predef/os/macos.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="bsd_8h" kindref="compound">boost/predef/os/bsd.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="android_8h" kindref="compound">boost/predef/os/android.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*`</highlight></codeline>
<codeline lineno="19"><highlight class="comment">[heading<sp/>`BOOST_ENDIAN_*`]</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight></codeline>
<codeline lineno="21"><highlight class="comment">Detection<sp/>of<sp/>endian<sp/>memory<sp/>ordering.<sp/>There<sp/>are<sp/>four<sp/>defined<sp/>macros</highlight></codeline>
<codeline lineno="22"><highlight class="comment">in<sp/>this<sp/>header<sp/>that<sp/>define<sp/>the<sp/>various<sp/>generally<sp/>possible<sp/>endian</highlight></codeline>
<codeline lineno="23"><highlight class="comment">memory<sp/>orderings:</highlight></codeline>
<codeline lineno="24"><highlight class="comment"></highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/>`BOOST_ENDIAN_BIG_BYTE`,<sp/>byte-swapped<sp/>big-endian.</highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/>`BOOST_ENDIAN_BIG_WORD`,<sp/>word-swapped<sp/>big-endian.</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/>`BOOST_ENDIAN_LITTLE_BYTE`,<sp/>byte-swapped<sp/>little-endian.</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/>`BOOST_ENDIAN_LITTLE_WORD`,<sp/>word-swapped<sp/>little-endian.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight></codeline>
<codeline lineno="30"><highlight class="comment">The<sp/>detection<sp/>is<sp/>conservative<sp/>in<sp/>that<sp/>it<sp/>only<sp/>identifies<sp/>endianness</highlight></codeline>
<codeline lineno="31"><highlight class="comment">that<sp/>it<sp/>knows<sp/>for<sp/>certain.<sp/>In<sp/>particular<sp/>bi-endianness<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="32"><highlight class="comment">indicated<sp/>as<sp/>is<sp/>it<sp/>not<sp/>practically<sp/>possible<sp/>to<sp/>determine<sp/>the</highlight></codeline>
<codeline lineno="33"><highlight class="comment">endianness<sp/>from<sp/>anything<sp/>but<sp/>an<sp/>operating<sp/>system<sp/>provided</highlight></codeline>
<codeline lineno="34"><highlight class="comment">header.<sp/>And<sp/>the<sp/>currently<sp/>known<sp/>headers<sp/>do<sp/>not<sp/>define<sp/>that</highlight></codeline>
<codeline lineno="35"><highlight class="comment">programatic<sp/>bi-endianness<sp/>is<sp/>available.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment">This<sp/>implementation<sp/>is<sp/>a<sp/>compilation<sp/>of<sp/>various<sp/>publicly<sp/>available</highlight></codeline>
<codeline lineno="38"><highlight class="comment">information<sp/>and<sp/>acquired<sp/>knowledge:</highlight></codeline>
<codeline lineno="39"><highlight class="comment"></highlight></codeline>
<codeline lineno="40"><highlight class="comment">#<sp/>The<sp/>indispensable<sp/>documentation<sp/>of<sp/>&quot;Pre-defined<sp/>Compiler<sp/>Macros&quot;</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/>[@http://sourceforge.net/p/predef/wiki/Endianness<sp/>Endianness].</highlight></codeline>
<codeline lineno="42"><highlight class="comment">#<sp/>The<sp/>various<sp/>endian<sp/>specifications<sp/>available<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/>[@http://wikipedia.org/<sp/>Wikipedia]<sp/>computer<sp/>architecture<sp/>pages.</highlight></codeline>
<codeline lineno="44"><highlight class="comment">#<sp/>Generally<sp/>available<sp/>searches<sp/>for<sp/>headers<sp/>that<sp/>define<sp/>endianness.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="endian_8h_1a23dd70dd1f04391617d7f890b4ad24dd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_ENDIAN_BIG_BYTE<sp/>BOOST_VERSION_NUMBER_NOT_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="endian_8h_1ab718b12cc1f2a4152aa278e2eaf315a1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_ENDIAN_BIG_WORD<sp/>BOOST_VERSION_NUMBER_NOT_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="endian_8h_1ab7302a0a3094edc8f6f0547f07573128" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_ENDIAN_LITTLE_BYTE<sp/>BOOST_VERSION_NUMBER_NOT_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="endian_8h_1af840a3d9ef54716bf69ca817618d46aa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_ENDIAN_LITTLE_WORD<sp/>BOOST_VERSION_NUMBER_NOT_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GNU<sp/>libc<sp/>provides<sp/>a<sp/>header<sp/>defining<sp/>__BYTE_ORDER,<sp/>or<sp/>_BYTE_ORDER.</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>And<sp/>some<sp/>OSs<sp/>provide<sp/>some<sp/>for<sp/>of<sp/>endian<sp/>header<sp/>also.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!BOOST_ENDIAN_BIG_BYTE<sp/>&amp;&amp;<sp/>!BOOST_ENDIAN_BIG_WORD<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>!BOOST_ENDIAN_LITTLE_BYTE<sp/>&amp;&amp;<sp/>!BOOST_ENDIAN_LITTLE_WORD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>BOOST_LIB_C_GNU<sp/>||<sp/>BOOST_OS_ANDROID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>include<sp/>&lt;<ref refid="endian_8h" kindref="compound">endian.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>BOOST_OS_MACOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include<sp/>&lt;machine/endian.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>BOOST_OS_BSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>BOOST_OS_BSD_OPEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include<sp/>&lt;machine/endian.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include<sp/>&lt;sys/endian.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>defined(__BYTE_ORDER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>defined(__BIG_ENDIAN)<sp/>&amp;&amp;<sp/>(__BYTE_ORDER<sp/>==<sp/>__BIG_ENDIAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undef<sp/>BOOST_ENDIAN_BIG_BYTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>BOOST_ENDIAN_BIG_BYTE<sp/>BOOST_VERSION_NUMBER_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>defined(__LITTLE_ENDIAN)<sp/>&amp;&amp;<sp/>(__BYTE_ORDER<sp/>==<sp/>__LITTLE_ENDIAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undef<sp/>BOOST_ENDIAN_LITTLE_BYTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>BOOST_ENDIAN_LITTLE_BYTE<sp/>BOOST_VERSION_NUMBER_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>defined(__PDP_ENDIAN)<sp/>&amp;&amp;<sp/>(__BYTE_ORDER<sp/>==<sp/>__PDP_ENDIAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undef<sp/>BOOST_ENDIAN_LITTLE_WORD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>BOOST_ENDIAN_LITTLE_WORD<sp/>BOOST_VERSION_NUMBER_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>!defined(__BYTE_ORDER)<sp/>&amp;&amp;<sp/>defined(_BYTE_ORDER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>defined(_BIG_ENDIAN)<sp/>&amp;&amp;<sp/>(_BYTE_ORDER<sp/>==<sp/>_BIG_ENDIAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undef<sp/>BOOST_ENDIAN_BIG_BYTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>BOOST_ENDIAN_BIG_BYTE<sp/>BOOST_VERSION_NUMBER_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>defined(_LITTLE_ENDIAN)<sp/>&amp;&amp;<sp/>(_BYTE_ORDER<sp/>==<sp/>_LITTLE_ENDIAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undef<sp/>BOOST_ENDIAN_LITTLE_BYTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>BOOST_ENDIAN_LITTLE_BYTE<sp/>BOOST_VERSION_NUMBER_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>defined(_PDP_ENDIAN)<sp/>&amp;&amp;<sp/>(_BYTE_ORDER<sp/>==<sp/>_PDP_ENDIAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undef<sp/>BOOST_ENDIAN_LITTLE_WORD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>BOOST_ENDIAN_LITTLE_WORD<sp/>BOOST_VERSION_NUMBER_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Built-in<sp/>byte-swpped<sp/>big-endian<sp/>macros.</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!BOOST_ENDIAN_BIG_BYTE<sp/>&amp;&amp;<sp/>!BOOST_ENDIAN_BIG_WORD<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>!BOOST_ENDIAN_LITTLE_BYTE<sp/>&amp;&amp;<sp/>!BOOST_ENDIAN_LITTLE_WORD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>(defined(__BIG_ENDIAN__)<sp/>&amp;&amp;<sp/>!defined(__LITTLE_ENDIAN__))<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(defined(_BIG_ENDIAN)<sp/>&amp;&amp;<sp/>!defined(_LITTLE_ENDIAN))<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined(__ARMEB__)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined(__THUMBEB__)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined(__AARCH64EB__)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined(_MIPSEB)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined(__MIPSEB)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined(__MIPSEB__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>undef<sp/>BOOST_ENDIAN_BIG_BYTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>BOOST_ENDIAN_BIG_BYTE<sp/>BOOST_VERSION_NUMBER_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Built-in<sp/>byte-swpped<sp/>little-endian<sp/>macros.</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!BOOST_ENDIAN_BIG_BYTE<sp/>&amp;&amp;<sp/>!BOOST_ENDIAN_BIG_WORD<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>!BOOST_ENDIAN_LITTLE_BYTE<sp/>&amp;&amp;<sp/>!BOOST_ENDIAN_LITTLE_WORD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>(defined(__LITTLE_ENDIAN__)<sp/>&amp;&amp;<sp/>!defined(__BIG_ENDIAN__))<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(defined(_LITTLE_ENDIAN)<sp/>&amp;&amp;<sp/>!defined(_BIG_ENDIAN))<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined(__ARMEL__)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined(__THUMBEL__)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined(__AARCH64EL__)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined(_MIPSEL)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined(__MIPSEL)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined(__MIPSEL__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>undef<sp/>BOOST_ENDIAN_LITTLE_BYTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>BOOST_ENDIAN_LITTLE_BYTE<sp/>BOOST_VERSION_NUMBER_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Some<sp/>architectures<sp/>are<sp/>strictly<sp/>one<sp/>endianess<sp/>(as<sp/>opposed</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>the<sp/>current<sp/>common<sp/>bi-endianess).</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!BOOST_ENDIAN_BIG_BYTE<sp/>&amp;&amp;<sp/>!BOOST_ENDIAN_BIG_WORD<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>!BOOST_ENDIAN_LITTLE_BYTE<sp/>&amp;&amp;<sp/>!BOOST_ENDIAN_LITTLE_WORD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&lt;boost/predef/architecture.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>BOOST_ARCH_M68K<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ARCH_PARISC<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ARCH_SPARC<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ARCH_SYS370<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ARCH_SYS390<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ARCH_Z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>undef<sp/>BOOST_ENDIAN_BIG_BYTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>BOOST_ENDIAN_BIG_BYTE<sp/>BOOST_VERSION_NUMBER_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>BOOST_ARCH_AMD64<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ARCH_IA64<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ARCH_X86<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ARCH_BLACKFIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>undef<sp/>BOOST_ENDIAN_LITTLE_BYTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>BOOST_ENDIAN_LITTLE_BYTE<sp/>BOOST_VERSION_NUMBER_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Windows<sp/>on<sp/>ARM,<sp/>if<sp/>not<sp/>otherwise<sp/>detected/specified,<sp/>is<sp/>always</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/>byte-swaped<sp/>little-endian.</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!BOOST_ENDIAN_BIG_BYTE<sp/>&amp;&amp;<sp/>!BOOST_ENDIAN_BIG_WORD<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>!BOOST_ENDIAN_LITTLE_BYTE<sp/>&amp;&amp;<sp/>!BOOST_ENDIAN_LITTLE_WORD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>BOOST_ARCH_ARM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>include<sp/>&lt;boost/predef/os/windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>BOOST_OS_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undef<sp/>BOOST_ENDIAN_LITTLE_BYTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>BOOST_ENDIAN_LITTLE_BYTE<sp/>BOOST_VERSION_NUMBER_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BOOST_ENDIAN_BIG_BYTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>BOOST_ENDIAN_BIG_BYTE_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BOOST_ENDIAN_BIG_WORD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>BOOST_ENDIAN_BIG_WORD_BYTE_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BOOST_ENDIAN_LITTLE_BYTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>BOOST_ENDIAN_LITTLE_BYTE_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BOOST_ENDIAN_LITTLE_WORD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>BOOST_ENDIAN_LITTLE_WORD_BYTE_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="endian_8h_1a9371815ff897ee92444bafef605dbe50" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_ENDIAN_BIG_BYTE_NAME<sp/>&quot;Byte-Swapped<sp/>Big-Endian&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="endian_8h_1a0fb619dbffb8aa4ebf38797a6baa079f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_ENDIAN_BIG_WORD_NAME<sp/>&quot;Word-Swapped<sp/>Big-Endian&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="endian_8h_1a19f67d8691d7113a53996fc881f1ac55" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_ENDIAN_LITTLE_BYTE_NAME<sp/>&quot;Byte-Swapped<sp/>Little-Endian&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="endian_8h_1a715b2619bf28db9ffbf10fa621039847" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOST_ENDIAN_LITTLE_WORD_NAME<sp/>&quot;Word-Swapped<sp/>Little-Endian&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="test_8h" kindref="compound">boost/predef/detail/test.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><ref refid="test_8h_1a94f6ef7bb7885dc7d884a2d0fb8b30fc" kindref="member">BOOST_PREDEF_DECLARE_TEST</ref>(<ref refid="endian_8h_1a23dd70dd1f04391617d7f890b4ad24dd" kindref="member">BOOST_ENDIAN_BIG_BYTE</ref>,<ref refid="endian_8h_1a9371815ff897ee92444bafef605dbe50" kindref="member">BOOST_ENDIAN_BIG_BYTE_NAME</ref>)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/predef/detail/test.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><ref refid="test_8h_1a94f6ef7bb7885dc7d884a2d0fb8b30fc" kindref="member">BOOST_PREDEF_DECLARE_TEST</ref>(<ref refid="endian_8h_1ab718b12cc1f2a4152aa278e2eaf315a1" kindref="member">BOOST_ENDIAN_BIG_WORD</ref>,<ref refid="endian_8h_1a0fb619dbffb8aa4ebf38797a6baa079f" kindref="member">BOOST_ENDIAN_BIG_WORD_NAME</ref>)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/predef/detail/test.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><ref refid="test_8h_1a94f6ef7bb7885dc7d884a2d0fb8b30fc" kindref="member">BOOST_PREDEF_DECLARE_TEST</ref>(<ref refid="endian_8h_1ab7302a0a3094edc8f6f0547f07573128" kindref="member">BOOST_ENDIAN_LITTLE_BYTE</ref>,<ref refid="endian_8h_1a19f67d8691d7113a53996fc881f1ac55" kindref="member">BOOST_ENDIAN_LITTLE_BYTE_NAME</ref>)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/predef/detail/test.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><ref refid="test_8h_1a94f6ef7bb7885dc7d884a2d0fb8b30fc" kindref="member">BOOST_PREDEF_DECLARE_TEST</ref>(<ref refid="endian_8h_1af840a3d9ef54716bf69ca817618d46aa" kindref="member">BOOST_ENDIAN_LITTLE_WORD</ref>,<ref refid="endian_8h_1a715b2619bf28db9ffbf10fa621039847" kindref="member">BOOST_ENDIAN_LITTLE_WORD_NAME</ref>)</highlight></codeline>
    </programlisting>
    <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/predef/other/endian.h"/>
  </compounddef>
</doxygen>
