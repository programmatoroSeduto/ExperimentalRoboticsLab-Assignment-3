<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespaceboost_1_1endian_1_1detail" kind="namespace" language="C++">
    <compoundname>boost::endian::detail</compoundname>
    <innerclass refid="classboost_1_1endian_1_1detail_1_1converter" prot="public">boost::endian::detail::converter</innerclass>
    <innerclass refid="classboost_1_1endian_1_1detail_1_1converter_3_01order_1_1big_00_01order_1_1big_00_01_t_01_4" prot="public">boost::endian::detail::converter&lt; order::big, order::big, T &gt;</innerclass>
    <innerclass refid="classboost_1_1endian_1_1detail_1_1converter_3_01order_1_1big_00_01order_1_1little_00_01_t_01_4" prot="public">boost::endian::detail::converter&lt; order::big, order::little, T &gt;</innerclass>
    <innerclass refid="classboost_1_1endian_1_1detail_1_1converter_3_01order_1_1little_00_01order_1_1big_00_01_t_01_4" prot="public">boost::endian::detail::converter&lt; order::little, order::big, T &gt;</innerclass>
    <innerclass refid="classboost_1_1endian_1_1detail_1_1converter_3_01order_1_1little_00_01order_1_1little_00_01_t_01_4" prot="public">boost::endian::detail::converter&lt; order::little, order::little, T &gt;</innerclass>
    <innerclass refid="classboost_1_1endian_1_1detail_1_1value__converter" prot="public">boost::endian::detail::value_converter</innerclass>
    <innerclass refid="classboost_1_1endian_1_1detail_1_1value__converter_3_01order_1_1big_00_01order_1_1big_00_01_t_01_4" prot="public">boost::endian::detail::value_converter&lt; order::big, order::big, T &gt;</innerclass>
    <innerclass refid="classboost_1_1endian_1_1detail_1_1value__converter_3_01order_1_1big_00_01order_1_1little_00_01_t_01_4" prot="public">boost::endian::detail::value_converter&lt; order::big, order::little, T &gt;</innerclass>
    <innerclass refid="classboost_1_1endian_1_1detail_1_1value__converter_3_01order_1_1little_00_01order_1_1big_00_01_t_01_4" prot="public">boost::endian::detail::value_converter&lt; order::little, order::big, T &gt;</innerclass>
    <innerclass refid="classboost_1_1endian_1_1detail_1_1value__converter_3_01order_1_1little_00_01order_1_1little_00_01_t_01_4" prot="public">boost::endian::detail::value_converter&lt; order::little, order::little, T &gt;</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceboost_1_1endian_1_1detail_1a2580bbef8bbaa6692bc7c3514395abea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classclass" kindref="compound">class</ref> T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T boost::endian::detail::std_endian_reverse</definition>
        <argsstring>(T x) BOOST_NOEXCEPT</argsstring>
        <name>std_endian_reverse</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="166" column="14" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="166" bodyend="173"/>
        <references refid="erl2-oracle-user-manual_8md_8txt_1a16754163197eb074b61db8a8c354ccaf" compoundref="erl2-oracle-user-manual_8md_8txt" startline="110">x</references>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1_1detail_1a7ea37c68200019f8a3f06f3568d2228d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classclass" kindref="compound">class</ref> T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::endian::detail::big_reverse_copy</definition>
        <argsstring>(T from, char *to) BOOST_NOEXCEPT</argsstring>
        <name>big_reverse_copy</name>
        <param>
          <type>T</type>
          <declname>from</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="447" column="17" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="447" bodyend="455" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="177" declcolumn="19"/>
        <references refid="erl3-oracle-user-manual_8md_8txt_1af02cd2ec07331037df3b999a6221822b" compoundref="erl3-oracle-user-manual_8md_8txt" startline="35">to</references>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1_1detail_1af703a32968c25880720c2c58979e51d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classclass" kindref="compound">class</ref> T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::endian::detail::big_reverse_copy</definition>
        <argsstring>(const char *from, T &amp;to) BOOST_NOEXCEPT</argsstring>
        <name>big_reverse_copy</name>
        <param>
          <type>const char *</type>
          <declname>from</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="457" column="17" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="457" bodyend="464" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="179" declcolumn="19"/>
        <references refid="erl3-oracle-user-manual_8md_8txt_1af02cd2ec07331037df3b999a6221822b" compoundref="erl3-oracle-user-manual_8md_8txt" startline="35">to</references>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1_1detail_1a68253296d8369b59b1bdb10dc8bb7471" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classclass" kindref="compound">class</ref> T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::endian::detail::little_reverse_copy</definition>
        <argsstring>(T from, char *to) BOOST_NOEXCEPT</argsstring>
        <name>little_reverse_copy</name>
        <param>
          <type>T</type>
          <declname>from</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="466" column="17" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="466" bodyend="474" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="181" declcolumn="19"/>
        <references refid="erl3-oracle-user-manual_8md_8txt_1af02cd2ec07331037df3b999a6221822b" compoundref="erl3-oracle-user-manual_8md_8txt" startline="35">to</references>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1_1detail_1ac2312532c62f8a40880947b2fd73882d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classclass" kindref="compound">class</ref> T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::endian::detail::little_reverse_copy</definition>
        <argsstring>(const char *from, T &amp;to) BOOST_NOEXCEPT</argsstring>
        <name>little_reverse_copy</name>
        <param>
          <type>const char *</type>
          <declname>from</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="476" column="17" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="476" bodyend="483" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="183" declcolumn="19"/>
        <references refid="erl3-oracle-user-manual_8md_8txt_1af02cd2ec07331037df3b999a6221822b" compoundref="erl3-oracle-user-manual_8md_8txt" startline="35">to</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="160" column="1"/>
  </compounddef>
</doxygen>
