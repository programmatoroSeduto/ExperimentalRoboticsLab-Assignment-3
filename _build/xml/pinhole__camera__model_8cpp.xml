<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="pinhole__camera__model_8cpp" kind="file" language="C++">
    <compoundname>pinhole_camera_model.cpp</compoundname>
    <includes refid="pinhole__camera__model_8h" local="yes">image_geometry/pinhole_camera_model.h</includes>
    <includes local="no">sensor_msgs/distortion_models.h</includes>
    <includes local="no">opencv2/calib3d/calib3d.hpp</includes>
    <incdepgraph>
      <node id="9">
        <label>ros/macros.h</label>
      </node>
      <node id="3">
        <label>sensor_msgs/CameraInfo.h</label>
      </node>
      <node id="10">
        <label>sensor_msgs/distortion_models.h</label>
      </node>
      <node id="6">
        <label>stdexcept</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="8">
        <label>exports.h</label>
        <link refid="exports_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>opencv2/core/mat.hpp</label>
      </node>
      <node id="2">
        <label>image_geometry/pinhole_camera_model.h</label>
        <link refid="pinhole__camera__model_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>opencv2/imgproc/imgproc.hpp</label>
      </node>
      <node id="1">
        <label>robocluedo_dependencies/vision_opencv/image_geometry/src/pinhole_camera_model.cpp</label>
        <link refid="pinhole__camera__model_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>opencv2/calib3d/calib3d.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache" prot="public">image_geometry::PinholeCameraModel::Cache</innerclass>
    <innernamespace refid="namespaceimage__geometry">image_geometry</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pinhole__camera__model_8h" kindref="compound">image_geometry/pinhole_camera_model.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sensor_msgs/distortion_models.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/calib3d/calib3d.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BOOST_SHARED_PTR_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/make_shared.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceimage__geometry" kindref="compound">image_geometry</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343ca91071c75155c18e8fbb0370bf73ff6a1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343c" kindref="member">DistortionState</ref><sp/>{<sp/><ref refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343ca0c4842f7c52829caefd563f3c2e230ea" kindref="member">NONE</ref>,<sp/><ref refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343ca19e63b72d954539ee7cdcbe8b4018793" kindref="member">CALIBRATED</ref>,<sp/><ref refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343ca91071c75155c18e8fbb0370bf73ff6a1" kindref="member">UNKNOWN</ref><sp/>};</highlight></codeline>
<codeline lineno="11" refid="namespaceimage__geometry_1a424126c810dda1c6323db253370fca12afbf3dc05f9bc19d70e65b4ec25b66b52" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceimage__geometry_1a424126c810dda1c6323db253370fca12" kindref="member">DistortionModel</ref><sp/>{<sp/><ref refid="namespaceimage__geometry_1a424126c810dda1c6323db253370fca12aae55a7fc987f7dfc00e592cfbd7c3365" kindref="member">EQUIDISTANT</ref>,<sp/><ref refid="namespaceimage__geometry_1a424126c810dda1c6323db253370fca12a7d76b74999d240a9e24bc674f4be68f0" kindref="member">PLUMB_BOB_OR_RATIONAL_POLYNOMIAL</ref>,<sp/><ref refid="namespaceimage__geometry_1a424126c810dda1c6323db253370fca12afbf3dc05f9bc19d70e65b4ec25b66b52" kindref="member">UNKNOWN_MODEL</ref><sp/>};</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache" kindref="compound">PinholeCameraModel::Cache</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15" refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1ac77532a5e21cbb2eb1582a468bbd14e6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343c" kindref="member">DistortionState</ref><sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1ac77532a5e21cbb2eb1582a468bbd14e6" kindref="member">distortion_state</ref>;</highlight></codeline>
<codeline lineno="16" refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a4261883b0853735300ba4497310c8c8b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceimage__geometry_1a424126c810dda1c6323db253370fca12" kindref="member">DistortionModel</ref><sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a4261883b0853735300ba4497310c8c8b" kindref="member">distortion_model</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a9c2e6e32b05b5805e59d014c25d4a482" refkind="member"><highlight class="normal"><sp/><sp/>cv::Mat_&lt;double&gt;<sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a155c32e0fd8173b89e3fff814eb54272" kindref="member">K_binned</ref>,<sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a9c2e6e32b05b5805e59d014c25d4a482" kindref="member">P_binned</ref>;<sp/></highlight><highlight class="comment">//<sp/>Binning<sp/>applied,<sp/>but<sp/>not<sp/>cropping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a3df53de2a75b0847b600ee40521c1534" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a3df53de2a75b0847b600ee40521c1534" kindref="member">full_maps_dirty</ref>;</highlight></codeline>
<codeline lineno="21" refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a96cf84046bdb0861016d726a05f45011" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>cv::Mat<sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1affa4ad428f542ad489a83be4e496395d" kindref="member">full_map1</ref>,<sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a96cf84046bdb0861016d726a05f45011" kindref="member">full_map2</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1abbc4be27f69cf1287193e7a9df9cf8b3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1abbc4be27f69cf1287193e7a9df9cf8b3" kindref="member">reduced_maps_dirty</ref>;</highlight></codeline>
<codeline lineno="24" refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1ab5eb0a2d70b9cd968ae2a1627bf99c1c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>cv::Mat<sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a07145d7817df332cc9db46705165d3ff" kindref="member">reduced_map1</ref>,<sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1ab5eb0a2d70b9cd968ae2a1627bf99c1c" kindref="member">reduced_map2</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1aa102266d64d7bef92923d2fd5e751896" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1aa102266d64d7bef92923d2fd5e751896" kindref="member">unrectify_full_maps_dirty</ref>;</highlight></codeline>
<codeline lineno="27" refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a4a94bc66733f1f081e38e0fd11919d08" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>cv::Mat<sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a8842b57170661d662706179de72e9c32" kindref="member">unrectify_full_map1</ref>,<sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a4a94bc66733f1f081e38e0fd11919d08" kindref="member">unrectify_full_map2</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a45539c0728d8748f3894716a1eb08e91" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a45539c0728d8748f3894716a1eb08e91" kindref="member">unrectify_reduced_maps_dirty</ref>;</highlight></codeline>
<codeline lineno="30" refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a898a67ba92891ffe48c8507dd3d9e2a6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>cv::Mat<sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1ae7fbca5241b7b3a34b395707400d9974" kindref="member">unrectify_reduced_map1</ref>,<sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a898a67ba92891ffe48c8507dd3d9e2a6" kindref="member">unrectify_reduced_map2</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a3cd1e12f4fdc8ffaec3bd1c374774455" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a3cd1e12f4fdc8ffaec3bd1c374774455" kindref="member">rectified_roi_dirty</ref>;</highlight></codeline>
<codeline lineno="33" refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a2e695c8f74b3fc1c0d61fc42da6c4851" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>cv::Rect<sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a2e695c8f74b3fc1c0d61fc42da6c4851" kindref="member">rectified_roi</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1ad65946a2f6d7ec5deae28fabfd91d9b8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1ad65946a2f6d7ec5deae28fabfd91d9b8" kindref="member">Cache</ref>()</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1ac77532a5e21cbb2eb1582a468bbd14e6" kindref="member">distortion_state</ref>(<ref refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343ca91071c75155c18e8fbb0370bf73ff6a1" kindref="member">UNKNOWN</ref>),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a4261883b0853735300ba4497310c8c8b" kindref="member">distortion_model</ref>(<ref refid="namespaceimage__geometry_1a424126c810dda1c6323db253370fca12afbf3dc05f9bc19d70e65b4ec25b66b52" kindref="member">UNKNOWN_MODEL</ref>),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a3df53de2a75b0847b600ee40521c1534" kindref="member">full_maps_dirty</ref>(true),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1abbc4be27f69cf1287193e7a9df9cf8b3" kindref="member">reduced_maps_dirty</ref>(true),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1aa102266d64d7bef92923d2fd5e751896" kindref="member">unrectify_full_maps_dirty</ref>(true),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a45539c0728d8748f3894716a1eb08e91" kindref="member">unrectify_reduced_maps_dirty</ref>(true),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structimage__geometry_1_1_pinhole_camera_model_1_1_cache_1a3cd1e12f4fdc8ffaec3bd1c374774455" kindref="member">rectified_roi_dirty</ref>(true)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal">};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classimage__geometry_1_1_pinhole_camera_model_1a8b71635f93504394844980dd39ab0ccf" refkind="member"><highlight class="normal"><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a8b71635f93504394844980dd39ab0ccf" kindref="member">PinholeCameraModel::PinholeCameraModel</ref>()</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classimage__geometry_1_1_pinhole_camera_model_1a8714a753e171292a4193422dd9cd07ff" refkind="member"><highlight class="normal"><ref refid="classimage__geometry_1_1_pinhole_camera_model" kindref="compound">PinholeCameraModel</ref>&amp;<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a8714a753e171292a4193422dd9cd07ff" kindref="member">PinholeCameraModel::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model" kindref="compound">PinholeCameraModel</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other.<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a39cf1b29b5704273c15723b608061052" kindref="member">initialized</ref>())</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classimage__geometry_1_1_pinhole_camera_model_1adcf644e58628954d28a89473beb4a03c" kindref="member">fromCameraInfo</ref>(other.<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a2946e61753fab48da515a6af7705867b" kindref="member">cameraInfo</ref>());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classimage__geometry_1_1_pinhole_camera_model_1aba78f938fa01ed728c78ee7b3c3379e8" refkind="member"><highlight class="normal"><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a8b71635f93504394844980dd39ab0ccf" kindref="member">PinholeCameraModel::PinholeCameraModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model" kindref="compound">PinholeCameraModel</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other.<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a39cf1b29b5704273c15723b608061052" kindref="member">initialized</ref>())</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1adcf644e58628954d28a89473beb4a03c" kindref="member">fromCameraInfo</ref>(other.<ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>uint32_t,<sp/>string,<sp/>bool...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="66" refid="namespaceimage__geometry_1a1d4fa0de6a4e9647005bae9c19d2ddad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceimage__geometry_1a1d4fa0de6a4e9647005bae9c19d2ddad" kindref="member">update</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>new_val,<sp/>T&amp;<sp/>my_val)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(my_val<sp/>==<sp/>new_val)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>my_val<sp/>=<sp/>new_val;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>std::vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatT&gt;</highlight></codeline>
<codeline lineno="76" refid="namespaceimage__geometry_1a7705ae72c107c8b9fd8e524a27a44205" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceimage__geometry_1a7705ae72c107c8b9fd8e524a27a44205" kindref="member">updateMat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatT&amp;<sp/>new_mat,<sp/>MatT&amp;<sp/>my_mat,<sp/>cv::Mat_&lt;double&gt;&amp;<sp/>cv_mat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((my_mat<sp/>==<sp/>new_mat)<sp/>&amp;&amp;<sp/>(my_mat.size()<sp/>==<sp/>cv_mat.rows*cv_mat.cols))</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>my_mat<sp/>=<sp/>new_mat;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>D<sp/>may<sp/>be<sp/>empty<sp/>if<sp/>camera<sp/>is<sp/>uncalibrated<sp/>or<sp/>distortion<sp/>model<sp/>is<sp/>non-standard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>cv_mat<sp/>=<sp/>(my_mat.size()<sp/>==<sp/>0)<sp/>?<sp/>cv::Mat_&lt;double&gt;()<sp/>:<sp/>cv::Mat_&lt;double&gt;(rows,<sp/>cols,<sp/>&amp;my_mat[0]);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatU&gt;</highlight></codeline>
<codeline lineno="87" refid="namespaceimage__geometry_1a2ae9d5d911b1eda3998a1e83fc603ff1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceimage__geometry_1a7705ae72c107c8b9fd8e524a27a44205" kindref="member">updateMat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatT&amp;<sp/>new_mat,<sp/>MatT&amp;<sp/>my_mat,<sp/>MatU&amp;<sp/>cv_mat)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((my_mat<sp/>==<sp/>new_mat)<sp/>&amp;&amp;<sp/>(my_mat.size()<sp/>==<sp/>cv_mat.rows*cv_mat.cols))</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>my_mat<sp/>=<sp/>new_mat;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>D<sp/>may<sp/>be<sp/>empty<sp/>if<sp/>camera<sp/>is<sp/>uncalibrated<sp/>or<sp/>distortion<sp/>model<sp/>is<sp/>non-standard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>cv_mat<sp/>=<sp/>MatU(&amp;my_mat[0]);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classimage__geometry_1_1_pinhole_camera_model_1adcf644e58628954d28a89473beb4a03c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1adcf644e58628954d28a89473beb4a03c" kindref="member">PinholeCameraModel::fromCameraInfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sensor_msgs::CameraInfo&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>our<sp/>repository<sp/>of<sp/>cached<sp/>data<sp/>(rectification<sp/>maps,<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BOOST_SHARED_PTR_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref><sp/>=<sp/>boost::make_shared&lt;Cache&gt;();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref><sp/>=<sp/>std::make_shared&lt;Cache&gt;();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Binning<sp/>=<sp/>0<sp/>is<sp/>considered<sp/>the<sp/>same<sp/>as<sp/>binning<sp/>=<sp/>1<sp/>(no<sp/>binning).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>uint32_t<sp/>binning_x<sp/>=<sp/>msg.binning_x<sp/>?<sp/>msg.binning_x<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>uint32_t<sp/>binning_y<sp/>=<sp/>msg.binning_y<sp/>?<sp/>msg.binning_y<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ROI<sp/>all<sp/>zeros<sp/>is<sp/>considered<sp/>the<sp/>same<sp/>as<sp/>full<sp/>resolution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>sensor_msgs::RegionOfInterest<sp/>roi<sp/>=<sp/>msg.roi;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(roi.x_offset<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>roi.y_offset<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>roi.width<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>roi.height<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>roi.width<sp/><sp/>=<sp/>msg.width;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>roi.height<sp/>=<sp/>msg.height;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>time<sp/>stamp<sp/>(and<sp/>frame_id<sp/>if<sp/>that<sp/>changes<sp/>for<sp/>some<sp/>reason)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.header<sp/>=<sp/>msg.header;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>any<sp/>parameters<sp/>that<sp/>have<sp/>changed.<sp/>The<sp/>full<sp/>rectification<sp/>maps<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>invalidated<sp/>by<sp/>any<sp/>change<sp/>in<sp/>the<sp/>calibration<sp/>parameters<sp/>OR<sp/>binning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>full_dirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>full_dirty<sp/>|=<sp/><ref refid="namespaceimage__geometry_1a1d4fa0de6a4e9647005bae9c19d2ddad" kindref="member">update</ref>(msg.height,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.height);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>full_dirty<sp/>|=<sp/><ref refid="namespaceimage__geometry_1a1d4fa0de6a4e9647005bae9c19d2ddad" kindref="member">update</ref>(msg.width,<sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.width);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>full_dirty<sp/>|=<sp/><ref refid="namespaceimage__geometry_1a1d4fa0de6a4e9647005bae9c19d2ddad" kindref="member">update</ref>(msg.distortion_model,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.distortion_model);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>full_dirty<sp/>|=<sp/><ref refid="namespaceimage__geometry_1a7705ae72c107c8b9fd8e524a27a44205" kindref="member">updateMat</ref>(msg.D,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.D,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a08b8ddc6537f437457498eb98fb145e0" kindref="member">D_</ref>,<sp/>1,<sp/>msg.D.size());</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>full_dirty<sp/>|=<sp/><ref refid="namespaceimage__geometry_1a7705ae72c107c8b9fd8e524a27a44205" kindref="member">updateMat</ref>(msg.K,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.K,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a2eade4c2b648c1980092b13b758d8835" kindref="member">K_full_</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>full_dirty<sp/>|=<sp/><ref refid="namespaceimage__geometry_1a7705ae72c107c8b9fd8e524a27a44205" kindref="member">updateMat</ref>(msg.R,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.R,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a577b028fd24fbb24c1d3fbeb4e0af398" kindref="member">R_</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>full_dirty<sp/>|=<sp/><ref refid="namespaceimage__geometry_1a7705ae72c107c8b9fd8e524a27a44205" kindref="member">updateMat</ref>(msg.P,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.P,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a6b50cc5d72c233d01fcb30b1af6d9fe8" kindref="member">P_full_</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>full_dirty<sp/>|=<sp/><ref refid="namespaceimage__geometry_1a1d4fa0de6a4e9647005bae9c19d2ddad" kindref="member">update</ref>(binning_x,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.binning_x);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>full_dirty<sp/>|=<sp/><ref refid="namespaceimage__geometry_1a1d4fa0de6a4e9647005bae9c19d2ddad" kindref="member">update</ref>(binning_y,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.binning_y);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;full_maps_dirty<sp/>|=<sp/>full_dirty;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_full_maps_dirty<sp/>|=<sp/>full_dirty;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>reduced<sp/>rectification<sp/>maps<sp/>are<sp/>invalidated<sp/>by<sp/>any<sp/>of<sp/>the<sp/>above<sp/>or<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>in<sp/>ROI.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reduced_dirty<sp/>=<sp/>full_dirty;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>reduced_dirty<sp/>|=<sp/><ref refid="namespaceimage__geometry_1a1d4fa0de6a4e9647005bae9c19d2ddad" kindref="member">update</ref>(roi.x_offset,<sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.roi.x_offset);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>reduced_dirty<sp/>|=<sp/><ref refid="namespaceimage__geometry_1a1d4fa0de6a4e9647005bae9c19d2ddad" kindref="member">update</ref>(roi.y_offset,<sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.roi.y_offset);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>reduced_dirty<sp/>|=<sp/><ref refid="namespaceimage__geometry_1a1d4fa0de6a4e9647005bae9c19d2ddad" kindref="member">update</ref>(roi.height,<sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.roi.height);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>reduced_dirty<sp/>|=<sp/><ref refid="namespaceimage__geometry_1a1d4fa0de6a4e9647005bae9c19d2ddad" kindref="member">update</ref>(roi.width,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.roi.width);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>reduced_dirty<sp/>|=<sp/><ref refid="namespaceimage__geometry_1a1d4fa0de6a4e9647005bae9c19d2ddad" kindref="member">update</ref>(roi.do_rectify,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.roi.do_rectify);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;reduced_maps_dirty<sp/>|=<sp/>reduced_dirty;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;reduced_maps_dirty<sp/>|=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;full_maps_dirty;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_reduced_maps_dirty<sp/>|=<sp/>reduced_dirty;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_reduced_maps_dirty<sp/>|=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_full_maps_dirty;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>is<sp/>the<sp/>rectified<sp/>ROI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;rectified_roi_dirty<sp/>|=<sp/>reduced_dirty;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Figure<sp/>out<sp/>how<sp/>to<sp/>handle<sp/>the<sp/>distortion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.distortion_model<sp/>==<sp/>sensor_msgs::distortion_models::PLUMB_BOB<sp/>||</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.distortion_model<sp/>==<sp/>sensor_msgs::distortion_models::RATIONAL_POLYNOMIAL<sp/>||</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.distortion_model<sp/>==<sp/><ref refid="namespaceimage__geometry_1a424126c810dda1c6323db253370fca12aae55a7fc987f7dfc00e592cfbd7c3365" kindref="member">sensor_msgs::distortion_models::EQUIDISTANT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>any<sp/>distortion<sp/>coefficient<sp/>is<sp/>non-zero,<sp/>then<sp/>need<sp/>to<sp/>apply<sp/>the<sp/>distortion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_state<sp/>=<sp/><ref refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343ca0c4842f7c52829caefd563f3c2e230ea" kindref="member">NONE</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.D.size();<sp/>++i)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.D[i]<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_state<sp/>=<sp/><ref refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343ca19e63b72d954539ee7cdcbe8b4018793" kindref="member">CALIBRATED</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_state<sp/>=<sp/><ref refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343ca91071c75155c18e8fbb0370bf73ff6a1" kindref="member">UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>distortion<sp/>model,<sp/>if<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.distortion_model<sp/>==<sp/>sensor_msgs::distortion_models::PLUMB_BOB<sp/>||</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.distortion_model<sp/>==<sp/>sensor_msgs::distortion_models::RATIONAL_POLYNOMIAL)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_model<sp/>=<sp/><ref refid="namespaceimage__geometry_1a424126c810dda1c6323db253370fca12a7d76b74999d240a9e24bc674f4be68f0" kindref="member">PLUMB_BOB_OR_RATIONAL_POLYNOMIAL</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.distortion_model<sp/>==<sp/><ref refid="namespaceimage__geometry_1a424126c810dda1c6323db253370fca12aae55a7fc987f7dfc00e592cfbd7c3365" kindref="member">sensor_msgs::distortion_models::EQUIDISTANT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_model<sp/>=<sp/><ref refid="namespaceimage__geometry_1a424126c810dda1c6323db253370fca12aae55a7fc987f7dfc00e592cfbd7c3365" kindref="member">EQUIDISTANT</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_model<sp/>=<sp/><ref refid="namespaceimage__geometry_1a424126c810dda1c6323db253370fca12afbf3dc05f9bc19d70e65b4ec25b66b52" kindref="member">UNKNOWN_MODEL</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>necessary,<sp/>create<sp/>new<sp/>K_<sp/>and<sp/>P_<sp/>adjusted<sp/>for<sp/>binning<sp/>and<sp/>ROI</highlight></codeline>
<codeline lineno="183"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>adjust_binning<sp/>=<sp/>(binning_x<sp/>&gt;<sp/>1)<sp/>||<sp/>(binning_y<sp/>&gt;<sp/>1);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>adjust_roi<sp/>=<sp/>(roi.x_offset<sp/>!=<sp/>0)<sp/>||<sp/>(roi.y_offset<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!adjust_binning<sp/>&amp;&amp;<sp/>!adjust_roi)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aca9b03228e206b4c99df4c1cb191214f" kindref="member">K_</ref><sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a2eade4c2b648c1980092b13b758d8835" kindref="member">K_full_</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a8f2a5195067e5dce80e8ea8a979e6254" kindref="member">P_</ref><sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a6b50cc5d72c233d01fcb30b1af6d9fe8" kindref="member">P_full_</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aca9b03228e206b4c99df4c1cb191214f" kindref="member">K_</ref><sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a2eade4c2b648c1980092b13b758d8835" kindref="member">K_full_</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a8f2a5195067e5dce80e8ea8a979e6254" kindref="member">P_</ref><sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a6b50cc5d72c233d01fcb30b1af6d9fe8" kindref="member">P_full_</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ROI<sp/>is<sp/>in<sp/>full<sp/>image<sp/>coordinates,<sp/>so<sp/>change<sp/>it<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adjust_roi)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>principal<sp/>point<sp/>by<sp/>the<sp/>offset</highlight></codeline>
<codeline lineno="198"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aca9b03228e206b4c99df4c1cb191214f" kindref="member">K_</ref>(0,2)<sp/>-=<sp/>roi.x_offset;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aca9b03228e206b4c99df4c1cb191214f" kindref="member">K_</ref>(1,2)<sp/>-=<sp/>roi.y_offset;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a8f2a5195067e5dce80e8ea8a979e6254" kindref="member">P_</ref>(0,2)<sp/>-=<sp/>roi.x_offset;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a8f2a5195067e5dce80e8ea8a979e6254" kindref="member">P_</ref>(1,2)<sp/>-=<sp/>roi.y_offset;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(binning_x<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale_x<sp/>=<sp/>1.0<sp/>/<sp/>binning_x;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aca9b03228e206b4c99df4c1cb191214f" kindref="member">K_</ref>(0,0)<sp/>*=<sp/>scale_x;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aca9b03228e206b4c99df4c1cb191214f" kindref="member">K_</ref>(0,2)<sp/>*=<sp/>scale_x;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a8f2a5195067e5dce80e8ea8a979e6254" kindref="member">P_</ref>(0,0)<sp/>*=<sp/>scale_x;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a8f2a5195067e5dce80e8ea8a979e6254" kindref="member">P_</ref>(0,2)<sp/>*=<sp/>scale_x;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a8f2a5195067e5dce80e8ea8a979e6254" kindref="member">P_</ref>(0,3)<sp/>*=<sp/>scale_x;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(binning_y<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale_y<sp/>=<sp/>1.0<sp/>/<sp/>binning_y;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aca9b03228e206b4c99df4c1cb191214f" kindref="member">K_</ref>(1,1)<sp/>*=<sp/>scale_y;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aca9b03228e206b4c99df4c1cb191214f" kindref="member">K_</ref>(1,2)<sp/>*=<sp/>scale_y;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a8f2a5195067e5dce80e8ea8a979e6254" kindref="member">P_</ref>(1,1)<sp/>*=<sp/>scale_y;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a8f2a5195067e5dce80e8ea8a979e6254" kindref="member">P_</ref>(1,2)<sp/>*=<sp/>scale_y;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a8f2a5195067e5dce80e8ea8a979e6254" kindref="member">P_</ref>(1,3)<sp/>*=<sp/>scale_y;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reduced_dirty;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="classimage__geometry_1_1_pinhole_camera_model_1af865eebea5405f59158194fd7780ec90" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1adcf644e58628954d28a89473beb4a03c" kindref="member">PinholeCameraModel::fromCameraInfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sensor_msgs::CameraInfoConstPtr&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1adcf644e58628954d28a89473beb4a03c" kindref="member">fromCameraInfo</ref>(*msg);</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="classimage__geometry_1_1_pinhole_camera_model_1a9842c73aad59668b024d2b83ff486823" refkind="member"><highlight class="normal">cv::Size<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9842c73aad59668b024d2b83ff486823" kindref="member">PinholeCameraModel::fullResolution</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="231"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a39cf1b29b5704273c15723b608061052" kindref="member">initialized</ref>()<sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cv::Size(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.width,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.height);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="classimage__geometry_1_1_pinhole_camera_model_1aff933f9400051b319525dab6b30f7c05" refkind="member"><highlight class="normal">cv::Size<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aff933f9400051b319525dab6b30f7c05" kindref="member">PinholeCameraModel::reducedResolution</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="237"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a39cf1b29b5704273c15723b608061052" kindref="member">initialized</ref>()<sp/>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>cv::Rect<sp/>roi<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a48d4007b6d56502229b72988b7929042" kindref="member">rectifiedRoi</ref>();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cv::Size(roi.width<sp/>/<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9f7f4cfc429df4868af4f46fa05139d6" kindref="member">binningX</ref>(),<sp/>roi.height<sp/>/<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1ae7bdfae1673ddf92e057100967797ccf" kindref="member">binningY</ref>());</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="classimage__geometry_1_1_pinhole_camera_model_1a89cf05e43a7d2f32c075d19b80fa70dd" refkind="member"><highlight class="normal">cv::Point2d<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a89cf05e43a7d2f32c075d19b80fa70dd" kindref="member">PinholeCameraModel::toFullResolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Point2d&amp;<sp/>uv_reduced)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="245"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>cv::Rect<sp/>roi<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a48d4007b6d56502229b72988b7929042" kindref="member">rectifiedRoi</ref>();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cv::Point2d(uv_reduced.x<sp/>*<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9f7f4cfc429df4868af4f46fa05139d6" kindref="member">binningX</ref>()<sp/>+<sp/>roi.x,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uv_reduced.y<sp/>*<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1ae7bdfae1673ddf92e057100967797ccf" kindref="member">binningY</ref>()<sp/>+<sp/>roi.y);</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="classimage__geometry_1_1_pinhole_camera_model_1a7c72a5668270d34ff98579a6a9d38420" refkind="member"><highlight class="normal">cv::Rect<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a89cf05e43a7d2f32c075d19b80fa70dd" kindref="member">PinholeCameraModel::toFullResolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Rect&amp;<sp/>roi_reduced)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="252"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>cv::Rect<sp/>roi<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a48d4007b6d56502229b72988b7929042" kindref="member">rectifiedRoi</ref>();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cv::Rect(roi_reduced.x<sp/>*<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9f7f4cfc429df4868af4f46fa05139d6" kindref="member">binningX</ref>()<sp/>+<sp/>roi.x,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roi_reduced.y<sp/>*<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1ae7bdfae1673ddf92e057100967797ccf" kindref="member">binningY</ref>()<sp/>+<sp/>roi.y,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roi_reduced.width<sp/><sp/>*<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9f7f4cfc429df4868af4f46fa05139d6" kindref="member">binningX</ref>(),</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roi_reduced.height<sp/>*<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1ae7bdfae1673ddf92e057100967797ccf" kindref="member">binningY</ref>());</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="classimage__geometry_1_1_pinhole_camera_model_1af90d7c3d9fe6386f7439ab97b7465c8b" refkind="member"><highlight class="normal">cv::Point2d<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1af90d7c3d9fe6386f7439ab97b7465c8b" kindref="member">PinholeCameraModel::toReducedResolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Point2d&amp;<sp/>uv_full)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="261"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>cv::Rect<sp/>roi<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a48d4007b6d56502229b72988b7929042" kindref="member">rectifiedRoi</ref>();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cv::Point2d((uv_full.x<sp/>-<sp/>roi.x)<sp/>/<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9f7f4cfc429df4868af4f46fa05139d6" kindref="member">binningX</ref>(),</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uv_full.y<sp/>-<sp/>roi.y)<sp/>/<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1ae7bdfae1673ddf92e057100967797ccf" kindref="member">binningY</ref>());</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="classimage__geometry_1_1_pinhole_camera_model_1a53423550e66cd797c0913bd98c29b0f3" refkind="member"><highlight class="normal">cv::Rect<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1af90d7c3d9fe6386f7439ab97b7465c8b" kindref="member">PinholeCameraModel::toReducedResolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Rect&amp;<sp/>roi_full)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="268"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>cv::Rect<sp/>roi<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a48d4007b6d56502229b72988b7929042" kindref="member">rectifiedRoi</ref>();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cv::Rect((roi_full.x<sp/>-<sp/>roi.x)<sp/>/<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9f7f4cfc429df4868af4f46fa05139d6" kindref="member">binningX</ref>(),</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(roi_full.y<sp/>-<sp/>roi.y)<sp/>/<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1ae7bdfae1673ddf92e057100967797ccf" kindref="member">binningY</ref>(),</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roi_full.width<sp/><sp/>/<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9f7f4cfc429df4868af4f46fa05139d6" kindref="member">binningX</ref>(),</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roi_full.height<sp/>/<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1ae7bdfae1673ddf92e057100967797ccf" kindref="member">binningY</ref>());</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="classimage__geometry_1_1_pinhole_camera_model_1a229852b48dbaa3ae00fc1fb3ac9eac73" refkind="member"><highlight class="normal">cv::Rect<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a229852b48dbaa3ae00fc1fb3ac9eac73" kindref="member">PinholeCameraModel::rawRoi</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="277"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a39cf1b29b5704273c15723b608061052" kindref="member">initialized</ref>()<sp/>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cv::Rect(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.roi.x_offset,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.roi.y_offset,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.roi.width,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.roi.height);</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="classimage__geometry_1_1_pinhole_camera_model_1a48d4007b6d56502229b72988b7929042" refkind="member"><highlight class="normal">cv::Rect<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a48d4007b6d56502229b72988b7929042" kindref="member">PinholeCameraModel::rectifiedRoi</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="285"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a39cf1b29b5704273c15723b608061052" kindref="member">initialized</ref>()<sp/>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;rectified_roi_dirty)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.roi.do_rectify)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;rectified_roi<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a229852b48dbaa3ae00fc1fb3ac9eac73" kindref="member">rawRoi</ref>();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;rectified_roi<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a64e2815572652c5b51ff31849db97b17" kindref="member">rectifyRoi</ref>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a229852b48dbaa3ae00fc1fb3ac9eac73" kindref="member">rawRoi</ref>());</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;rectified_roi_dirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;rectified_roi;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="classimage__geometry_1_1_pinhole_camera_model_1a8ded243252068a90be137c0fc1275fdb" refkind="member"><highlight class="normal">cv::Point2d<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a8ded243252068a90be137c0fc1275fdb" kindref="member">PinholeCameraModel::project3dToPixel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Point3d&amp;<sp/>xyz)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="300"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a39cf1b29b5704273c15723b608061052" kindref="member">initialized</ref>()<sp/>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>assert(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a8f2a5195067e5dce80e8ea8a979e6254" kindref="member">P_</ref>(2,<sp/>3)<sp/>==<sp/>0.0);<sp/></highlight><highlight class="comment">//<sp/>Calibrated<sp/>stereo<sp/>cameras<sp/>should<sp/>be<sp/>in<sp/>the<sp/>same<sp/>plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>[U<sp/>V<sp/>W]^T<sp/>=<sp/>P<sp/>*<sp/>[X<sp/>Y<sp/>Z<sp/>1]^T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>u<sp/>=<sp/>U/W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>v<sp/>=<sp/>V/W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>cv::Point2d<sp/>uv_rect;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>uv_rect.x<sp/>=<sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a7e041253ee062be2e2415f08a9882099" kindref="member">fx</ref>()*xyz.x<sp/>+<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a1bfc96ff7e2c4ade21a71fdf105547cb" kindref="member">Tx</ref>())<sp/>/<sp/>xyz.z<sp/>+<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aaece1bd454e98c5a31f8b7cadecc3271" kindref="member">cx</ref>();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>uv_rect.y<sp/>=<sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a8a03173d75221de77d387ddf7d1b9a1d" kindref="member">fy</ref>()*xyz.y<sp/>+<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0dc607b79f714b20d8a2317bb928f104" kindref="member">Ty</ref>())<sp/>/<sp/>xyz.z<sp/>+<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1acd6a134be6f13d510c4ce299fd3f1c6f" kindref="member">cy</ref>();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uv_rect;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="classimage__geometry_1_1_pinhole_camera_model_1a40ad5d3b964d63f41232428fb96376fe" refkind="member"><highlight class="normal">cv::Point3d<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a40ad5d3b964d63f41232428fb96376fe" kindref="member">PinholeCameraModel::projectPixelTo3dRay</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Point2d&amp;<sp/>uv_rect)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="314"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a40ad5d3b964d63f41232428fb96376fe" kindref="member">projectPixelTo3dRay</ref>(uv_rect,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a8f2a5195067e5dce80e8ea8a979e6254" kindref="member">P_</ref>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="classimage__geometry_1_1_pinhole_camera_model_1a48ab619b697b611a46b3ab1ec1255595" refkind="member"><highlight class="normal">cv::Point3d<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a40ad5d3b964d63f41232428fb96376fe" kindref="member">PinholeCameraModel::projectPixelTo3dRay</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Point2d&amp;<sp/>uv_rect,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Matx34d&amp;<sp/>P)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="319"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a39cf1b29b5704273c15723b608061052" kindref="member">initialized</ref>()<sp/>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a7e041253ee062be2e2415f08a9882099" kindref="member">fx</ref><sp/>=<sp/>P(0,0);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a8a03173d75221de77d387ddf7d1b9a1d" kindref="member">fy</ref><sp/>=<sp/>P(1,1);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aaece1bd454e98c5a31f8b7cadecc3271" kindref="member">cx</ref><sp/>=<sp/>P(0,2);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1acd6a134be6f13d510c4ce299fd3f1c6f" kindref="member">cy</ref><sp/>=<sp/>P(1,2);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a1bfc96ff7e2c4ade21a71fdf105547cb" kindref="member">Tx</ref><sp/>=<sp/>P(0,3);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0dc607b79f714b20d8a2317bb928f104" kindref="member">Ty</ref><sp/>=<sp/>P(1,3);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>cv::Point3d<sp/>ray;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>ray.x<sp/>=<sp/>(uv_rect.x<sp/>-<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aaece1bd454e98c5a31f8b7cadecc3271" kindref="member">cx</ref><sp/>-<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a1bfc96ff7e2c4ade21a71fdf105547cb" kindref="member">Tx</ref>)<sp/>/<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a7e041253ee062be2e2415f08a9882099" kindref="member">fx</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>ray.y<sp/>=<sp/>(uv_rect.y<sp/>-<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1acd6a134be6f13d510c4ce299fd3f1c6f" kindref="member">cy</ref><sp/>-<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0dc607b79f714b20d8a2317bb928f104" kindref="member">Ty</ref>)<sp/>/<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a8a03173d75221de77d387ddf7d1b9a1d" kindref="member">fy</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>ray.z<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ray;</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="classimage__geometry_1_1_pinhole_camera_model_1a3cb983f84f1993287247781a6bda39c2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a3cb983f84f1993287247781a6bda39c2" kindref="member">PinholeCameraModel::rectifyImage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>raw,<sp/>cv::Mat&amp;<sp/>rectified,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interpolation)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="337"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a39cf1b29b5704273c15723b608061052" kindref="member">initialized</ref>()<sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_state)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343ca0c4842f7c52829caefd563f3c2e230ea" kindref="member">NONE</ref>:</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>raw.copyTo(rectified);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343ca19e63b72d954539ee7cdcbe8b4018793" kindref="member">CALIBRATED</ref>:</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a1a1eaea138b6f4103ddd0aaa2c3e7533" kindref="member">initRectificationMaps</ref>();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(raw.depth()<sp/>==<sp/>CV_32F<sp/>||<sp/>raw.depth()<sp/>==<sp/>CV_64F)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::remap(raw,<sp/>rectified,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;reduced_map1,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;reduced_map2,<sp/>interpolation,<sp/>cv::BORDER_CONSTANT,<sp/>std::numeric_limits&lt;float&gt;::quiet_NaN());</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::remap(raw,<sp/>rectified,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;reduced_map1,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;reduced_map2,<sp/>interpolation);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_state<sp/>==<sp/><ref refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343ca91071c75155c18e8fbb0370bf73ff6a1" kindref="member">UNKNOWN</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classimage__geometry_1_1_exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>call<sp/>rectifyImage<sp/>when<sp/>distortion<sp/>is<sp/>unknown.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="classimage__geometry_1_1_pinhole_camera_model_1a017a52e057c798c49a8da3999967ee63" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a017a52e057c798c49a8da3999967ee63" kindref="member">PinholeCameraModel::unrectifyImage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>rectified,<sp/>cv::Mat&amp;<sp/>raw,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interpolation)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="361"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a39cf1b29b5704273c15723b608061052" kindref="member">initialized</ref>()<sp/>);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_state)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343ca0c4842f7c52829caefd563f3c2e230ea" kindref="member">NONE</ref>:</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rectified.copyTo(raw);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343ca19e63b72d954539ee7cdcbe8b4018793" kindref="member">CALIBRATED</ref>:</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a04aac2f6a633e3a325e09e0d3e878d22" kindref="member">initUnrectificationMaps</ref>();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rectified.depth()<sp/>==<sp/>CV_32F<sp/>||<sp/>rectified.depth()<sp/>==<sp/>CV_64F)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::remap(rectified,<sp/>raw,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_reduced_map1,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_reduced_map2,<sp/>interpolation,<sp/>cv::BORDER_CONSTANT,<sp/>std::numeric_limits&lt;float&gt;::quiet_NaN());</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::remap(rectified,<sp/>raw,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_reduced_map1,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_reduced_map2,<sp/>interpolation);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_state<sp/>==<sp/><ref refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343ca91071c75155c18e8fbb0370bf73ff6a1" kindref="member">UNKNOWN</ref>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classimage__geometry_1_1_exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>call<sp/>rectifyImage<sp/>when<sp/>distortion<sp/>is<sp/>unknown.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="classimage__geometry_1_1_pinhole_camera_model_1af9f461bb4610dadfed25aef2da6bc1c8" refkind="member"><highlight class="normal">cv::Point2d<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1af9f461bb4610dadfed25aef2da6bc1c8" kindref="member">PinholeCameraModel::rectifyPoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Point2d&amp;<sp/>uv_raw)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="385"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1af9f461bb4610dadfed25aef2da6bc1c8" kindref="member">rectifyPoint</ref>(uv_raw,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aca9b03228e206b4c99df4c1cb191214f" kindref="member">K_</ref>,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a8f2a5195067e5dce80e8ea8a979e6254" kindref="member">P_</ref>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="classimage__geometry_1_1_pinhole_camera_model_1a07e45aafec138761b8ed62f0b1906f83" refkind="member"><highlight class="normal">cv::Point2d<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1af9f461bb4610dadfed25aef2da6bc1c8" kindref="member">PinholeCameraModel::rectifyPoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Point2d&amp;<sp/>uv_raw,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Matx33d&amp;<sp/>K,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Matx34d&amp;<sp/>P)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="390"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a39cf1b29b5704273c15723b608061052" kindref="member">initialized</ref>()<sp/>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_state<sp/>==<sp/><ref refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343ca0c4842f7c52829caefd563f3c2e230ea" kindref="member">NONE</ref>)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uv_raw;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_state<sp/>==<sp/><ref refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343ca91071c75155c18e8fbb0370bf73ff6a1" kindref="member">UNKNOWN</ref>)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classimage__geometry_1_1_exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>call<sp/>rectifyPoint<sp/>when<sp/>distortion<sp/>is<sp/>unknown.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>assert(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_state<sp/>==<sp/><ref refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343ca19e63b72d954539ee7cdcbe8b4018793" kindref="member">CALIBRATED</ref>);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>cv::Point2f<sp/>raw32<sp/>=<sp/>uv_raw,<sp/>rect32;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat<sp/>src_pt(1,<sp/>1,<sp/>CV_32FC2,<sp/>&amp;raw32.x);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>dst_pt(1,<sp/>1,<sp/>CV_32FC2,<sp/>&amp;rect32.x);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_model)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceimage__geometry_1a424126c810dda1c6323db253370fca12a7d76b74999d240a9e24bc674f4be68f0" kindref="member">PLUMB_BOB_OR_RATIONAL_POLYNOMIAL</ref>:</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv::undistortPoints(src_pt,<sp/>dst_pt,<sp/>K,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a08b8ddc6537f437457498eb98fb145e0" kindref="member">D_</ref>,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a577b028fd24fbb24c1d3fbeb4e0af398" kindref="member">R_</ref>,<sp/>P);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceimage__geometry_1a424126c810dda1c6323db253370fca12aae55a7fc987f7dfc00e592cfbd7c3365" kindref="member">EQUIDISTANT</ref>:</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv::fisheye::undistortPoints(src_pt,<sp/>dst_pt,<sp/>K,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a08b8ddc6537f437457498eb98fb145e0" kindref="member">D_</ref>,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a577b028fd24fbb24c1d3fbeb4e0af398" kindref="member">R_</ref>,<sp/>P);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_model<sp/>==<sp/><ref refid="namespaceimage__geometry_1a424126c810dda1c6323db253370fca12afbf3dc05f9bc19d70e65b4ec25b66b52" kindref="member">UNKNOWN_MODEL</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classimage__geometry_1_1_exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;Wrong<sp/>distortion<sp/>model.<sp/>Supported<sp/>models:<sp/>PLUMB_BOB,<sp/>RATIONAL_POLYNOMIAL<sp/>and<sp/>EQUIDISTANT.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rect32;</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="classimage__geometry_1_1_pinhole_camera_model_1afdf040f493b8fa60a6192cd3f01901d3" refkind="member"><highlight class="normal">cv::Point2d<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1afdf040f493b8fa60a6192cd3f01901d3" kindref="member">PinholeCameraModel::unrectifyPoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Point2d&amp;<sp/>uv_rect)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="419"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1afdf040f493b8fa60a6192cd3f01901d3" kindref="member">unrectifyPoint</ref>(uv_rect,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aca9b03228e206b4c99df4c1cb191214f" kindref="member">K_</ref>,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a8f2a5195067e5dce80e8ea8a979e6254" kindref="member">P_</ref>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="classimage__geometry_1_1_pinhole_camera_model_1a48fac8ad47e8eab8424dec583f76078e" refkind="member"><highlight class="normal">cv::Point2d<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1afdf040f493b8fa60a6192cd3f01901d3" kindref="member">PinholeCameraModel::unrectifyPoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Point2d&amp;<sp/>uv_rect,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Matx33d&amp;<sp/>K,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Matx34d&amp;<sp/>P)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="424"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a39cf1b29b5704273c15723b608061052" kindref="member">initialized</ref>()<sp/>);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_state<sp/>==<sp/><ref refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343ca0c4842f7c52829caefd563f3c2e230ea" kindref="member">NONE</ref>)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uv_rect;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_state<sp/>==<sp/><ref refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343ca91071c75155c18e8fbb0370bf73ff6a1" kindref="member">UNKNOWN</ref>)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classimage__geometry_1_1_exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>call<sp/>unrectifyPoint<sp/>when<sp/>distortion<sp/>is<sp/>unknown.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>assert(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_state<sp/>==<sp/><ref refid="namespaceimage__geometry_1a5678e0cb61ab96a3f1f6c4954a8a343ca19e63b72d954539ee7cdcbe8b4018793" kindref="member">CALIBRATED</ref>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>a<sp/>ray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>cv::Point3d<sp/>ray<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a40ad5d3b964d63f41232428fb96376fe" kindref="member">projectPixelTo3dRay</ref>(uv_rect,<sp/>P);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Project<sp/>the<sp/>ray<sp/>on<sp/>the<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>r_vec,<sp/>t_vec<sp/>=<sp/>cv::Mat_&lt;double&gt;::zeros(3,<sp/>1);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>cv::Rodrigues(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a577b028fd24fbb24c1d3fbeb4e0af398" kindref="member">R_</ref>.t(),<sp/>r_vec);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>std::vector&lt;cv::Point2d&gt;<sp/>image_point;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_model)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceimage__geometry_1a424126c810dda1c6323db253370fca12a7d76b74999d240a9e24bc674f4be68f0" kindref="member">PLUMB_BOB_OR_RATIONAL_POLYNOMIAL</ref>:</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv::projectPoints(std::vector&lt;cv::Point3d&gt;(1,<sp/>ray),<sp/>r_vec,<sp/>t_vec,<sp/>K,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a08b8ddc6537f437457498eb98fb145e0" kindref="member">D_</ref>,<sp/>image_point);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceimage__geometry_1a424126c810dda1c6323db253370fca12aae55a7fc987f7dfc00e592cfbd7c3365" kindref="member">EQUIDISTANT</ref>:</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv::fisheye::projectPoints(std::vector&lt;cv::Point3d&gt;(1,<sp/>ray),<sp/>image_point,<sp/>r_vec,<sp/>t_vec,<sp/>K,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a08b8ddc6537f437457498eb98fb145e0" kindref="member">D_</ref>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_model<sp/>==<sp/><ref refid="namespaceimage__geometry_1a424126c810dda1c6323db253370fca12afbf3dc05f9bc19d70e65b4ec25b66b52" kindref="member">UNKNOWN_MODEL</ref>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classimage__geometry_1_1_exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;Wrong<sp/>distortion<sp/>model.<sp/>Supported<sp/>models:<sp/>PLUMB_BOB,<sp/>RATIONAL_POLYNOMIAL<sp/>and<sp/>EQUIDISTANT.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>image_point[0];</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="classimage__geometry_1_1_pinhole_camera_model_1a64e2815572652c5b51ff31849db97b17" refkind="member"><highlight class="normal">cv::Rect<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a64e2815572652c5b51ff31849db97b17" kindref="member">PinholeCameraModel::rectifyRoi</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Rect&amp;<sp/>roi_raw)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="457"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a39cf1b29b5704273c15723b608061052" kindref="member">initialized</ref>()<sp/>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>now,<sp/>just<sp/>unrectify<sp/>the<sp/>four<sp/>corners<sp/>and<sp/>take<sp/>the<sp/>bounding<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>ROI<sp/>is<sp/>specified<sp/>in<sp/>unbinned<sp/>coordinates<sp/>(see<sp/>REP-104),<sp/>this<sp/>has<sp/>to<sp/>use<sp/>K_full_<sp/>and<sp/>P_full_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>cv::Point2d<sp/>rect_tl<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1af9f461bb4610dadfed25aef2da6bc1c8" kindref="member">rectifyPoint</ref>(cv::Point2d(roi_raw.x,<sp/>roi_raw.y),<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a2eade4c2b648c1980092b13b758d8835" kindref="member">K_full_</ref>,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a6b50cc5d72c233d01fcb30b1af6d9fe8" kindref="member">P_full_</ref>);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>cv::Point2d<sp/>rect_tr<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1af9f461bb4610dadfed25aef2da6bc1c8" kindref="member">rectifyPoint</ref>(cv::Point2d(roi_raw.x<sp/>+<sp/>roi_raw.width,<sp/>roi_raw.y),<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a2eade4c2b648c1980092b13b758d8835" kindref="member">K_full_</ref>,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a6b50cc5d72c233d01fcb30b1af6d9fe8" kindref="member">P_full_</ref>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>cv::Point2d<sp/>rect_br<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1af9f461bb4610dadfed25aef2da6bc1c8" kindref="member">rectifyPoint</ref>(cv::Point2d(roi_raw.x<sp/>+<sp/>roi_raw.width,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roi_raw.y<sp/>+<sp/>roi_raw.height),<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a2eade4c2b648c1980092b13b758d8835" kindref="member">K_full_</ref>,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a6b50cc5d72c233d01fcb30b1af6d9fe8" kindref="member">P_full_</ref>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>cv::Point2d<sp/>rect_bl<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1af9f461bb4610dadfed25aef2da6bc1c8" kindref="member">rectifyPoint</ref>(cv::Point2d(roi_raw.x,<sp/>roi_raw.y<sp/>+<sp/>roi_raw.height),<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a2eade4c2b648c1980092b13b758d8835" kindref="member">K_full_</ref>,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a6b50cc5d72c233d01fcb30b1af6d9fe8" kindref="member">P_full_</ref>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>cv::Point<sp/>roi_tl(std::ceil<sp/>(std::min(rect_tl.x,<sp/>rect_bl.x)),</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ceil<sp/>(std::min(rect_tl.y,<sp/>rect_tr.y)));</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>cv::Point<sp/>roi_br(std::floor(std::max(rect_tr.x,<sp/>rect_br.x)),</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::floor(std::max(rect_bl.y,<sp/>rect_br.y)));</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cv::Rect(roi_tl.x,<sp/>roi_tl.y,<sp/>roi_br.x<sp/>-<sp/>roi_tl.x,<sp/>roi_br.y<sp/>-<sp/>roi_tl.y);</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="classimage__geometry_1_1_pinhole_camera_model_1ac8815860e7009e5407e43ebfafb3f4d0" refkind="member"><highlight class="normal">cv::Rect<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1ac8815860e7009e5407e43ebfafb3f4d0" kindref="member">PinholeCameraModel::unrectifyRoi</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Rect&amp;<sp/>roi_rect)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="479"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a39cf1b29b5704273c15723b608061052" kindref="member">initialized</ref>()<sp/>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>now,<sp/>just<sp/>unrectify<sp/>the<sp/>four<sp/>corners<sp/>and<sp/>take<sp/>the<sp/>bounding<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>cv::Point2d<sp/>raw_tl<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1afdf040f493b8fa60a6192cd3f01901d3" kindref="member">unrectifyPoint</ref>(cv::Point2d(roi_rect.x,<sp/>roi_rect.y));</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>cv::Point2d<sp/>raw_tr<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1afdf040f493b8fa60a6192cd3f01901d3" kindref="member">unrectifyPoint</ref>(cv::Point2d(roi_rect.x<sp/>+<sp/>roi_rect.width,<sp/>roi_rect.y));</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>cv::Point2d<sp/>raw_br<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1afdf040f493b8fa60a6192cd3f01901d3" kindref="member">unrectifyPoint</ref>(cv::Point2d(roi_rect.x<sp/>+<sp/>roi_rect.width,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roi_rect.y<sp/>+<sp/>roi_rect.height));</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>cv::Point2d<sp/>raw_bl<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1afdf040f493b8fa60a6192cd3f01901d3" kindref="member">unrectifyPoint</ref>(cv::Point2d(roi_rect.x,<sp/>roi_rect.y<sp/>+<sp/>roi_rect.height));</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>cv::Point<sp/>roi_tl(std::floor(std::min(raw_tl.x,<sp/>raw_bl.x)),</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::floor(std::min(raw_tl.y,<sp/>raw_tr.y)));</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>cv::Point<sp/>roi_br(std::ceil<sp/>(std::max(raw_tr.x,<sp/>raw_br.x)),</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ceil<sp/>(std::max(raw_bl.y,<sp/>raw_br.y)));</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cv::Rect(roi_tl.x,<sp/>roi_tl.y,<sp/>roi_br.x<sp/>-<sp/>roi_tl.x,<sp/>roi_br.y<sp/>-<sp/>roi_tl.y);</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499" refid="classimage__geometry_1_1_pinhole_camera_model_1a1a1eaea138b6f4103ddd0aaa2c3e7533" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a1a1eaea138b6f4103ddd0aaa2c3e7533" kindref="member">PinholeCameraModel::initRectificationMaps</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="500"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;full_maps_dirty)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>full-size<sp/>map<sp/>at<sp/>the<sp/>binned<sp/>resolution</highlight></codeline>
<codeline lineno="507"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Size<sp/>binned_resolution<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9842c73aad59668b024d2b83ff486823" kindref="member">fullResolution</ref>();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>binned_resolution.width<sp/><sp/>/=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9f7f4cfc429df4868af4f46fa05139d6" kindref="member">binningX</ref>();</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>binned_resolution.height<sp/>/=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1ae7bdfae1673ddf92e057100967797ccf" kindref="member">binningY</ref>();</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Matx33d<sp/>K_binned;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Matx34d<sp/>P_binned;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9f7f4cfc429df4868af4f46fa05139d6" kindref="member">binningX</ref>()<sp/>==<sp/>1<sp/>&amp;&amp;<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1ae7bdfae1673ddf92e057100967797ccf" kindref="member">binningY</ref>()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>K_binned<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a2eade4c2b648c1980092b13b758d8835" kindref="member">K_full_</ref>;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>P_binned<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a6b50cc5d72c233d01fcb30b1af6d9fe8" kindref="member">P_full_</ref>;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>K_binned<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a2eade4c2b648c1980092b13b758d8835" kindref="member">K_full_</ref>;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>P_binned<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a6b50cc5d72c233d01fcb30b1af6d9fe8" kindref="member">P_full_</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9f7f4cfc429df4868af4f46fa05139d6" kindref="member">binningX</ref>()<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale_x<sp/>=<sp/>1.0<sp/>/<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9f7f4cfc429df4868af4f46fa05139d6" kindref="member">binningX</ref>();</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_binned(0,0)<sp/>*=<sp/>scale_x;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_binned(0,2)<sp/>*=<sp/>scale_x;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_binned(0,0)<sp/>*=<sp/>scale_x;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_binned(0,2)<sp/>*=<sp/>scale_x;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_binned(0,3)<sp/>*=<sp/>scale_x;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1ae7bdfae1673ddf92e057100967797ccf" kindref="member">binningY</ref>()<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale_y<sp/>=<sp/>1.0<sp/>/<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1ae7bdfae1673ddf92e057100967797ccf" kindref="member">binningY</ref>();</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_binned(1,1)<sp/>*=<sp/>scale_y;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_binned(1,2)<sp/>*=<sp/>scale_y;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_binned(1,1)<sp/>*=<sp/>scale_y;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_binned(1,2)<sp/>*=<sp/>scale_y;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_binned(1,3)<sp/>*=<sp/>scale_y;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_model)<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceimage__geometry_1a424126c810dda1c6323db253370fca12a7d76b74999d240a9e24bc674f4be68f0" kindref="member">PLUMB_BOB_OR_RATIONAL_POLYNOMIAL</ref>:</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>m1type=CV_16SC2<sp/>to<sp/>use<sp/>fast<sp/>fixed-point<sp/>maps<sp/>(see<sp/>cv::remap)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::initUndistortRectifyMap(K_binned,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a08b8ddc6537f437457498eb98fb145e0" kindref="member">D_</ref>,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a577b028fd24fbb24c1d3fbeb4e0af398" kindref="member">R_</ref>,<sp/>P_binned,<sp/>binned_resolution,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CV_16SC2,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;full_map1,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;full_map2);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceimage__geometry_1a424126c810dda1c6323db253370fca12aae55a7fc987f7dfc00e592cfbd7c3365" kindref="member">EQUIDISTANT</ref>:</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::fisheye::initUndistortRectifyMap(K_binned,<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a08b8ddc6537f437457498eb98fb145e0" kindref="member">D_</ref>,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a577b028fd24fbb24c1d3fbeb4e0af398" kindref="member">R_</ref>,<sp/>P_binned,<sp/>binned_resolution,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CV_16SC2,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;full_map1,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;full_map2);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;distortion_model<sp/>==<sp/><ref refid="namespaceimage__geometry_1a424126c810dda1c6323db253370fca12afbf3dc05f9bc19d70e65b4ec25b66b52" kindref="member">UNKNOWN_MODEL</ref>);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classimage__geometry_1_1_exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;Wrong<sp/>distortion<sp/>model.<sp/>Supported<sp/>models:<sp/>PLUMB_BOB,<sp/>RATIONAL_POLYNOMIAL<sp/>and<sp/>EQUIDISTANT.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;full_maps_dirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;reduced_maps_dirty)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Rect<sp/>roi(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.roi.x_offset,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.roi.y_offset,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.roi.width,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.roi.height);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(roi.x<sp/>!=<sp/>0<sp/>||<sp/>roi.y<sp/>!=<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(roi.height<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>roi.height<sp/>!=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.height)<sp/>||</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(roi.width<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>roi.width<sp/><sp/>!=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.width))<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>map1<sp/>contains<sp/>integer<sp/>(x,y)<sp/>offsets,<sp/>which<sp/>we<sp/>adjust<sp/>by<sp/>the<sp/>ROI<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>map2<sp/>contains<sp/>LUT<sp/>index<sp/>for<sp/>subpixel<sp/>interpolation,<sp/>which<sp/>we<sp/>can<sp/>leave<sp/>as-is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>roi.x<sp/>/=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9f7f4cfc429df4868af4f46fa05139d6" kindref="member">binningX</ref>();</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>roi.y<sp/>/=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1ae7bdfae1673ddf92e057100967797ccf" kindref="member">binningY</ref>();</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>roi.width<sp/><sp/>/=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9f7f4cfc429df4868af4f46fa05139d6" kindref="member">binningX</ref>();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>roi.height<sp/>/=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1ae7bdfae1673ddf92e057100967797ccf" kindref="member">binningY</ref>();</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;reduced_map1<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;full_map1(roi)<sp/>-<sp/>cv::Scalar(roi.x,<sp/>roi.y);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;reduced_map2<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;full_map2(roi);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>we&apos;re<sp/>rectifying<sp/>the<sp/>full<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;reduced_map1<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;full_map1;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;reduced_map2<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;full_map2;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;reduced_maps_dirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581" refid="classimage__geometry_1_1_pinhole_camera_model_1a04aac2f6a633e3a325e09e0d3e878d22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a04aac2f6a633e3a325e09e0d3e878d22" kindref="member">PinholeCameraModel::initUnrectificationMaps</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="582"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_full_maps_dirty)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>full-size<sp/>map<sp/>at<sp/>the<sp/>binned<sp/>resolution</highlight></codeline>
<codeline lineno="589"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Size<sp/>binned_resolution<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9842c73aad59668b024d2b83ff486823" kindref="member">fullResolution</ref>();</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>binned_resolution.width<sp/><sp/>/=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9f7f4cfc429df4868af4f46fa05139d6" kindref="member">binningX</ref>();</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>binned_resolution.height<sp/>/=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1ae7bdfae1673ddf92e057100967797ccf" kindref="member">binningY</ref>();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Matx33d<sp/>K_binned;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Matx34d<sp/>P_binned;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9f7f4cfc429df4868af4f46fa05139d6" kindref="member">binningX</ref>()<sp/>==<sp/>1<sp/>&amp;&amp;<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1ae7bdfae1673ddf92e057100967797ccf" kindref="member">binningY</ref>()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>K_binned<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a2eade4c2b648c1980092b13b758d8835" kindref="member">K_full_</ref>;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>P_binned<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a6b50cc5d72c233d01fcb30b1af6d9fe8" kindref="member">P_full_</ref>;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>K_binned<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a2eade4c2b648c1980092b13b758d8835" kindref="member">K_full_</ref>;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>P_binned<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a6b50cc5d72c233d01fcb30b1af6d9fe8" kindref="member">P_full_</ref>;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9f7f4cfc429df4868af4f46fa05139d6" kindref="member">binningX</ref>()<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale_x<sp/>=<sp/>1.0<sp/>/<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9f7f4cfc429df4868af4f46fa05139d6" kindref="member">binningX</ref>();</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_binned(0,0)<sp/>*=<sp/>scale_x;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_binned(0,2)<sp/>*=<sp/>scale_x;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_binned(0,0)<sp/>*=<sp/>scale_x;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_binned(0,2)<sp/>*=<sp/>scale_x;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_binned(0,3)<sp/>*=<sp/>scale_x;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1ae7bdfae1673ddf92e057100967797ccf" kindref="member">binningY</ref>()<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale_y<sp/>=<sp/>1.0<sp/>/<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1ae7bdfae1673ddf92e057100967797ccf" kindref="member">binningY</ref>();</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_binned(1,1)<sp/>*=<sp/>scale_y;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_binned(1,2)<sp/>*=<sp/>scale_y;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_binned(1,1)<sp/>*=<sp/>scale_y;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_binned(1,2)<sp/>*=<sp/>scale_y;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_binned(1,3)<sp/>*=<sp/>scale_y;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>float_map_x(binned_resolution.height,<sp/>binned_resolution.width,<sp/>CV_32FC1);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>float_map_y(binned_resolution.height,<sp/>binned_resolution.width,<sp/>CV_32FC1);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" kindref="member">x</ref><sp/>=<sp/>0;<sp/><ref refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" kindref="member">x</ref><sp/>&lt;<sp/>binned_resolution.width;<sp/><ref refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" kindref="member">x</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacebug__m_1ab8596d2ae799585b0d89152b55891aa8" kindref="member">y</ref><sp/>=<sp/>0;<sp/><ref refid="namespacebug__m_1ab8596d2ae799585b0d89152b55891aa8" kindref="member">y</ref><sp/>&lt;<sp/>binned_resolution.height;<sp/><ref refid="namespacebug__m_1ab8596d2ae799585b0d89152b55891aa8" kindref="member">y</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Point2f<sp/>uv_raw(<ref refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" kindref="member">x</ref>,<sp/><ref refid="namespacebug__m_1ab8596d2ae799585b0d89152b55891aa8" kindref="member">y</ref>),<sp/>uv_rect;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uv_rect<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1af9f461bb4610dadfed25aef2da6bc1c8" kindref="member">rectifyPoint</ref>(uv_raw,<sp/>K_binned,<sp/>P_binned);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float_map_x.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(<ref refid="namespacebug__m_1ab8596d2ae799585b0d89152b55891aa8" kindref="member">y</ref>,<sp/><ref refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" kindref="member">x</ref>)<sp/>=<sp/>uv_rect.x;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float_map_y.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(<ref refid="namespacebug__m_1ab8596d2ae799585b0d89152b55891aa8" kindref="member">y</ref>,<sp/><ref refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" kindref="member">x</ref>)<sp/>=<sp/>uv_rect.y;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>m1type=CV_16SC2<sp/>to<sp/>use<sp/>fast<sp/>fixed-point<sp/>maps<sp/>(see<sp/>cv::remap)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>convertMaps(float_map_x,<sp/>float_map_y,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_full_map1,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_full_map2,<sp/>CV_16SC2);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_full_maps_dirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_reduced_maps_dirty)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Rect<sp/>roi(<ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.roi.x_offset,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.roi.y_offset,</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.roi.width,<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.roi.height);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(roi.x<sp/>!=<sp/>0<sp/>||<sp/>roi.y<sp/>!=<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(roi.height<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>roi.height<sp/>!=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.height)<sp/>||</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(roi.width<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>roi.width<sp/><sp/>!=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classimage__geometry_1_1_pinhole_camera_model_1aa287475d52013919ae82fd801a3c9762" kindref="member">cam_info_</ref>.width))<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>map1<sp/>contains<sp/>integer<sp/>(x,y)<sp/>offsets,<sp/>which<sp/>we<sp/>adjust<sp/>by<sp/>the<sp/>ROI<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>map2<sp/>contains<sp/>LUT<sp/>index<sp/>for<sp/>subpixel<sp/>interpolation,<sp/>which<sp/>we<sp/>can<sp/>leave<sp/>as-is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>roi.x<sp/>/=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9f7f4cfc429df4868af4f46fa05139d6" kindref="member">binningX</ref>();</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>roi.y<sp/>/=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1ae7bdfae1673ddf92e057100967797ccf" kindref="member">binningY</ref>();</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>roi.width<sp/><sp/>/=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a9f7f4cfc429df4868af4f46fa05139d6" kindref="member">binningX</ref>();</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>roi.height<sp/>/=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1ae7bdfae1673ddf92e057100967797ccf" kindref="member">binningY</ref>();</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_reduced_map1<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_full_map1(roi)<sp/>-<sp/>cv::Scalar(roi.x,<sp/>roi.y);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_reduced_map2<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_full_map2(roi);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>we&apos;re<sp/>rectifying<sp/>the<sp/>full<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_reduced_map1<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_full_map1;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_reduced_map2<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_full_map2;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model_1a0a72ec66e3b23de3146a4abe5834161a" kindref="member">cache_</ref>-&gt;unrectify_reduced_maps_dirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal">}<sp/></highlight><highlight class="comment">//namespace<sp/>image_geometry</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="robocluedo_dependencies/vision_opencv/image_geometry/src/pinhole_camera_model.cpp"/>
  </compounddef>
</doxygen>
