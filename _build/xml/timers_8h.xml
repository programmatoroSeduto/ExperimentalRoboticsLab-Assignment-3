<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="timers_8h" kind="file" language="C++">
    <compoundname>timers.h</compoundname>
    <includes local="no">chrono</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">iostream</includes>
    <includedby refid="markerdetector_8cpp" local="yes">robocluedo_dependencies/aruco_ros/aruco/src/aruco/markerdetector.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>robocluedo_dependencies/aruco_ros/aruco/include/aruco/timers.h</label>
        <link refid="timers_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>chrono</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>robocluedo_dependencies/aruco_ros/aruco/include/aruco/timers.h</label>
        <link refid="timers_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>robocluedo_dependencies/aruco_ros/aruco/src/aruco/markerdetector.cpp</label>
        <link refid="markerdetector_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structaruco_1_1_scope_timer" prot="public">aruco::ScopeTimer</innerclass>
    <innerclass refid="structaruco_1_1_scoped_timer_events" prot="public">aruco::ScopedTimerEvents</innerclass>
    <innerclass refid="structaruco_1_1_timer" prot="public">aruco::Timer</innerclass>
    <innernamespace refid="namespacearuco">aruco</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="29"><highlight class="preprocessor">#ifndef<sp/>ARUCO_TIMERS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARUCO_TIMERS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearuco" kindref="compound">aruco</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structaruco_1_1_scope_timer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structaruco_1_1_scope_timer" kindref="compound">ScopeTimer</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43" refid="structaruco_1_1_scope_timer_1a9cd0ee75359d6f90b5878eed35430e11" refkind="member"><highlight class="normal"><sp/><sp/>std::chrono::high_resolution_clock::time_point<sp/><ref refid="structaruco_1_1_scope_timer_1a67ec52934a4d2634715dccca99990f31" kindref="member">begin</ref>,<sp/><ref refid="structaruco_1_1_scope_timer_1a9cd0ee75359d6f90b5878eed35430e11" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="structaruco_1_1_scope_timer_1a1e1ce6b04f13b6df7ec1ba7c1dc58ff8" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structaruco_1_1_scope_timer_1a1e1ce6b04f13b6df7ec1ba7c1dc58ff8" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="46" refid="structaruco_1_1_scope_timer_1a4aae1dc6ea7e744e6a4cd5727a77948b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structaruco_1_1_scope_timer_1a4aae1dc6ea7e744e6a4cd5727a77948b" kindref="member">use</ref>;</highlight></codeline>
<codeline lineno="47" refid="structaruco_1_1_scope_timer_1a4daf60773aa551240f15a7bffc79ecba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="structaruco_1_1_scope_timer_1a4daf60773aa551240f15a7bffc79ecba" kindref="member">SCALE</ref></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="49" refid="structaruco_1_1_scope_timer_1a4daf60773aa551240f15a7bffc79ecbaa2928101445814904b026d3f1f8350792" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structaruco_1_1_scope_timer_1a4daf60773aa551240f15a7bffc79ecbaac0666ee077800628ffb5e9f4fe7af785" kindref="member">NSEC</ref>,<sp/><ref refid="structaruco_1_1_scope_timer_1a4daf60773aa551240f15a7bffc79ecbaa80d56b66f889bafa201517775e4b4b0b" kindref="member">MSEC</ref>,<sp/><ref refid="structaruco_1_1_scope_timer_1a4daf60773aa551240f15a7bffc79ecbaa2928101445814904b026d3f1f8350792" kindref="member">SEC</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="51" refid="structaruco_1_1_scope_timer_1aa21fddcfbc7b5dc9c298ef834b137002" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structaruco_1_1_scope_timer_1a4daf60773aa551240f15a7bffc79ecba" kindref="member">SCALE</ref><sp/><ref refid="structaruco_1_1_scope_timer_1aa21fddcfbc7b5dc9c298ef834b137002" kindref="member">sc</ref>;</highlight></codeline>
<codeline lineno="52" refid="structaruco_1_1_scope_timer_1a887873cd74f7a639b8d6bfebd7844478" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structaruco_1_1_scope_timer_1a887873cd74f7a639b8d6bfebd7844478" kindref="member">ScopeTimer</ref>(std::string<sp/>name_,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="structaruco_1_1_scope_timer_1a4daf60773aa551240f15a7bffc79ecba" kindref="member">SCALE</ref><sp/>_sc<sp/>=<sp/><ref refid="structaruco_1_1_scope_timer_1a4daf60773aa551240f15a7bffc79ecbaa80d56b66f889bafa201517775e4b4b0b" kindref="member">MSEC</ref>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_TIMERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structaruco_1_1_scope_timer_1a1e1ce6b04f13b6df7ec1ba7c1dc58ff8" kindref="member">name</ref><sp/>=<sp/>name_;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structaruco_1_1_scope_timer_1a4aae1dc6ea7e744e6a4cd5727a77948b" kindref="member">use</ref><sp/>=<sp/>use_;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structaruco_1_1_scope_timer_1aa21fddcfbc7b5dc9c298ef834b137002" kindref="member">sc</ref><sp/>=<sp/>_sc;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structaruco_1_1_scope_timer_1a67ec52934a4d2634715dccca99990f31" kindref="member">begin</ref><sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)name_;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)use_;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)_sc;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_TIMERS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structaruco_1_1_scope_timer_1a4796da7fbf5dc44515804279cfe6a749" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structaruco_1_1_scope_timer_1a4796da7fbf5dc44515804279cfe6a749" kindref="member">~ScopeTimer</ref>()</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_TIMERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structaruco_1_1_scope_timer_1a4aae1dc6ea7e744e6a4cd5727a77948b" kindref="member">use</ref>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structaruco_1_1_scope_timer_1a9cd0ee75359d6f90b5878eed35430e11" kindref="member">end</ref><sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fact<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>str;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="structaruco_1_1_scope_timer_1aa21fddcfbc7b5dc9c298ef834b137002" kindref="member">sc</ref>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structaruco_1_1_scope_timer_1a4daf60773aa551240f15a7bffc79ecbaac0666ee077800628ffb5e9f4fe7af785" kindref="member">NSEC</ref>:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fact<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ns&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structaruco_1_1_scope_timer_1a4daf60773aa551240f15a7bffc79ecbaa80d56b66f889bafa201517775e4b4b0b" kindref="member">MSEC</ref>:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fact<sp/>=<sp/>1e6;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ms&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structaruco_1_1_scope_timer_1a4daf60773aa551240f15a7bffc79ecbaa2928101445814904b026d3f1f8350792" kindref="member">SEC</ref>:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fact<sp/>=<sp/>1e9;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Time(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="structaruco_1_1_scope_timer_1a1e1ce6b04f13b6df7ec1ba7c1dc58ff8" kindref="member">name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>double(std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(<ref refid="structaruco_1_1_scope_timer_1a9cd0ee75359d6f90b5878eed35430e11" kindref="member">end</ref><sp/>-<sp/><ref refid="structaruco_1_1_scope_timer_1a67ec52934a4d2634715dccca99990f31" kindref="member">begin</ref>).<ref refid="random__robot_8cpp_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref>())<sp/>/<sp/>fact<sp/>&lt;&lt;<sp/>str</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_TIMERS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal">};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="structaruco_1_1_scoped_timer_events" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structaruco_1_1_scoped_timer_events" kindref="compound">ScopedTimerEvents</ref></highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105" refid="structaruco_1_1_scoped_timer_events_1a894991ee9e29c38fa384915f33582715" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="structaruco_1_1_scoped_timer_events_1a894991ee9e29c38fa384915f33582715" kindref="member">SCALE</ref></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="107" refid="structaruco_1_1_scoped_timer_events_1a894991ee9e29c38fa384915f33582715a2e6e762a3b80d7c15a47c521978ec247" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structaruco_1_1_scoped_timer_events_1a894991ee9e29c38fa384915f33582715a62b1ff6cfe422733692ce72045ea644a" kindref="member">NSEC</ref>,<sp/><ref refid="structaruco_1_1_scoped_timer_events_1a894991ee9e29c38fa384915f33582715ade5de9849560384d4391837b971522ed" kindref="member">MSEC</ref>,<sp/><ref refid="structaruco_1_1_scoped_timer_events_1a894991ee9e29c38fa384915f33582715a2e6e762a3b80d7c15a47c521978ec247" kindref="member">SEC</ref></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="structaruco_1_1_scoped_timer_events_1a259ab0144084aaae9de82a6b6f9af8cb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structaruco_1_1_scoped_timer_events_1a894991ee9e29c38fa384915f33582715" kindref="member">SCALE</ref><sp/><ref refid="structaruco_1_1_scoped_timer_events_1a259ab0144084aaae9de82a6b6f9af8cb" kindref="member">sc</ref>;</highlight></codeline>
<codeline lineno="111" refid="structaruco_1_1_scoped_timer_events_1afcd77e84392b0b0cfba3ce72c4a1b5c4" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::chrono::high_resolution_clock::time_point&gt;<sp/><ref refid="structaruco_1_1_scoped_timer_events_1afcd77e84392b0b0cfba3ce72c4a1b5c4" kindref="member">vtimes</ref>;</highlight></codeline>
<codeline lineno="112" refid="structaruco_1_1_scoped_timer_events_1a68099bbab1fa7c5655d0a327a575d8c5" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="structaruco_1_1_scoped_timer_events_1a68099bbab1fa7c5655d0a327a575d8c5" kindref="member">names</ref>;</highlight></codeline>
<codeline lineno="113" refid="structaruco_1_1_scoped_timer_events_1a5962b16dfa8ce7406437dfd11fea3308" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structaruco_1_1_scoped_timer_events_1a5962b16dfa8ce7406437dfd11fea3308" kindref="member">_name</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="structaruco_1_1_scoped_timer_events_1a0e88e60bc7befd9f41c02ad1d12b9325" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structaruco_1_1_scoped_timer_events_1a0e88e60bc7befd9f41c02ad1d12b9325" kindref="member">ScopedTimerEvents</ref>(std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>start<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="structaruco_1_1_scoped_timer_events_1a894991ee9e29c38fa384915f33582715" kindref="member">SCALE</ref><sp/>_sc<sp/>=<sp/><ref refid="structaruco_1_1_scoped_timer_events_1a894991ee9e29c38fa384915f33582715ade5de9849560384d4391837b971522ed" kindref="member">MSEC</ref>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_TIMERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structaruco_1_1_scoped_timer_events_1a7546bc427be35ef97eba3c1a4d5075bd" kindref="member">add</ref>(</highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structaruco_1_1_scoped_timer_events_1a259ab0144084aaae9de82a6b6f9af8cb" kindref="member">sc</ref><sp/>=<sp/>_sc;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structaruco_1_1_scoped_timer_events_1a5962b16dfa8ce7406437dfd11fea3308" kindref="member">_name</ref><sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)name;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)start;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)_sc;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_TIMERS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="structaruco_1_1_scoped_timer_events_1a7546bc427be35ef97eba3c1a4d5075bd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structaruco_1_1_scoped_timer_events_1a7546bc427be35ef97eba3c1a4d5075bd" kindref="member">add</ref>(std::string<sp/>name)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_TIMERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structaruco_1_1_scoped_timer_events_1afcd77e84392b0b0cfba3ce72c4a1b5c4" kindref="member">vtimes</ref>.push_back(std::chrono::high_resolution_clock::now());</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structaruco_1_1_scoped_timer_events_1a68099bbab1fa7c5655d0a327a575d8c5" kindref="member">names</ref>.push_back(name);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)name;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_TIMERS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="structaruco_1_1_scoped_timer_events_1a2d7df86d2d6881a1ce971f230d917613" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structaruco_1_1_scoped_timer_events_1a2d7df86d2d6881a1ce971f230d917613" kindref="member">addspaces</ref>(std::vector&lt;std::string&gt;<sp/>&amp;str)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>max<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;s<sp/>:<sp/>str)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>std::max(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(s.size()),<sp/>m);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;s<sp/>:<sp/>str)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(s.size()<sp/>&lt;<sp/>m)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.push_back(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="structaruco_1_1_scoped_timer_events_1a90b04f7bf0440005e4958baf95c6bd21" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structaruco_1_1_scoped_timer_events_1a90b04f7bf0440005e4958baf95c6bd21" kindref="member">~ScopedTimerEvents</ref>()</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_TIMERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fact<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="structaruco_1_1_scoped_timer_events_1a259ab0144084aaae9de82a6b6f9af8cb" kindref="member">sc</ref>)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structaruco_1_1_scoped_timer_events_1a894991ee9e29c38fa384915f33582715a62b1ff6cfe422733692ce72045ea644a" kindref="member">NSEC</ref>:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fact<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ns&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structaruco_1_1_scoped_timer_events_1a894991ee9e29c38fa384915f33582715ade5de9849560384d4391837b971522ed" kindref="member">MSEC</ref>:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fact<sp/>=<sp/>1e6;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ms&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structaruco_1_1_scoped_timer_events_1a894991ee9e29c38fa384915f33582715a2e6e762a3b80d7c15a47c521978ec247" kindref="member">SEC</ref>:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fact<sp/>=<sp/>1e9;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structaruco_1_1_scoped_timer_events_1a7546bc427be35ef97eba3c1a4d5075bd" kindref="member">add</ref>(</highlight><highlight class="stringliteral">&quot;total&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structaruco_1_1_scoped_timer_events_1a2d7df86d2d6881a1ce971f230d917613" kindref="member">addspaces</ref>(<ref refid="structaruco_1_1_scoped_timer_events_1a68099bbab1fa7c5655d0a327a575d8c5" kindref="member">names</ref>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="structaruco_1_1_scoped_timer_events_1afcd77e84392b0b0cfba3ce72c4a1b5c4" kindref="member">vtimes</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Time(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="structaruco_1_1_scoped_timer_events_1a5962b16dfa8ce7406437dfd11fea3308" kindref="member">_name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="structaruco_1_1_scoped_timer_events_1a68099bbab1fa7c5655d0a327a575d8c5" kindref="member">names</ref>[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>):&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>double(std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(<ref refid="structaruco_1_1_scoped_timer_events_1afcd77e84392b0b0cfba3ce72c4a1b5c4" kindref="member">vtimes</ref>[i]<sp/>-<sp/><ref refid="structaruco_1_1_scoped_timer_events_1afcd77e84392b0b0cfba3ce72c4a1b5c4" kindref="member">vtimes</ref>[i<sp/>-<sp/>1]).<ref refid="random__robot_8cpp_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref>())<sp/>/<sp/>fact</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>str<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>double(std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(<ref refid="structaruco_1_1_scoped_timer_events_1afcd77e84392b0b0cfba3ce72c4a1b5c4" kindref="member">vtimes</ref>[i]<sp/>-<sp/><ref refid="structaruco_1_1_scoped_timer_events_1afcd77e84392b0b0cfba3ce72c4a1b5c4" kindref="member">vtimes</ref>[0]).<ref refid="random__robot_8cpp_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref>())<sp/>/<sp/>fact<sp/>&lt;&lt;<sp/>str</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&lt;&lt;<sp/>&quot;\t&quot;<sp/>&lt;&lt;<sp/>vtimes[i].time_since_epoch().count()<sp/>*/</highlight><highlight class="normal">&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_TIMERS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal">};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="structaruco_1_1_timer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="aruco__export_8h_1a47f9a248e0fcb66919073dec9c96dbe7" kindref="member">ARUCO_EXPORT</ref><sp/><ref refid="structaruco_1_1_timer" kindref="compound">Timer</ref></highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195" refid="structaruco_1_1_timer_1a4cc94043c14677946e767d2ea66ee9f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="structaruco_1_1_timer_1a4cc94043c14677946e767d2ea66ee9f8" kindref="member">SCALE</ref></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="197" refid="structaruco_1_1_timer_1a4cc94043c14677946e767d2ea66ee9f8aa98af9c9dd7e6f4dba960b40cc8186a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>NSEC,<sp/>MSEC,<sp/>SEC</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="structaruco_1_1_timer_1a7dc2ef30dc5c4e938b3ec68dd5198872" refkind="member"><highlight class="normal"><sp/><sp/>std::chrono::high_resolution_clock::time_point<sp/><ref refid="structaruco_1_1_timer_1a7dc2ef30dc5c4e938b3ec68dd5198872" kindref="member">_s</ref>;</highlight></codeline>
<codeline lineno="201" refid="structaruco_1_1_timer_1aff9c1119100e74218c1551866682cf57" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0,<sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="202" refid="structaruco_1_1_timer_1a51f2a8c5a844375a5d9cb542f4ee8247" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structaruco_1_1_timer_1a51f2a8c5a844375a5d9cb542f4ee8247" kindref="member">_name</ref>;</highlight></codeline>
<codeline lineno="203" refid="structaruco_1_1_timer_1a9539d0c418e7df8576961267ef170680" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structaruco_1_1_timer_1a9539d0c418e7df8576961267ef170680" kindref="member">Timer</ref>()</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="structaruco_1_1_timer_1a18ec158b6103355bab5ee91fc0032b3f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structaruco_1_1_timer_1a18ec158b6103355bab5ee91fc0032b3f" kindref="member">Timer</ref>(std::string<sp/>name):_name(name)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="208" refid="structaruco_1_1_timer_1ac0cd9c715d197c11f680903e68c5a49d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structaruco_1_1_timer_1ac0cd9c715d197c11f680903e68c5a49d" kindref="member">setName</ref>(std::string<sp/>name)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>_name<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212" refid="structaruco_1_1_timer_1a6d7e4bb2f5df7aaae65b836bf51cc157" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structaruco_1_1_timer_1a6d7e4bb2f5df7aaae65b836bf51cc157" kindref="member">start</ref>()</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>_s<sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216" refid="structaruco_1_1_timer_1a7f0174dc95873cccb299a4cfa9c2fdd6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structaruco_1_1_timer_1a7f0174dc95873cccb299a4cfa9c2fdd6" kindref="member">end</ref>()</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>e<sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>double(std::chrono::duration_cast<sp/>&lt;<sp/>std::chrono::nanoseconds<sp/>&gt;<sp/>(e<sp/>-<sp/>_s).<ref refid="random__robot_8cpp_1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref>());</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="structaruco_1_1_timer_1a118192d6df21378d5e7debb638bde016" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structaruco_1_1_timer_1a118192d6df21378d5e7debb638bde016" kindref="member">print</ref>(<ref refid="structaruco_1_1_timer_1a4cc94043c14677946e767d2ea66ee9f8" kindref="member">SCALE</ref><sp/>sc<sp/>=<sp/>MSEC)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_TIMERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fact<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(sc)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NSEC:</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fact<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ns&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MSEC:</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fact<sp/>=<sp/>1e6;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ms&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SEC:</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fact<sp/>=<sp/>1e9;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Time(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(sum<sp/>/<sp/>n)<sp/>/<sp/>fact<sp/>&lt;&lt;<sp/>str<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)sc;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_TIMERS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="structaruco_1_1_timer_1acda8efd192722e09a607cc232e0c2ef2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structaruco_1_1_timer_1acda8efd192722e09a607cc232e0c2ef2" kindref="member">getAverage</ref>(<ref refid="structaruco_1_1_timer_1a4cc94043c14677946e767d2ea66ee9f8" kindref="member">SCALE</ref><sp/>sc<sp/>=<sp/>MSEC)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="253"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fact<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(sc)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NSEC:</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fact<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MSEC:</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fact<sp/>=<sp/>1e6;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SEC:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fact<sp/>=<sp/>1e9;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(sum<sp/>/<sp/>n)<sp/>/<sp/>fact;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal">};</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>aruco</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ARUCO_TIMERS_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="robocluedo_dependencies/aruco_ros/aruco/include/aruco/timers.h"/>
  </compounddef>
</doxygen>
