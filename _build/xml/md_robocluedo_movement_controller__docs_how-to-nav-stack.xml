<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="md_robocluedo_movement_controller__docs_how-to-nav-stack" kind="page">
    <compoundname>md_robocluedo_movement_controller__docs_how-to-nav-stack</compoundname>
    <title>HOW TO â€“ navigation stack CRASH COURSE</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><hruler/>
</para>
<para><programlisting filename=".toctree"><codeline><highlight class="normal">---</highlight></codeline>
<codeline><highlight class="normal">caption:<sp/>concents</highlight></codeline>
<codeline><highlight class="normal">---</highlight></codeline>
<codeline><highlight class="normal">./how-to-nav-stack.md</highlight></codeline>
</programlisting></para>
<para><hruler/>
</para>
<para>here are some quick informations about how to set up and use the <bold>ROS Navigation Stack</bold>.</para>
<sect1 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md357">
<title>install the Navigation Stack</title>
<sect2 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md358">
<title>Slam - GMapping</title>
<para>In order to run the project, you need the two packages you can find <ulink url="https://github.com/CarmineD8/slam_gmapping.git">here</ulink>. SLAM and GMapping are tools for managing the movement of a robot with noisy odometry: their purpose is to correct odometry in a way that the robot can get its position as precisely as possible.</para>
<para>Copy the packages into the workspace you prefer. <bold>use branch : <emphasis>noetic</emphasis></bold></para>
<para><programlisting filename=".bash"><codeline><highlight class="normal">git<sp/>clone<sp/>https://github.com/CarmineD8/slam_gmapping.git<sp/>-b<sp/>noetic</highlight></codeline>
</programlisting></para>
<para>Also these packages are required. Please install them.</para>
<para><programlisting filename=".bash"><codeline><highlight class="normal">sudo<sp/>apt-get<sp/>install<sp/>ros-noetic-openslam-gmapping</highlight></codeline>
<codeline><highlight class="normal">sudo<sp/>apt-get<sp/>install<sp/>ros-noetic-navigation</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md359">
<title>MoveBase</title>
<para>MoveBase is a motion planner: given a goal, it can retrieve a path from the actual position to the desired one, recomputing the path depending on the informations gathered by sensors in conjunction with Slam-GMapping.</para>
<para>Simply install it:</para>
<para><programlisting filename=".bash"><codeline><highlight class="normal">sudo<sp/>apt-get<sp/>install<sp/>ros-noetic-move-base</highlight></codeline>
</programlisting></para>
</sect2>
</sect1>
<sect1 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md360">
<title>A quick example with Gazebo and RViz</title>
<para>see <ulink url="https://github.com/programmatoroSeduto/RT1_assignment_2">this project on GitHub</ulink></para>
<para><programlisting filename=".bash"><codeline><highlight class="normal">git<sp/>clone<sp/>https://github.com/programmatoroSeduto/RT1_assignment_2.git<sp/>-b<sp/>main<sp/>./test_nav_stack</highlight></codeline>
</programlisting></para>
<para>in particular see <ulink url="https://github.com/programmatoroSeduto/RT1_assignment_2#how-to-set-up-the-project">how to setup the project</ulink></para>
<para>and see <ulink url="https://github.com/programmatoroSeduto/RT1_assignment_2#build-the-project">how to build the project</ulink></para>
</sect1>
<sect1 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md361">
<title>Names and Types of the Interfaces of MoveBase</title>
<para><bold>services</bold>:</para>
<para><programlisting><codeline><highlight class="normal">/move_base/NavfnROS/make_plan</highlight></codeline>
<codeline><highlight class="normal">/move_base/TrajectoryPlannerROS/set_parameters</highlight></codeline>
<codeline><highlight class="normal">/move_base/clear_costmaps</highlight></codeline>
<codeline><highlight class="normal">/move_base/global_costmap/inflation_layer/set_parameters</highlight></codeline>
<codeline><highlight class="normal">/move_base/global_costmap/obstacle_layer/set_parameters</highlight></codeline>
<codeline><highlight class="normal">/move_base/global_costmap/set_parameters</highlight></codeline>
<codeline><highlight class="normal">/move_base/global_costmap/static_layer/set_parameters</highlight></codeline>
<codeline><highlight class="normal">/move_base/local_costmap/inflation_layer/set_parameters</highlight></codeline>
<codeline><highlight class="normal">/move_base/local_costmap/obstacle_layer/set_parameters</highlight></codeline>
<codeline><highlight class="normal">/move_base/local_costmap/set_parameters</highlight></codeline>
<codeline><highlight class="normal">/move_base/make_plan</highlight></codeline>
<codeline><highlight class="normal">/move_base/set_parameters</highlight></codeline>
</programlisting></para>
<para><bold>topics:</bold></para>
<para><programlisting><codeline><highlight class="normal">/move_base/NavfnROS/plan</highlight></codeline>
<codeline><highlight class="normal">/move_base/TrajectoryPlannerROS/cost_cloud</highlight></codeline>
<codeline><highlight class="normal">/move_base/TrajectoryPlannerROS/global_plan</highlight></codeline>
<codeline><highlight class="normal">/move_base/TrajectoryPlannerROS/local_plan</highlight></codeline>
<codeline><highlight class="normal">/move_base/TrajectoryPlannerROS/parameter_descriptions</highlight></codeline>
<codeline><highlight class="normal">/move_base/TrajectoryPlannerROS/parameter_updates</highlight></codeline>
<codeline><highlight class="normal">/move_base/cancel</highlight></codeline>
<codeline><highlight class="normal">/move_base/current_goal</highlight></codeline>
<codeline><highlight class="normal">/move_base/feedback</highlight></codeline>
<codeline><highlight class="normal">/move_base/global_costmap/costmap</highlight></codeline>
<codeline><highlight class="normal">/move_base/global_costmap/costmap_updates</highlight></codeline>
<codeline><highlight class="normal">/move_base/global_costmap/footprint</highlight></codeline>
<codeline><highlight class="normal">/move_base/global_costmap/inflation_layer/parameter_descriptions</highlight></codeline>
<codeline><highlight class="normal">/move_base/global_costmap/inflation_layer/parameter_updates</highlight></codeline>
<codeline><highlight class="normal">/move_base/global_costmap/obstacle_layer/clearing_endpoints</highlight></codeline>
<codeline><highlight class="normal">/move_base/global_costmap/obstacle_layer/parameter_descriptions</highlight></codeline>
<codeline><highlight class="normal">/move_base/global_costmap/obstacle_layer/parameter_updates</highlight></codeline>
<codeline><highlight class="normal">/move_base/global_costmap/parameter_descriptions</highlight></codeline>
<codeline><highlight class="normal">/move_base/global_costmap/parameter_updates</highlight></codeline>
<codeline><highlight class="normal">/move_base/global_costmap/static_layer/parameter_descriptions</highlight></codeline>
<codeline><highlight class="normal">/move_base/global_costmap/static_layer/parameter_updates</highlight></codeline>
<codeline><highlight class="normal">/move_base/goal</highlight></codeline>
<codeline><highlight class="normal">/move_base/local_costmap/costmap</highlight></codeline>
<codeline><highlight class="normal">/move_base/local_costmap/costmap_updates</highlight></codeline>
<codeline><highlight class="normal">/move_base/local_costmap/footprint</highlight></codeline>
<codeline><highlight class="normal">/move_base/local_costmap/inflation_layer/parameter_descriptions</highlight></codeline>
<codeline><highlight class="normal">/move_base/local_costmap/inflation_layer/parameter_updates</highlight></codeline>
<codeline><highlight class="normal">/move_base/local_costmap/obstacle_layer/clearing_endpoints</highlight></codeline>
<codeline><highlight class="normal">/move_base/local_costmap/obstacle_layer/parameter_descriptions</highlight></codeline>
<codeline><highlight class="normal">/move_base/local_costmap/obstacle_layer/parameter_updates</highlight></codeline>
<codeline><highlight class="normal">/move_base/local_costmap/parameter_descriptions</highlight></codeline>
<codeline><highlight class="normal">/move_base/local_costmap/parameter_updates</highlight></codeline>
<codeline><highlight class="normal">/move_base/parameter_descriptions</highlight></codeline>
<codeline><highlight class="normal">/move_base/parameter_updates</highlight></codeline>
<codeline><highlight class="normal">/move_base/result</highlight></codeline>
<codeline><highlight class="normal">/move_base/status</highlight></codeline>
<codeline><highlight class="normal">/move_base_simple/goal</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md362">
<title>the action movebase</title>
<para>movebase is meant to behave as an action:</para>
<para><itemizedlist>
<listitem><para>you can send a 2D position to reach, topic <computeroutput>/move_base/goal</computeroutput> of type <computeroutput>move_base_msgs/MoveBaseAction</computeroutput></para>
</listitem><listitem><para>the fullfillment of the goal could require a lot of time</para>
</listitem><listitem><para>finally, the move-base node will send a result message with the success flag set</para>
</listitem></itemizedlist>
</para>
<para>for the complete list of interfaces opened by move-base, see <ulink url="http://docs.ros.org/en/fuerte/api/move_base_msgs/html/index-msg.html">move_base_msgs package</ulink></para>
<para>also <ulink url="http://wiki.ros.org/move_base">the official wiki</ulink> is a good reference (very seldom, sometimes it happens...)</para>
<sect2 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md363">
<title>A note about the action names</title>
<para><itemizedlist>
<listitem><para><emphasis>MoveBase.action</emphasis> <ndash/> the name of the action, file with 3 fields</para>
</listitem></itemizedlist>
</para>
<para>this message is split into 3 different messages:</para>
<para><itemizedlist>
<listitem><para><emphasis>MoveBaseActionGoal</emphasis></para>
</listitem><listitem><para><emphasis>MoveBaseActionResult</emphasis></para>
</listitem><listitem><para><emphasis>MoveBaseActionFeedback</emphasis></para>
</listitem></itemizedlist>
</para>
<para>but <emphasis>what you need are these names:</emphasis></para>
<para><itemizedlist>
<listitem><para><emphasis>MoveBaseGoal</emphasis></para>
</listitem><listitem><para><emphasis>MoveBaseResult</emphasis></para>
</listitem><listitem><para><emphasis>MoveBaseFeedback</emphasis></para>
</listitem></itemizedlist>
</para>
<para>note that in C++ you can refer to them in this way:</para>
<para><programlisting><codeline><highlight class="normal"><sp/>{c++}</highlight></codeline>
<codeline><highlight class="normal">//<sp/>include<sp/>of<sp/>the<sp/>action</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;move_base_msgs/MoveBaseAction.h&quot;</highlight></codeline>
<codeline><highlight class="normal">//<sp/>referring<sp/>to<sp/>the<sp/>file<sp/>MoveBase.action</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>the<sp/>goal<sp/>will<sp/>be</highlight></codeline>
<codeline><highlight class="normal">move_base_msgs::MoveBaseGoal<sp/>goal;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>the<sp/>feedback<sp/>will<sp/>be</highlight></codeline>
<codeline><highlight class="normal">move_base_msgs::MoveBaseFeedback<sp/>feedback;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>and<sp/>finally,<sp/>the<sp/>result<sp/>will<sp/>be</highlight></codeline>
<codeline><highlight class="normal">move_base_msgs::MoveBaseResult<sp/>result;</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md364">
<title>move_base_msgs/MoveBaseGoal</title>
<para><programlisting><codeline><highlight class="normal">geometry_msgs/PoseStamped<sp/>target_pose</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md365">
<title>move_base_msgs/MoveBaseFeedback</title>
<para><programlisting><codeline><highlight class="normal">geometry_msgs/PoseStamped<sp/>base_position</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md366">
<title>move_base_msgs/MoveBaseResult</title>
<para><bold>empty means that</bold> the framework will sendo only a simple signal.</para>
<para><programlisting><codeline><highlight class="normal">#<sp/>...<sp/>empty</highlight></codeline>
</programlisting></para>
</sect2>
</sect1>
<sect1 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md367">
<title>other interfaces</title>
<sect2 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md368">
<title>geometry_msgs/PoseStamped</title>
<para>a pose with the recording time and <emphasis>the frame</emphasis></para>
<para><programlisting><codeline><highlight class="normal">#<sp/>A<sp/>Pose<sp/>with<sp/>reference<sp/>coordinate<sp/>frame<sp/>and<sp/>timestamp</highlight></codeline>
<codeline><highlight class="normal">Header<sp/>header</highlight></codeline>
<codeline><highlight class="normal">Pose<sp/>pose</highlight></codeline>
</programlisting></para>
<para><bold>remember to give a frame for the pose!</bold> if you don&apos;t know what to take as pose frame, use this:</para>
<para><programlisting filename=".python"><codeline><highlight class="normal">msg.goal.target_pose.header.frame_id<sp/>=<sp/>&quot;map&quot;</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md369">
<title>geometry_msgs/Pose</title>
<para>a pose is made up of</para>
<para><itemizedlist>
<listitem><para>a position</para>
</listitem><listitem><para>and a orientation <emphasis>as quaternion</emphasis></para>
</listitem></itemizedlist>
</para>
<para><programlisting><codeline><highlight class="normal">#<sp/>A<sp/>representation<sp/>of<sp/>pose<sp/>in<sp/>free<sp/>space,<sp/>composed<sp/>of<sp/>postion<sp/>and<sp/>orientation.<sp/></highlight></codeline>
<codeline><highlight class="normal">Point<sp/>position</highlight></codeline>
<codeline><highlight class="normal">Quaternion<sp/>orientation</highlight></codeline>
</programlisting></para>
<para><bold>Gazebo spatial convention</bold></para>
<para><itemizedlist>
<listitem><para>horizontal plane : <bold>x</bold> (red) and <bold>y</bold> (green)</para>
</listitem><listitem><para>vertical axis : <bold>z</bold> (blue)</para>
</listitem></itemizedlist>
</para>
<para><bold>Rotation ROS convention</bold></para>
<para>see the answer under <ulink url="https://answers.ros.org/question/58863/incorrect-rollpitch-yaw-values-using-getrpy/">this post</ulink></para>
<para><itemizedlist>
<listitem><para><emphasis>x</emphasis> <ndash/> roll</para>
</listitem><listitem><para><emphasis>y</emphasis> <ndash/> pitch</para>
</listitem><listitem><para><emphasis>z</emphasis> <ndash/> yaw</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md370">
<title>geometry_msgs/Quaternion</title>
<para>representation of a rotation using 4 parameters.</para>
<para><programlisting><codeline><highlight class="normal">#<sp/>This<sp/>represents<sp/>an<sp/>orientation<sp/>in<sp/>free<sp/>space<sp/>in<sp/>quaternion<sp/>form.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">float64<sp/>x</highlight></codeline>
<codeline><highlight class="normal">float64<sp/>y</highlight></codeline>
<codeline><highlight class="normal">float64<sp/>z</highlight></codeline>
<codeline><highlight class="normal">float64<sp/>w</highlight></codeline>
</programlisting></para>
<para><bold>C++ how to convert quaternion to roll-pitch-yaw</bold></para>
<para>see <ulink url="https://gist.github.com/marcoarruda/f931232fe3490b7fa20dbb38da1195ac">this simple example on GitHub Gist</ulink></para>
<para><programlisting><codeline><highlight class="normal"><sp/>{c++}</highlight></codeline>
<codeline><highlight class="normal">//<sp/>tf<sp/>contains<sp/>some<sp/>tool<sp/>to<sp/>deal<sp/>with<sp/>the<sp/>most<sp/>common<sp/>geonetry<sp/>for<sp/>the<sp/>Geometrical<sp/>Unit</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;tf/tf.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">double<sp/>roll,<sp/>pitch,<sp/>yaw;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">tf::Quaternion<sp/>q(<sp/>x,<sp/>y,<sp/>z,<sp/>w<sp/>)</highlight></codeline>
<codeline><highlight class="normal">tf::Matrix3x3<sp/>m(q);</highlight></codeline>
<codeline><highlight class="normal">m.getRPY(roll,<sp/>pitch,<sp/>yaw);</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md371">
<title>geometry_msgs/Point</title>
<para><programlisting><codeline><highlight class="normal">#<sp/>This<sp/>contains<sp/>the<sp/>position<sp/>of<sp/>a<sp/>point<sp/>in<sp/>free<sp/>space</highlight></codeline>
<codeline><highlight class="normal">float64<sp/>x</highlight></codeline>
<codeline><highlight class="normal">float64<sp/>y</highlight></codeline>
<codeline><highlight class="normal">float64<sp/>z</highlight></codeline>
</programlisting></para>
</sect2>
</sect1>
<sect1 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md372">
<title>MoveBase action calls in C++</title>
<para>here are some templates if you wnat (like me) to put the hands on without bothering too much with technical details (geeky geeky).</para>
<sect2 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md373">
<title>C++ â€“ headers</title>
<para><programlisting><codeline><highlight class="normal"><sp/>{C++}</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;actionlib/client/simple_action_client.h&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;actionlib/client/terminal_state.h&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;tf/tf.h&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;string&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;geometry_msgs/PoseStamped.h&quot;</highlight></codeline>
<codeline><highlight class="normal">/*</highlight></codeline>
<codeline><highlight class="normal">std_msgs/Header<sp/>header</highlight></codeline>
<codeline><highlight class="normal">geometry_msgs/Pose<sp/>pose</highlight></codeline>
<codeline><highlight class="normal">*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;geometry_msgs/Pose.h&quot;</highlight></codeline>
<codeline><highlight class="normal">/*</highlight></codeline>
<codeline><highlight class="normal">Point<sp/>position</highlight></codeline>
<codeline><highlight class="normal">Quaternion<sp/>orientation</highlight></codeline>
<codeline><highlight class="normal">*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;geometry_msgs/Quaternion.h&quot;</highlight></codeline>
<codeline><highlight class="normal">/*</highlight></codeline>
<codeline><highlight class="normal">float64<sp/>x,<sp/>y,<sp/>z,<sp/>w</highlight></codeline>
<codeline><highlight class="normal">*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;geometry_msgs/Point.h&quot;</highlight></codeline>
<codeline><highlight class="normal">/*</highlight></codeline>
<codeline><highlight class="normal">float<sp/>x,<sp/>y,<sp/>z</highlight></codeline>
<codeline><highlight class="normal">*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;move_base_msgs/MoveBaseAction.h&quot;</highlight></codeline>
<codeline><highlight class="normal">//<sp/>move_base_msgs::MoveBaseGoal</highlight></codeline>
<codeline><highlight class="normal">/*</highlight></codeline>
<codeline><highlight class="normal">geometry_msgs/PoseStamped<sp/>target_pose</highlight></codeline>
<codeline><highlight class="normal">*/</highlight></codeline>
<codeline><highlight class="normal">//<sp/>move_base_msgs::MoveBaseFeedback</highlight></codeline>
<codeline><highlight class="normal">/*</highlight></codeline>
<codeline><highlight class="normal">geometry_msgs/PoseStamped<sp/>base_position</highlight></codeline>
<codeline><highlight class="normal">*/</highlight></codeline>
<codeline><highlight class="normal">//<sp/>move_base_msgs::MoveBaseResult</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>empty</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md374">
<title>C++ â€“ main with async spinner</title>
<para><bold>use async-spinner</bold> for your node, in this way:</para>
<para><programlisting><codeline><highlight class="normal">int<sp/>main(<sp/>int<sp/>argc,<sp/>char*<sp/>argv[]<sp/>)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ros::AsyncSpinner<sp/>spinner(<sp/>2<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>spinner.start(<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ros::waitForShutdown(<sp/>);<sp/>//<sp/>same<sp/>as<sp/>ros::spin(<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md375">
<title>C++ â€“ open the action client</title>
<para><bold>declaration of the macros and pointers</bold>: declare globally</para>
<para><programlisting><codeline><highlight class="normal"><sp/>{C++}</highlight></codeline>
<codeline><highlight class="normal">//<sp/>move_base<sp/>action<sp/>client</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>ACTION_MOVE_BASE<sp/>&quot;move_base&quot;</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>TIMEOUT_MOVE_BASE<sp/>5</highlight></codeline>
<codeline><highlight class="normal">actionlib::SimpleActionClient&lt;move_base_msgs::MoveBaseAction&gt;<sp/>*actcl_move_base(<sp/>);</highlight></codeline>
</programlisting></para>
<para><bold>open the interface</bold> in the main function, assuming the client global for the node,</para>
<para><programlisting><codeline><highlight class="normal"><sp/>{C++}</highlight></codeline>
<codeline><highlight class="normal">TLOG(<sp/>&quot;opening<sp/>action<sp/>client<sp/>&quot;<sp/>&lt;&lt;<sp/>LOGSQUARE(<sp/>ACTION_MOVE_BASE<sp/>)<sp/>&lt;&lt;<sp/>&quot;<sp/>...<sp/>&quot;<sp/>);</highlight></codeline>
<codeline><highlight class="normal">actionlib::SimpleActionClient&lt;move_base_msgs::MoveBaseAction&gt;<sp/>tactcl_move_base(<sp/>ACTION_MOVE_BASE,<sp/>true<sp/>);</highlight></codeline>
<codeline><highlight class="normal">if(<sp/>!tactcl_act.waitForServer(<sp/>ros::Duration(<sp/>TIMEOUT_MOVE_BASE<sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TERR(<sp/>&quot;unable<sp/>to<sp/>connect<sp/>to<sp/>the<sp/>action<sp/>server<sp/>(timeout<sp/>&quot;<sp/>&lt;&lt;<sp/>TIMEOUT_MOVE_BASE<sp/>&lt;&lt;<sp/>&quot;s)<sp/>&quot;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;--<sp/>action<sp/>&quot;<sp/>&lt;&lt;<sp/>LOGSQUARE(<sp/>ACTION_MovE_BASE<sp/>)<sp/>&lt;&lt;<sp/>&quot;\n&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;\t<sp/>&quot;<sp/>&lt;&lt;<sp/>(tactcl_move_base.isServerConnected(<sp/>)<sp/>?<sp/>&quot;<sp/>it<sp/>seems<sp/>not<sp/>online<sp/>&quot;<sp/>:<sp/>&quot;<sp/>service<sp/>online<sp/>&quot;)<sp/><sp/>)<sp/>&lt;&lt;<sp/>&quot;\n&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;\t&quot;<sp/>&lt;&lt;<sp/>&quot;STATUS:<sp/>&quot;<sp/>&lt;&lt;<sp/>tactcl_move_base.getState(<sp/>).toString(<sp/>)<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">actcl_move_base<sp/>=<sp/>&amp;tactcl_move_base;</highlight></codeline>
<codeline><highlight class="normal">TLOG(<sp/>&quot;opening<sp/>action<sp/>client<sp/>&quot;<sp/>&lt;&lt;<sp/>LOGSQUARE(<sp/>ACTION_MOVE_BASE<sp/>)<sp/>&lt;&lt;<sp/>&quot;<sp/>...<sp/>OK!&quot;<sp/>);</highlight></codeline>
</programlisting></para>
<para>now the simple action client should be online.</para>
</sect2>
<sect2 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md376">
<title>C++ â€“ use the client â€“ callback based approach</title>
<para>see <ulink url="https://docs.ros.org/en/diamondback/api/actionlib/html/classactionlib_1_1SimpleActionClient.html#a94b5a38fae6917f83331560b81eea341">waitForResult</ulink></para>
<para>see also <ulink url="https://docs.ros.org/en/diamondback/api/actionlib/html/classactionlib_1_1SimpleActionClient.html#ae6a2e6904495e7c20c59e96af0d86801">sendGoal</ulink></para>
<para>very useful <ulink url="http://wiki.ros.org/actionlib_tutorials/Tutorials/Writing%20a%20Callback%20Based%20Simple%20Action%20Client">this wiki page</ulink></para>
<para><bold>sequential style pattern</bold> if you just want to try something simple.</para>
<para><programlisting><codeline><highlight class="normal">//<sp/>Called<sp/>once<sp/>when<sp/>the<sp/>goal<sp/>becomes<sp/>active</highlight></codeline>
<codeline><highlight class="normal">void<sp/>cbk_active_move_base(<sp/>)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>...</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>feedback<sp/>subscription</highlight></codeline>
<codeline><highlight class="normal">void<sp/>cbk_feedback_move_base(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>move_base_msgs::MoveBaseFeedback::ConstPtr&amp;<sp/>feedback<sp/>)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>...<sp/>access<sp/>the<sp/>feedback<sp/>using<sp/>-&gt;<sp/>operator</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>...</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Called<sp/>once<sp/>when<sp/>the<sp/>goal<sp/>completes</highlight></codeline>
<codeline><highlight class="normal">void<sp/>cbk_done_move_base(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>actionlib::SimpleClientGoalState&amp;<sp/>state,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>move_base_msgs::MoveBaseResult&amp;<sp/>res<sp/>)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>/*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(<sp/>&quot;Finished<sp/>in<sp/>state<sp/>[%s]&quot;,<sp/>state.toString(<sp/>).c_str(<sp/>)<sp/>)<sp/>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>...</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">int<sp/>send_goal_pos(<sp/>float<sp/>x,<sp/>float<sp/>y,<sp/>float<sp/>z<sp/>)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>move_base_msgs::MoveBaseGoal<sp/>goal;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>goal.target_pose.pose.{position.{x,y,z},<sp/>orientation.{x,y,z,w}}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>actcl_move_base-&gt;sendGoal(<sp/>goal,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cbk_done_move_base,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cbk_active_move_base,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cbk_feedback_move_base<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>...</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>**...but I don&apos;t want to use 3 callback, I use only 2/1 of them**. well, ActionLib defined three &quot;placeholders&quot;:</para>
<para>see <ulink url="https://docs.ros.org/en/diamondback/api/actionlib/html/simple__action__client_8h_source.html#l00076">the code</ulink></para>
<para><programlisting><codeline><highlight class="normal"><sp/>{c++}</highlight></codeline>
<codeline><highlight class="normal">//<sp/>for<sp/>the<sp/>&quot;done&quot;<sp/>callback</highlight></codeline>
<codeline><highlight class="normal">Client::SimpleDoneCallback(<sp/>)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>for<sp/>the<sp/>&quot;active&quot;<sp/>callback</highlight></codeline>
<codeline><highlight class="normal">Client::SimpleActiveCallback(<sp/>)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>for<sp/>the<sp/>callback<sp/>subscribing<sp/>to<sp/>the<sp/>feedback<sp/>topic</highlight></codeline>
<codeline><highlight class="normal">//<sp/><sp/><sp/><sp/>(if<sp/>you<sp/>don&apos;t<sp/>need<sp/>feedbacks)</highlight></codeline>
<codeline><highlight class="normal">Client::SimpleFeedbackCallback(<sp/>)</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>EXAMPLE:<sp/>I<sp/>don&apos;t<sp/>need<sp/>the<sp/>done<sp/>and<sp/>the<sp/>active</highlight></codeline>
<codeline><highlight class="normal">ac.sendGoal(<sp/>goal,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Client::SimpleDoneCallback(<sp/>),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Client::SimpleActiveCallback(<sp/>),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;my_beautiful_feedback_callback</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
</programlisting></para>
<para><bold>methods inside a class?</bold> no problem: <emphasis>use boost</emphasis> as follows:</para>
<para><programlisting><codeline><highlight class="normal"><sp/>{c++}</highlight></codeline>
<codeline><highlight class="normal">//<sp/>the<sp/>function</highlight></codeline>
<codeline><highlight class="normal">boost::bind(<sp/>&amp;MyClass::cbk_quello_che_vuoi,<sp/>&amp;MyClass,<sp/>_1,<sp/>_2<sp/>)</highlight></codeline>
</programlisting></para>
<para>note that sometimes this call could return a very strange and unintelligible error: an example is contained <ulink url="https://answers.ros.org/question/195723/actionlib-callback-based-simpleactionclient-bind-error/">in this post</ulink>, which was a simple type. <emphasis>but in my case</emphasis> (my usual luck, nothing special) the error was due to the use of <computeroutput>const move_base_msgs::MoveBaseResult::ConstPtr&amp; res</computeroutput> instead of the correct form <computeroutput>const move_base_msgs::MoveBaseResultConstPtr&amp; res</computeroutput>.</para>
<para><bold>class implementation</bold></para>
<para><programlisting><codeline><highlight class="normal"><sp/>{c++}</highlight></codeline>
<codeline><highlight class="normal">class<sp/>move_base_interface</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal">public:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>move_base_interface(<sp/>)<sp/>:<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actcl_move_base(<sp/>&quot;move_base&quot;,<sp/>true<sp/>),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>running(<sp/>false<sp/>),<sp/>idle(<sp/>true<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLOG(<sp/>&quot;opening<sp/>action<sp/>client<sp/>&quot;<sp/>&lt;&lt;<sp/>LOGSQUARE(<sp/>ACTION_MOVE_BASE<sp/>)<sp/>&lt;&lt;<sp/>&quot;<sp/>...<sp/>&quot;<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actcl_move_base.waitForServer(<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>!this-&gt;actcl_act.waitForServer(<sp/>ros::Duration(<sp/>TIMEOUT_MOVE_BASE<sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TERR(<sp/>&quot;unable<sp/>to<sp/>connect<sp/>to<sp/>the<sp/>action<sp/>server<sp/>(timeout<sp/>&quot;<sp/>&lt;&lt;<sp/>TIMEOUT_MOVE_BASE<sp/>&lt;&lt;<sp/>&quot;s)<sp/>&quot;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;--<sp/>action<sp/>&quot;<sp/>&lt;&lt;<sp/>LOGSQUARE(<sp/>ACTION_MOVE_BASE<sp/>)<sp/>&lt;&lt;<sp/>&quot;\n&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;\t<sp/>&quot;<sp/>&lt;&lt;<sp/>(this-&gt;actcl_move_base.isServerConnected(<sp/>)<sp/>?<sp/>&quot;<sp/>it<sp/>seems<sp/>not<sp/>online<sp/>&quot;<sp/>:<sp/>&quot;<sp/>service<sp/>online<sp/>&quot;)<sp/><sp/>)<sp/>&lt;&lt;<sp/>&quot;\n&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;\t&quot;<sp/>&lt;&lt;<sp/>&quot;STATUS:<sp/>&quot;<sp/>&lt;&lt;<sp/>this-&gt;actcl_move_base.getState(<sp/>).toString(<sp/>)<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLOG(<sp/>&quot;opening<sp/>action<sp/>client<sp/>&quot;<sp/>&lt;&lt;<sp/>LOGSQUARE(<sp/>ACTION_MOVE_BASE<sp/>)<sp/>&lt;&lt;<sp/>&quot;<sp/>...<sp/>OK!&quot;<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>call<sp/>the<sp/>service</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>send_goal(<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>move_base_msgs::MoveBaseGoal<sp/>goal,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>wait<sp/>=<sp/>false,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::Duration<sp/>d<sp/>=<sp/>ros::Duration(<sp/>TIMEOUT_MOVE_BASE<sp/>)<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;last_goal<sp/>=<sp/>goal;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actcl_move_base.sendGoal(<sp/>this-&gt;last_goal,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::bind(&amp;move_base_interface::cbk_done_move_base,<sp/>this,<sp/>_1,<sp/>_2<sp/>),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::bind(&amp;move_base_interface::cbk_active_move_base,<sp/>this<sp/>),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::bind(&amp;move_base_interface::cbk_feedback_move_base,<sp/>this,<sp/>_1<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>wait<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>!actcl_move_base.wait_for_results(<sp/>d<sp/>)<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TERR(<sp/>&quot;action<sp/>client<sp/>for<sp/>&quot;<sp/>&lt;&lt;<sp/>LOGSQUARE(<sp/>ACTION_MOVE_BASE<sp/>)<sp/>&lt;&lt;<sp/>&quot;TIMEOUT<sp/>EXPIRED<sp/>&quot;<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actcl_move_base.cancelAllGoals(<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Called<sp/>once<sp/>when<sp/>the<sp/>goal<sp/>becomes<sp/>active</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>cbk_active_move_base(<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;idle<sp/>=<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;running<sp/>=<sp/>true;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>feedback<sp/>subscription</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>cbk_feedback_move_base(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>move_base_msgs::MoveBaseFeedback::ConstPtr&amp;<sp/>feedback<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>...<sp/>access<sp/>the<sp/>feedback<sp/>using<sp/>-&gt;<sp/>operator</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Called<sp/>once<sp/>when<sp/>the<sp/>goal<sp/>completes</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>cbk_done_move_base(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>actionlib::SimpleClientGoalState&amp;<sp/>state,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>move_base_msgs::MoveBaseResult&amp;<sp/>res<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;idle<sp/>=<sp/>true;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;running<sp/>=<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(<sp/>&quot;Finished<sp/>in<sp/>state<sp/>[%s]&quot;,<sp/>state.toString(<sp/>).c_str(<sp/>)<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>cancel<sp/>the<sp/>last<sp/>request</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>cancel(<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>this-&gt;running<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actcl_move_base.cancelAllGoals(<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;idle<sp/>=<sp/>true;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;running<sp/>=<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>idle!<sp/>nothing<sp/>to<sp/>cancel</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>///<sp/>check<sp/>activity<sp/>flag</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>is_running(<sp/>)<sp/>{<sp/>return<sp/>this-&gt;running;<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>///<sp/>check<sp/>activity<sp/>flag</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>is_idle(<sp/>)<sp/>{<sp/>return<sp/>this-&gt;idle;<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>///<sp/>action<sp/>client<sp/>status<sp/>from<sp/>the<sp/>handle</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>get_state(<sp/>)<sp/>{<sp/>return<sp/>actcl_move_base.getState.toString(<sp/>);<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">private:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>///<sp/>the<sp/>action<sp/>client</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>actionlib::SimpleActionClient&lt;move_base_msgs::MoveBaseAction&gt;<sp/>actcl_move_base;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>///<sp/>the<sp/>current<sp/>goal</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>move_base_msgs::MoveBaseGoal<sp/>last_goal;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>///<sp/>activity<sp/>flag</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>running;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>///<sp/>idle<sp/>flag</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>idle;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting></para>
</sect2>
</sect1>
<sect1 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md377">
<title>SLAM and GMapping â€“ navigation stack structure</title>
<para>infos about <ulink url="http://wiki.ros.org/gmapping">GMapping</ulink></para>
<para>see <ulink url="https://github.com/ros-perception/slam_gmapping">sma_gmapping on GitHub</ulink></para>
<para>see also the <ulink url="http://wiki.ros.org/tf">tf package on ROS Wiki</ulink></para>
<para>see also the <ulink url="http://wiki.ros.org/navigation">nav stack official page</ulink></para>
<para><ulink url="https://openslam-org.github.io/gmapping.html">openSLAM official page</ulink></para>
<para><ulink url="https://classic.gazebosim.org/tutorials?tut=ros_gzplugins">Gazebo Plugins</ulink></para>
<para><emphasis>laser-based simultaneous localization and mapping</emphasis></para>
<sect2 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md378">
<title>Hokuyo laser range finder</title>
<para>ROS documentation about <ulink url="https://wiki.ros.org/hokuyo_node">hoyuko laser range finder</ulink></para>
<para><bold>publishers</bold>:</para>
<para><itemizedlist>
<listitem><para><computeroutput>/scan</computeroutput> : sensor_msgs/LaserScan</para>
</listitem></itemizedlist>
</para>
<para><bold>Gazebo</bold> simulation of this range sensor finder: RIMPIAZZA <computeroutput>hokuyo_link</computeroutput> nel codice col link che rappresenta il sensore nel file URDF.</para>
<para><programlisting filename=".xml"><codeline><highlight class="comment">&lt;!--<sp/>NON-GPU<sp/>VERSION<sp/>--&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">&lt;</highlight><highlight class="keywordtype">gazebo</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reference</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;hokuyo_link&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">sensor</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">type</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;ray&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;head_hokuyo_sensor&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">pose</highlight><highlight class="normal">&gt;0<sp/>0<sp/>0<sp/>0<sp/>0<sp/>0&lt;/</highlight><highlight class="keywordtype">pose</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">visualize</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">false</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">visualize</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">update_rate</highlight><highlight class="normal">&gt;40&lt;/</highlight><highlight class="keywordtype">update_rate</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">ray</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">scan</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">horizontal</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">samples</highlight><highlight class="normal">&gt;720&lt;/</highlight><highlight class="keywordtype">samples</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">resolution</highlight><highlight class="normal">&gt;1&lt;/</highlight><highlight class="keywordtype">resolution</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">min_angle</highlight><highlight class="normal">&gt;-1.570796&lt;/</highlight><highlight class="keywordtype">min_angle</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">max_angle</highlight><highlight class="normal">&gt;1.570796&lt;/</highlight><highlight class="keywordtype">max_angle</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">horizontal</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">scan</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">range</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">min</highlight><highlight class="normal">&gt;0.10&lt;/</highlight><highlight class="keywordtype">min</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">max</highlight><highlight class="normal">&gt;30.0&lt;/</highlight><highlight class="keywordtype">max</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">resolution</highlight><highlight class="normal">&gt;0.01&lt;/</highlight><highlight class="keywordtype">resolution</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">range</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">noise</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">type</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">gaussian</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">type</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">&lt;!--<sp/>Noise<sp/>parameters<sp/>based<sp/>on<sp/>published<sp/>spec<sp/>for<sp/>Hokuyo<sp/>laser</highlight></codeline>
<codeline><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>achieving<sp/>&quot;+-30mm&quot;<sp/>accuracy<sp/>at<sp/>range<sp/>&lt;<sp/>10m.<sp/><sp/>A<sp/>mean<sp/>of<sp/>0.0m<sp/>and</highlight></codeline>
<codeline><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stddev<sp/>of<sp/>0.01m<sp/>will<sp/>put<sp/>99.7%<sp/>of<sp/>samples<sp/>within<sp/>0.03m<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/>reading.<sp/>--&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">mean</highlight><highlight class="normal">&gt;0.0&lt;/</highlight><highlight class="keywordtype">mean</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">stddev</highlight><highlight class="normal">&gt;0.01&lt;/</highlight><highlight class="keywordtype">stddev</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">noise</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">ray</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">plugin</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;gazebo_ros_head_hokuyo_controller&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">filename</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;libgazebo_ros_laser.so&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">topicName</highlight><highlight class="normal">&gt;/</highlight><highlight class="keyword">scan</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">topicName</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">frameName</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">hokuyo_link</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">frameName</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">plugin</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">sensor</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">gazebo</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">&lt;!--<sp/>GPU<sp/>VERSION<sp/>--&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">&lt;</highlight><highlight class="keywordtype">gazebo</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reference</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;hokuyo_link&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">sensor</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">type</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;gpu_ray&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;head_hokuyo_sensor&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">pose</highlight><highlight class="normal">&gt;0<sp/>0<sp/>0<sp/>0<sp/>0<sp/>0&lt;/</highlight><highlight class="keywordtype">pose</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">visualize</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">false</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">visualize</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">update_rate</highlight><highlight class="normal">&gt;40&lt;/</highlight><highlight class="keywordtype">update_rate</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">ray</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">scan</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">horizontal</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">samples</highlight><highlight class="normal">&gt;720&lt;/</highlight><highlight class="keywordtype">samples</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">resolution</highlight><highlight class="normal">&gt;1&lt;/</highlight><highlight class="keywordtype">resolution</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">min_angle</highlight><highlight class="normal">&gt;-1.570796&lt;/</highlight><highlight class="keywordtype">min_angle</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">max_angle</highlight><highlight class="normal">&gt;1.570796&lt;/</highlight><highlight class="keywordtype">max_angle</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">horizontal</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">scan</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">range</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">min</highlight><highlight class="normal">&gt;0.10&lt;/</highlight><highlight class="keywordtype">min</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">max</highlight><highlight class="normal">&gt;30.0&lt;/</highlight><highlight class="keywordtype">max</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">resolution</highlight><highlight class="normal">&gt;0.01&lt;/</highlight><highlight class="keywordtype">resolution</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">range</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">noise</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">type</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">gaussian</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">type</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">&lt;!--<sp/>Noise<sp/>parameters<sp/>based<sp/>on<sp/>published<sp/>spec<sp/>for<sp/>Hokuyo<sp/>laser</highlight></codeline>
<codeline><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>achieving<sp/>&quot;+-30mm&quot;<sp/>accuracy<sp/>at<sp/>range<sp/>&lt;<sp/>10m.<sp/><sp/>A<sp/>mean<sp/>of<sp/>0.0m<sp/>and</highlight></codeline>
<codeline><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stddev<sp/>of<sp/>0.01m<sp/>will<sp/>put<sp/>99.7%<sp/>of<sp/>samples<sp/>within<sp/>0.03m<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/>reading.<sp/>--&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">mean</highlight><highlight class="normal">&gt;0.0&lt;/</highlight><highlight class="keywordtype">mean</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">stddev</highlight><highlight class="normal">&gt;0.01&lt;/</highlight><highlight class="keywordtype">stddev</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">noise</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">ray</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">plugin</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;gazebo_ros_head_hokuyo_controller&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">filename</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;libgazebo_ros_gpu_laser.so&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">topicName</highlight><highlight class="normal">&gt;/</highlight><highlight class="keyword">scan</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">topicName</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">frameName</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">hokuyo_link</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">frameName</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">plugin</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">sensor</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">gazebo</highlight><highlight class="normal">&gt;</highlight></codeline>
</programlisting></para>
<para>NOta bene: dev&apos;esserci un link di riferimento nel robot, quello dov&apos;Ã¨ piazzato il sensore.</para>
<para><itemizedlist>
<listitem><para>il plugin pubblicherÃ  la scansione sul topic <computeroutput>&lt;topicName&gt;/scan&lt;/topicName&gt;</computeroutput></para>
</listitem><listitem><para>il link usato come origine del sensore Ã¨ <computeroutput>&lt;frameName&gt;hokuyo_link&lt;/frameName&gt;</computeroutput>, da cambiare a piacimento</para>
</listitem><listitem><para>occhio anche al campo <computeroutput>&lt;gazebo reference=&quot;hokuyo_link&quot;&gt;</computeroutput></para>
</listitem></itemizedlist>
</para>
</sect2>
</sect1>
<sect1 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md379">
<title>Usare MoveBase senza ricorrere alla actionlib</title>
<para><itemizedlist>
<listitem><para>per inviare il goal, usa <computeroutput>di tipo</computeroutput></para>
</listitem><listitem><para>per cancellare la richiesta, basta inviare un messaggio, <emphasis>anche vuoto</emphasis>, sul topic <computeroutput>di tipo</computeroutput></para>
</listitem></itemizedlist>
</para>
<sect2 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md380">
<title>richiesta di cancellazione</title>
<para>basta pubblicare un messaggio di tipo <computeroutput>actionlib_msgs/GoalID.msg</computeroutput> sul topic <computeroutput>/move_base/cancel</computeroutput>, anche vuoto, per annullare l&apos;ultima richiesta.</para>
<para><programlisting filename=".text"><codeline><highlight class="normal">#<sp/>rostopic<sp/>info<sp/>/move_base/cancel<sp/></highlight></codeline>
<codeline><highlight class="normal">Type:<sp/>actionlib_msgs/GoalID</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Publishers:<sp/>None</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Subscribers:<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>/move_base<sp/>(http://3b17871017fd:39227/)</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>rosmsg<sp/>show<sp/>actionlib_msgs/GoalID</highlight></codeline>
<codeline><highlight class="normal">time<sp/>stamp</highlight></codeline>
<codeline><highlight class="normal">string<sp/>id</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_robocluedo_movement_controller__docs_how-to-nav-stack_1autotoc_md381">
<title>richiesta di movimento verso un target</title>
<para>pubblica la richiesta sul topic <computeroutput>/move_base/goal</computeroutput> di tipo <computeroutput>move_base_msgs/MoveBaseActionGoal</computeroutput>.</para>
<para><programlisting filename=".text"><codeline><highlight class="normal">#<sp/>rostopic<sp/>info<sp/>/move_base/goal<sp/></highlight></codeline>
<codeline><highlight class="normal">Type:<sp/>move_base_msgs/MoveBaseActionGoal</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Publishers:<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>/move_base<sp/>(http://3b17871017fd:39227/)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Subscribers:<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>/move_base<sp/>(http://3b17871017fd:39227/)</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>rosmsg<sp/>show<sp/>move_base_msgs/MoveBaseActionGoal</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">std_msgs/Header<sp/>header</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>uint32<sp/>seq</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>time<sp/>stamp</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>string<sp/>frame_id</highlight></codeline>
<codeline><highlight class="normal">actionlib_msgs/GoalID<sp/>goal_id</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>time<sp/>stamp</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>string<sp/>id</highlight></codeline>
<codeline><highlight class="normal">move_base_msgs/MoveBaseGoal<sp/>goal</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>geometry_msgs/PoseStamped<sp/>target_pose</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std_msgs/Header<sp/>header</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/>seq</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>stamp</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>frame_id</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs/Pose<sp/>pose</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs/Point<sp/>position</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64<sp/>x</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64<sp/>y</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64<sp/>z</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>geometry_msgs/Quaternion<sp/>orientation</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64<sp/>x</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64<sp/>y</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64<sp/>z</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float64<sp/>w</highlight></codeline>
</programlisting></para>
<para><programlisting filename=".warning"><codeline><highlight class="normal">non<sp/>basta<sp/>semplicemente<sp/>dire<sp/>dove<sp/>andare<sp/>purtroppo.<sp/>Move<sp/>base<sp/>sempluicemente<sp/>non<sp/>accetta<sp/>il<sp/>comando<sp/>nel<sp/>caso<sp/>del<sp/>semplice<sp/>target.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">affinchÃ¨<sp/>move_base<sp/>accetti<sp/>il<sp/>target,<sp/>bisogna<sp/>anche<sp/>fornire<sp/>il<sp/>frame<sp/>rispetto<sp/>a<sp/>cui<sp/>il<sp/>target<sp/>Ã¨<sp/>dato.<sp/></highlight></codeline>
</programlisting></para>
<para>vedi questo esempio di invio di richiesta a move_base (in c++, ma il concetto Ã¨ lo stesso):</para>
<para><programlisting><codeline><highlight class="normal"><sp/>{c++}</highlight></codeline>
<codeline><highlight class="normal">move_base_msgs::MoveBaseActionGoal<sp/>goal;</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>===<sp/>VERY<sp/>VERY<sp/>VERY<sp/>IMPORTANT<sp/>===<sp/>//</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>goal.frame_id<sp/>=<sp/>&quot;map&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>goal.goal.target_pose.header.frame_id<sp/>=<sp/>&quot;map&quot;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>===<sp/>VERY<sp/>VERY<sp/>VERY<sp/>IMPORTANT<sp/>===<sp/>//</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">goal.goal.target_pose.pose.position.x<sp/>=<sp/>x;</highlight></codeline>
<codeline><highlight class="normal">goal.goal.target_pose.pose.position.y<sp/>=<sp/>y;</highlight></codeline>
<codeline><highlight class="normal">goal.goal.target_pose.pose.position.z<sp/>=<sp/>z;</highlight></codeline>
<codeline><highlight class="normal">goal.goal.target_pose.pose.orientation.x<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">goal.goal.target_pose.pose.orientation.y<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">goal.goal.target_pose.pose.orientation.z<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">goal.goal.target_pose.pose.orientation.w<sp/>=<sp/>1.0;</highlight></codeline>
</programlisting> </para>
</sect2>
</sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
