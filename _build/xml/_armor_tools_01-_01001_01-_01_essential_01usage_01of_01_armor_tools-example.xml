<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_armor_tools_01-_01001_01-_01_essential_01usage_01of_01_armor_tools-example" kind="example">
    <compoundname>ArmorTools - 001 - Essential usage of ArmorTools</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>In this little example I want to show you which are the main features of the class <ref refid="class_armor_tools" kindref="compound">ArmorTools</ref>. It can speed up really the usage of aRMOR, making easier the coding phase. <linebreak/>
<linebreak/>
</para>
<para>The proposed workflow is always the same: <linebreak/>
 <orderedlist>
<listitem>
<para>Constructor, setting the user infos </para>
</listitem>
<listitem>
<para>Connection to the service </para>
</listitem>
<listitem>
<para>Loading the ontology </para>
</listitem>
<listitem>
<para>(optional) check the calidity of the connection </para>
</listitem>
</orderedlist>
</para>
<para>Done this, using armor is simple: just call a function!</para>
<para><simplesect kind="warning"><para>this code was written only for your understanding. Probably it won&apos;t compile.</para>
</simplesect>
<programlisting filename="example_armor_tools_1.cpp"></programlisting> <programlisting filename="ArmorTools"></programlisting> - 001 - Essential usage of <ref refid="class_armor_tools" kindref="compound">ArmorTools</ref> </para>
    </detaileddescription>
  </compounddef>
</doxygen>
