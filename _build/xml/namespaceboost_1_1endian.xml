<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespaceboost_1_1endian" kind="namespace" language="C++">
    <compoundname>boost::endian</compoundname>
    <innernamespace refid="namespaceboost_1_1endian_1_1detail">boost::endian::detail</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceboost_1_1endian_1afa153687462a9b78131f2da81835ce2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>boost::endian::BOOST_SCOPED_ENUM_START</definition>
        <argsstring>(order)</argsstring>
        <name>BOOST_SCOPED_ENUM_START</name>
        <param>
          <type>order</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="26" column="3" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="26" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1a26cd3b0243832d97d56f4b062270d3f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="scoped__enum_8hpp_1a2f9c1d8d5f0459631963cf2e7f048cca" kindref="member">BOOST_SCOPED_ENUM_END</ref> int8_t</type>
        <definition>int8_t boost::endian::endian_reverse</definition>
        <argsstring>(int8_t x) BOOST_NOEXCEPT</argsstring>
        <name>endian_reverse</name>
        <param>
          <type>int8_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="198" column="17" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="198" bodyend="201" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="57" declcolumn="19"/>
        <references refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" compoundref="bug__m_8py" startline="36">bug_m.x</references>
        <referencedby refid="namespaceboost_1_1endian_1a7506b7b362ed917c3be111f3c017f5f7" compoundref="conversion_8hpp" startline="283" endline="290">big_to_native</referencedby>
        <referencedby refid="namespaceboost_1_1endian_1a0a885a71d7b5f0c6e6d6b67b67a8c1d5" compoundref="conversion_8hpp" startline="293" endline="300">native_to_big</referencedby>
        <referencedby refid="namespaceboost_1_1endian_1af8276009ac68a49ab6b71251e3dedf85" compoundref="conversion_8hpp" startline="303" endline="310">little_to_native</referencedby>
        <referencedby refid="namespaceboost_1_1endian_1a4540ff464f1b77d7d06dc48641f43fc3" compoundref="conversion_8hpp" startline="313" endline="320">native_to_little</referencedby>
        <referencedby refid="classboost_1_1endian_1_1detail_1_1value__converter_3_01order_1_1big_00_01order_1_1little_00_01_t_01_4_1a1e9000117a07c42e330512e87fac524e" compoundref="conversion_8hpp" startline="334" endline="334">boost::endian::detail::value_converter&lt; order::big, order::little, T &gt;::operator()</referencedby>
        <referencedby refid="classboost_1_1endian_1_1detail_1_1value__converter_3_01order_1_1little_00_01order_1_1big_00_01_t_01_4_1ab4d9ea62ce9d4e77c9041d50e2c21046" compoundref="conversion_8hpp" startline="336" endline="336">boost::endian::detail::value_converter&lt; order::little, order::big, T &gt;::operator()</referencedby>
        <referencedby refid="namespaceboost_1_1endian_1ab4a34f7dcdbdbfaa512e1a7e26ed24b1" compoundref="conversion_8hpp" startline="352" endline="356">conditional_reverse</referencedby>
        <referencedby refid="namespaceboost_1_1endian_1a8f0cde80b0c6e1d75b7e255f9152ad0e" compoundref="conversion_8hpp" startline="364" endline="367">endian_reverse_inplace</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1a96400c769b9703487093bb6862651144" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int16_t</type>
        <definition>int16_t boost::endian::endian_reverse</definition>
        <argsstring>(int16_t x) BOOST_NOEXCEPT</argsstring>
        <name>endian_reverse</name>
        <param>
          <type>int16_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="203" column="18" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="203" bodyend="211" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="58" declcolumn="19"/>
        <references refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" compoundref="bug__m_8py" startline="36">bug_m.x</references>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1a65f739e7e7f8eb259f4c02115d127755" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t boost::endian::endian_reverse</definition>
        <argsstring>(int32_t x) BOOST_NOEXCEPT</argsstring>
        <name>endian_reverse</name>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="213" column="18" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="213" bodyend="224" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="59" declcolumn="19"/>
        <references refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" compoundref="bug__m_8py" startline="36">bug_m.x</references>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1a674292553fbda2ca64a39fe292db02b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t boost::endian::endian_reverse</definition>
        <argsstring>(int64_t x) BOOST_NOEXCEPT</argsstring>
        <name>endian_reverse</name>
        <param>
          <type>int64_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="226" column="18" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="226" bodyend="238" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="60" declcolumn="19"/>
        <references refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" compoundref="bug__m_8py" startline="36">bug_m.x</references>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1ab038e1498a15fcd57a495b4ae11f76d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t boost::endian::endian_reverse</definition>
        <argsstring>(uint8_t x) BOOST_NOEXCEPT</argsstring>
        <name>endian_reverse</name>
        <param>
          <type>uint8_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="240" column="18" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="240" bodyend="243" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="61" declcolumn="19"/>
        <references refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" compoundref="bug__m_8py" startline="36">bug_m.x</references>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1a426692324f58f6c9b792016253b64193" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t boost::endian::endian_reverse</definition>
        <argsstring>(uint16_t x) BOOST_NOEXCEPT</argsstring>
        <name>endian_reverse</name>
        <param>
          <type>uint16_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="245" column="19" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="245" bodyend="253" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="62" declcolumn="19"/>
        <references refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" compoundref="bug__m_8py" startline="36">bug_m.x</references>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1a5ced0af69d06c12543d16ebf2214be84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t boost::endian::endian_reverse</definition>
        <argsstring>(uint32_t x) BOOST_NOEXCEPT</argsstring>
        <name>endian_reverse</name>
        <param>
          <type>uint32_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="255" column="19" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="255" bodyend="266" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="63" declcolumn="19"/>
        <references refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" compoundref="bug__m_8py" startline="36">bug_m.x</references>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1a0ef893ea2d6444c62fc789683d5910d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t boost::endian::endian_reverse</definition>
        <argsstring>(uint64_t x) BOOST_NOEXCEPT</argsstring>
        <name>endian_reverse</name>
        <param>
          <type>uint64_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="268" column="19" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="268" bodyend="280" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="64" declcolumn="19"/>
        <references refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" compoundref="bug__m_8py" startline="36">bug_m.x</references>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1a7506b7b362ed917c3be111f3c017f5f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class EndianReversible</type>
          </param>
        </templateparamlist>
        <type>EndianReversible</type>
        <definition>EndianReversible boost::endian::big_to_native</definition>
        <argsstring>(EndianReversible x) BOOST_NOEXCEPT</argsstring>
        <name>big_to_native</name>
        <param>
          <type>EndianReversible</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="283" column="28" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="283" bodyend="290" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="68" declcolumn="30"/>
        <references refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" compoundref="bug__m_8py" startline="36">bug_m.x</references>
        <references refid="namespaceboost_1_1endian_1a26cd3b0243832d97d56f4b062270d3f3" compoundref="conversion_8hpp" startline="198" endline="201">endian_reverse</references>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1a0a885a71d7b5f0c6e6d6b67b67a8c1d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class EndianReversible</type>
          </param>
        </templateparamlist>
        <type>EndianReversible</type>
        <definition>EndianReversible boost::endian::native_to_big</definition>
        <argsstring>(EndianReversible x) BOOST_NOEXCEPT</argsstring>
        <name>native_to_big</name>
        <param>
          <type>EndianReversible</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="293" column="28" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="293" bodyend="300" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="71" declcolumn="30"/>
        <references refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" compoundref="bug__m_8py" startline="36">bug_m.x</references>
        <references refid="namespaceboost_1_1endian_1a26cd3b0243832d97d56f4b062270d3f3" compoundref="conversion_8hpp" startline="198" endline="201">endian_reverse</references>
        <referencedby refid="test__endian_8cpp_1a645cd0f54caa88cd6172fff415d1eb50" compoundref="test__endian_8cpp" startline="6" endline="38">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1af8276009ac68a49ab6b71251e3dedf85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class EndianReversible</type>
          </param>
        </templateparamlist>
        <type>EndianReversible</type>
        <definition>EndianReversible boost::endian::little_to_native</definition>
        <argsstring>(EndianReversible x) BOOST_NOEXCEPT</argsstring>
        <name>little_to_native</name>
        <param>
          <type>EndianReversible</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="303" column="28" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="303" bodyend="310" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="76" declcolumn="30"/>
        <references refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" compoundref="bug__m_8py" startline="36">bug_m.x</references>
        <references refid="namespaceboost_1_1endian_1a26cd3b0243832d97d56f4b062270d3f3" compoundref="conversion_8hpp" startline="198" endline="201">endian_reverse</references>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1a4540ff464f1b77d7d06dc48641f43fc3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class EndianReversible</type>
          </param>
        </templateparamlist>
        <type>EndianReversible</type>
        <definition>EndianReversible boost::endian::native_to_little</definition>
        <argsstring>(EndianReversible x) BOOST_NOEXCEPT</argsstring>
        <name>native_to_little</name>
        <param>
          <type>EndianReversible</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="313" column="28" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="313" bodyend="320" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="79" declcolumn="30"/>
        <references refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" compoundref="bug__m_8py" startline="36">bug_m.x</references>
        <references refid="namespaceboost_1_1endian_1a26cd3b0243832d97d56f4b062270d3f3" compoundref="conversion_8hpp" startline="198" endline="201">endian_reverse</references>
        <referencedby refid="test__endian_8cpp_1a645cd0f54caa88cd6172fff415d1eb50" compoundref="test__endian_8cpp" startline="6" endline="38">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1a9d2bdbc3ca7f0fc52f4e20f068a971da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="scoped__enum_8hpp_1ab4a8e63ed521953694c7a789f14fb9fd" kindref="member">BOOST_SCOPED_ENUM</ref>(order)</type>
            <declname>From</declname>
            <defname>From</defname>
          </param>
          <param>
            <type><ref refid="scoped__enum_8hpp_1ab4a8e63ed521953694c7a789f14fb9fd" kindref="member">BOOST_SCOPED_ENUM</ref>(order)</type>
            <declname>To</declname>
            <defname>To</defname>
          </param>
          <param>
            <type>class EndianReversible</type>
          </param>
        </templateparamlist>
        <type>EndianReversible</type>
        <definition>EndianReversible boost::endian::conditional_reverse</definition>
        <argsstring>(EndianReversible from) BOOST_NOEXCEPT</argsstring>
        <name>conditional_reverse</name>
        <param>
          <type>EndianReversible</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="342" column="28" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="342" bodyend="348" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="85" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1ab4a34f7dcdbdbfaa512e1a7e26ed24b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class EndianReversible</type>
          </param>
        </templateparamlist>
        <type>EndianReversible</type>
        <definition>EndianReversible boost::endian::conditional_reverse</definition>
        <argsstring>(EndianReversible from, BOOST_SCOPED_ENUM(order) from_order, BOOST_SCOPED_ENUM(order) to_order) BOOST_NOEXCEPT</argsstring>
        <name>conditional_reverse</name>
        <param>
          <type>EndianReversible</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="scoped__enum_8hpp_1ab4a8e63ed521953694c7a789f14fb9fd" kindref="member">BOOST_SCOPED_ENUM</ref>(order)</type>
          <declname>from_order</declname>
        </param>
        <param>
          <type><ref refid="scoped__enum_8hpp_1ab4a8e63ed521953694c7a789f14fb9fd" kindref="member">BOOST_SCOPED_ENUM</ref>(order)</type>
          <declname>to_order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="352" column="28" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="352" bodyend="356" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="93" declcolumn="30"/>
        <references refid="namespaceboost_1_1endian_1a26cd3b0243832d97d56f4b062270d3f3" compoundref="conversion_8hpp" startline="198" endline="201">endian_reverse</references>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1a8f0cde80b0c6e1d75b7e255f9152ad0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class EndianReversible</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::endian::endian_reverse_inplace</definition>
        <argsstring>(EndianReversible &amp;x) BOOST_NOEXCEPT</argsstring>
        <name>endian_reverse_inplace</name>
        <param>
          <type>EndianReversible &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="364" column="15" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="364" bodyend="367" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="127" declcolumn="17"/>
        <references refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" compoundref="bug__m_8py" startline="36">bug_m.x</references>
        <references refid="namespaceboost_1_1endian_1a26cd3b0243832d97d56f4b062270d3f3" compoundref="conversion_8hpp" startline="198" endline="201">endian_reverse</references>
        <referencedby refid="namespaceboost_1_1endian_1a7baf2592065767d95c104efe56f86834" compoundref="conversion_8hpp" startline="373" endline="374">big_to_native_inplace</referencedby>
        <referencedby refid="namespaceboost_1_1endian_1a4719077e096c1187f1bd276fb2cba1bd" compoundref="conversion_8hpp" startline="380" endline="383">native_to_big_inplace</referencedby>
        <referencedby refid="namespaceboost_1_1endian_1aef6f28f9eeb2463fcd6ef7c39e767141" compoundref="conversion_8hpp" startline="390" endline="391">little_to_native_inplace</referencedby>
        <referencedby refid="namespaceboost_1_1endian_1a27a57e3b8af8f90d0a3065f941622971" compoundref="conversion_8hpp" startline="397" endline="400">native_to_little_inplace</referencedby>
        <referencedby refid="classboost_1_1endian_1_1detail_1_1converter_3_01order_1_1big_00_01order_1_1little_00_01_t_01_4_1a0a5998d1785b02bc99974cbc8d01b35d" compoundref="conversion_8hpp" startline="416" endline="416">boost::endian::detail::converter&lt; order::big, order::little, T &gt;::operator()</referencedby>
        <referencedby refid="classboost_1_1endian_1_1detail_1_1converter_3_01order_1_1little_00_01order_1_1big_00_01_t_01_4_1a2e0efe4bbaf4aaa936bd9a665e1dbaf1" compoundref="conversion_8hpp" startline="418" endline="418">boost::endian::detail::converter&lt; order::little, order::big, T &gt;::operator()</referencedby>
        <referencedby refid="namespaceboost_1_1endian_1a197432ee7e630ddff8e09834226b3fa6" compoundref="conversion_8hpp" startline="435" endline="441">conditional_reverse_inplace</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1a7baf2592065767d95c104efe56f86834" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class EndianReversibleInplace</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::endian::big_to_native_inplace</definition>
        <argsstring>(EndianReversibleInplace &amp;x) BOOST_NOEXCEPT</argsstring>
        <name>big_to_native_inplace</name>
        <param>
          <type>EndianReversibleInplace &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="373" column="15" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="373" bodyend="374" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="132" declcolumn="17"/>
        <references refid="namespaceboost_1_1endian_1a8f0cde80b0c6e1d75b7e255f9152ad0e" compoundref="conversion_8hpp" startline="364" endline="367">endian_reverse_inplace</references>
        <references refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" compoundref="bug__m_8py" startline="36">bug_m.x</references>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1a4719077e096c1187f1bd276fb2cba1bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class EndianReversibleInplace</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::endian::native_to_big_inplace</definition>
        <argsstring>(EndianReversibleInplace &amp;x) BOOST_NOEXCEPT</argsstring>
        <name>native_to_big_inplace</name>
        <param>
          <type>EndianReversibleInplace &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="380" column="15" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="380" bodyend="383" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="135" declcolumn="17"/>
        <references refid="namespaceboost_1_1endian_1a8f0cde80b0c6e1d75b7e255f9152ad0e" compoundref="conversion_8hpp" startline="364" endline="367">endian_reverse_inplace</references>
        <references refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" compoundref="bug__m_8py" startline="36">bug_m.x</references>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1aef6f28f9eeb2463fcd6ef7c39e767141" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class EndianReversibleInplace</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::endian::little_to_native_inplace</definition>
        <argsstring>(EndianReversibleInplace &amp;x) BOOST_NOEXCEPT</argsstring>
        <name>little_to_native_inplace</name>
        <param>
          <type>EndianReversibleInplace &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="390" column="15" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="390" bodyend="391" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="140" declcolumn="17"/>
        <references refid="namespaceboost_1_1endian_1a8f0cde80b0c6e1d75b7e255f9152ad0e" compoundref="conversion_8hpp" startline="364" endline="367">endian_reverse_inplace</references>
        <references refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" compoundref="bug__m_8py" startline="36">bug_m.x</references>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1a27a57e3b8af8f90d0a3065f941622971" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class EndianReversibleInplace</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::endian::native_to_little_inplace</definition>
        <argsstring>(EndianReversibleInplace &amp;x) BOOST_NOEXCEPT</argsstring>
        <name>native_to_little_inplace</name>
        <param>
          <type>EndianReversibleInplace &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="397" column="15" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="397" bodyend="400" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="143" declcolumn="17"/>
        <references refid="namespaceboost_1_1endian_1a8f0cde80b0c6e1d75b7e255f9152ad0e" compoundref="conversion_8hpp" startline="364" endline="367">endian_reverse_inplace</references>
        <references refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" compoundref="bug__m_8py" startline="36">bug_m.x</references>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1a5aa6c2fa28759e8595e2ef5dc0397cba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="scoped__enum_8hpp_1ab4a8e63ed521953694c7a789f14fb9fd" kindref="member">BOOST_SCOPED_ENUM</ref>(order)</type>
            <declname>From</declname>
            <defname>From</defname>
          </param>
          <param>
            <type><ref refid="scoped__enum_8hpp_1ab4a8e63ed521953694c7a789f14fb9fd" kindref="member">BOOST_SCOPED_ENUM</ref>(order)</type>
            <declname>To</declname>
            <defname>To</defname>
          </param>
          <param>
            <type>class EndianReversibleInplace</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::endian::conditional_reverse_inplace</definition>
        <argsstring>(EndianReversibleInplace &amp;x) BOOST_NOEXCEPT</argsstring>
        <name>conditional_reverse_inplace</name>
        <param>
          <type>EndianReversibleInplace &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="424" column="15" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="424" bodyend="431" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="149" declcolumn="15"/>
        <references refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" compoundref="bug__m_8py" startline="36">bug_m.x</references>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1endian_1a197432ee7e630ddff8e09834226b3fa6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class EndianReversibleInplace</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::endian::conditional_reverse_inplace</definition>
        <argsstring>(EndianReversibleInplace &amp;x, BOOST_SCOPED_ENUM(order) from_order, BOOST_SCOPED_ENUM(order) to_order) BOOST_NOEXCEPT</argsstring>
        <name>conditional_reverse_inplace</name>
        <param>
          <type>EndianReversibleInplace &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="scoped__enum_8hpp_1ab4a8e63ed521953694c7a789f14fb9fd" kindref="member">BOOST_SCOPED_ENUM</ref>(order)</type>
          <declname>from_order</declname>
        </param>
        <param>
          <type><ref refid="scoped__enum_8hpp_1ab4a8e63ed521953694c7a789f14fb9fd" kindref="member">BOOST_SCOPED_ENUM</ref>(order)</type>
          <declname>to_order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="435" column="15" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="435" bodyend="441" declfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" declline="153" declcolumn="15"/>
        <references refid="namespaceboost_1_1endian_1a8f0cde80b0c6e1d75b7e255f9152ad0e" compoundref="conversion_8hpp" startline="364" endline="367">endian_reverse_inplace</references>
        <references refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" compoundref="bug__m_8py" startline="36">bug_m.x</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="25" column="1"/>
  </compounddef>
</doxygen>
