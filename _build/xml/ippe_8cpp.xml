<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="ippe_8cpp" kind="file" language="C++">
    <compoundname>ippe.cpp</compoundname>
    <includes refid="ippe_8h" local="yes">ippe.h</includes>
    <includes local="no">opencv2/calib3d.hpp</includes>
    <includes local="no">opencv2/imgproc.hpp</includes>
    <incdepgraph>
      <node id="2">
        <label>ippe.h</label>
        <link refid="ippe_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>opencv2/imgproc.hpp</label>
      </node>
      <node id="5">
        <label>opencv2/calib3d.hpp</label>
      </node>
      <node id="3">
        <label>opencv2/core.hpp</label>
      </node>
      <node id="4">
        <label>aruco_export.h</label>
        <link refid="aruco__export_8h"/>
      </node>
      <node id="1">
        <label>robocluedo_dependencies/aruco_ros/aruco/src/aruco/ippe.cpp</label>
        <link refid="ippe_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacearuco">aruco</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="29"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ippe_8h" kindref="compound">ippe.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/calib3d.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/imgproc.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearuco" kindref="compound">aruco</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="namespacearuco_1adccc007d4ba5d0d66831fc31c6694990" refkind="member"><highlight class="normal">cv::Mat<sp/><ref refid="namespacearuco_1adccc007d4ba5d0d66831fc31c6694990" kindref="member">getRTMatrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>R_,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>T_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>forceType)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>M;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>R,<sp/>T;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>R_.copyTo(R);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>T_.copyTo(T);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(R.type()<sp/>==<sp/>CV_64F)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(T.type()<sp/>==<sp/>CV_64F);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>Matrix<sp/>=<sp/>cv::Mat::eye(4,<sp/>4,<sp/>CV_64FC1);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>R33<sp/>=<sp/>cv::Mat(Matrix,<sp/>cv::Rect(0,<sp/>0,<sp/>3,<sp/>3));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(R.total()<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv::Rodrigues(R,<sp/>R33);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(R.total()<sp/>==<sp/>9)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv::Mat<sp/>R64;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>R.convertTo(R64,<sp/>CV_64F);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>R.copyTo(R33);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Matrix.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(i,<sp/>3)<sp/>=<sp/>T.ptr&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0)[i];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>M<sp/>=<sp/>Matrix;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(R.depth()<sp/>==<sp/>CV_32F)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>Matrix<sp/>=<sp/>cv::Mat::eye(4,<sp/>4,<sp/>CV_32FC1);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>R33<sp/>=<sp/>cv::Mat(Matrix,<sp/>cv::Rect(0,<sp/>0,<sp/>3,<sp/>3));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(R.total()<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv::Rodrigues(R,<sp/>R33);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(R.total()<sp/>==<sp/>9)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv::Mat<sp/>R32;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>R.convertTo(R32,<sp/>CV_32F);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>R.copyTo(R33);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Matrix.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(i,<sp/>3)<sp/>=<sp/>T.ptr&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0)[i];</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>M<sp/>=<sp/>Matrix;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(forceType<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>M;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>MTyped;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>M.convertTo(MTyped,<sp/>forceType);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MTyped;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="namespacearuco_1a8bdf5564fc70b773ac326d5afa004b47" refkind="member"><highlight class="normal">std::vector&lt;cv::Mat&gt;<sp/><ref refid="namespacearuco_1a8bdf5564fc70b773ac326d5afa004b47" kindref="member">solvePnP</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;cv::Point3f&gt;&amp;<sp/>objPoints,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;cv::Point2f&gt;&amp;<sp/>imgPoints,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::InputArray<sp/>cameraMatrix,<sp/>cv::InputArray<sp/>distCoeffs)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>Rvec,<sp/>Tvec;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>markerLength<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cv::norm(objPoints[1]<sp/>-<sp/>objPoints[0]));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reprojErr1,<sp/>reprojErr2;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>Rvec2,<sp/>Tvec2;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="namespacearuco_1ada065824d7de806dcd082f8a8ebd1e75" kindref="member">solvePoseOfCentredSquare</ref>(markerLength,<sp/>imgPoints,<sp/>cameraMatrix,<sp/>distCoeffs,<sp/>Rvec,<sp/>Tvec,<sp/>reprojErr1,<sp/>Rvec2,<sp/>Tvec2,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reprojErr2);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="namespacearuco_1adccc007d4ba5d0d66831fc31c6694990" kindref="member">getRTMatrix</ref>(Rvec,<sp/>Tvec,<sp/>CV_32F),<sp/><ref refid="namespacearuco_1adccc007d4ba5d0d66831fc31c6694990" kindref="member">getRTMatrix</ref>(Rvec2,<sp/>Tvec2,<sp/>CV_32F)};</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="namespacearuco_1ac3489ddda33f94f247d9be2e6da021f9" refkind="member"><highlight class="normal">std::vector&lt;std::pair&lt;cv::Mat,<sp/>double&gt;<sp/>&gt;<sp/><ref refid="namespacearuco_1ac3489ddda33f94f247d9be2e6da021f9" kindref="member">solvePnP_</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;cv::Point2f&gt;<sp/>&amp;imgPoints,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::InputArray<sp/>cameraMatrix,<sp/>cv::InputArray<sp/>distCoeffs)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>Rvec,<sp/>Tvec,<sp/>Rvec2,<sp/>Tvec2;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reprojErr1,<sp/>reprojErr2;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="namespacearuco_1ada065824d7de806dcd082f8a8ebd1e75" kindref="member">solvePoseOfCentredSquare</ref>(size,<sp/>imgPoints,<sp/>cameraMatrix,<sp/>distCoeffs,<sp/>Rvec,<sp/>Tvec,<sp/>reprojErr1,<sp/>Rvec2,<sp/>Tvec2,<sp/>reprojErr2);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;std::pair&lt;cv::Mat,<sp/>double&gt;&gt;<sp/>{std::make_pair(<ref refid="namespacearuco_1adccc007d4ba5d0d66831fc31c6694990" kindref="member">getRTMatrix</ref>(Rvec,<sp/>Tvec,<sp/>CV_32F),<sp/>reprojErr1),</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_pair(<ref refid="namespacearuco_1adccc007d4ba5d0d66831fc31c6694990" kindref="member">getRTMatrix</ref>(Rvec2,<sp/>Tvec2,<sp/>CV_32F),<sp/>reprojErr2)};</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="namespacearuco_1a6b478ff675559159f2300e3bd08206ce" refkind="member"><highlight class="normal">std::vector&lt;std::pair&lt;cv::Mat,<sp/>double&gt;&gt;<sp/><ref refid="namespacearuco_1ac3489ddda33f94f247d9be2e6da021f9" kindref="member">solvePnP_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;cv::Point3f&gt;&amp;<sp/>objPoints,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;cv::Point2f&gt;&amp;<sp/>imgPoints,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::InputArray<sp/>cameraMatrix,<sp/>cv::InputArray<sp/>distCoeffs)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>Rvec,<sp/>Tvec;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>markerLength<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cv::norm(objPoints[1]<sp/>-<sp/>objPoints[0]));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reprojErr1,<sp/>reprojErr2;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>Rvec2,<sp/>Tvec2;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="namespacearuco_1ada065824d7de806dcd082f8a8ebd1e75" kindref="member">solvePoseOfCentredSquare</ref>(markerLength,<sp/>imgPoints,<sp/>cameraMatrix,<sp/>distCoeffs,<sp/>Rvec,<sp/>Tvec,<sp/>reprojErr1,<sp/>Rvec2,<sp/>Tvec2,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reprojErr2);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;std::pair&lt;cv::Mat,<sp/>double&gt;&gt;<sp/>{std::make_pair(<ref refid="namespacearuco_1adccc007d4ba5d0d66831fc31c6694990" kindref="member">getRTMatrix</ref>(Rvec,<sp/>Tvec,<sp/>CV_32F),<sp/>reprojErr1),</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_pair(<ref refid="namespacearuco_1adccc007d4ba5d0d66831fc31c6694990" kindref="member">getRTMatrix</ref>(Rvec2,<sp/>Tvec2,<sp/>CV_32F),<sp/>reprojErr2)};</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="namespacearuco_1ada065824d7de806dcd082f8a8ebd1e75" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacearuco_1ada065824d7de806dcd082f8a8ebd1e75" kindref="member">solvePoseOfCentredSquare</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>squareLength,<sp/>cv::InputArray<sp/>imagePoints,<sp/>cv::InputArray<sp/>cameraMatrix,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::InputArray<sp/>distCoeffs,<sp/>cv::OutputArray<sp/>_rvec1,<sp/>cv::OutputArray<sp/>_tvec1,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>reprojErr1,<sp/>cv::OutputArray<sp/>_rvec2,<sp/>cv::OutputArray<sp/>_tvec2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>reprojErr2)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>undistortedPoints;<sp/></highlight><highlight class="comment">//<sp/>undistorted<sp/>version<sp/>of<sp/>imagePoints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>modelPoints(4,<sp/>1,<sp/>CV_32FC3);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>coordinate<sp/>system<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>the<sp/>marker,<sp/>with<sp/>Z<sp/>pointing<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>modelPoints.ptr&lt;cv::Vec3f&gt;(0)[0]<sp/>=<sp/>cv::Vec3f(-squareLength<sp/>/<sp/>2.0f,<sp/>squareLength<sp/>/<sp/>2.0f,<sp/>0);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>modelPoints.ptr&lt;cv::Vec3f&gt;(0)[1]<sp/>=<sp/>cv::Vec3f(squareLength<sp/>/<sp/>2.0f,<sp/>squareLength<sp/>/<sp/>2.0f,<sp/>0);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>modelPoints.ptr&lt;cv::Vec3f&gt;(0)[2]<sp/>=<sp/>cv::Vec3f(squareLength<sp/>/<sp/>2.0f,<sp/>-squareLength<sp/>/<sp/>2.0f,<sp/>0);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>modelPoints.ptr&lt;cv::Vec3f&gt;(0)[3]<sp/>=<sp/>cv::Vec3f(-squareLength<sp/>/<sp/>2.0f,<sp/>-squareLength<sp/>/<sp/>2.0f,<sp/>0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(Ra,<sp/>ta),<sp/>(Rb,<sp/>tb)<sp/>are<sp/>the<sp/>two<sp/>pose<sp/>solutions<sp/>from<sp/>IPPE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>_rvec1.create(3,<sp/>1,<sp/>CV_64FC1);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>_tvec1.create(3,<sp/>1,<sp/>CV_64FC1);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>_rvec2.create(3,<sp/>1,<sp/>CV_64FC1);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>_tvec2.create(3,<sp/>1,<sp/>CV_64FC1);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>H,<sp/>Ra,<sp/>Rb,<sp/>ta,<sp/>tb;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>tvec1<sp/>=<sp/>_tvec1.getMat();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>rvec1<sp/>=<sp/>_rvec1.getMat();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>tvec2<sp/>=<sp/>_tvec2.getMat();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>rvec2<sp/>=<sp/>_rvec2.getMat();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>undistort<sp/>the<sp/>image<sp/>points<sp/>(i.e.<sp/>put<sp/>them<sp/>in<sp/>normalized<sp/>pixel<sp/>coordinates).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>undistortPoints(imagePoints,<sp/>undistortedPoints,<sp/>cameraMatrix,<sp/>distCoeffs);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>homography<sp/>mapping<sp/>the<sp/>model&apos;s<sp/>four<sp/>corners<sp/>to<sp/>undistortedPoints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="namespacearuco_1a8cd5a905cfcdfe4362406b9c7a6ab079" kindref="member">homographyFromSquarePoints</ref>(undistortedPoints,<sp/>squareLength<sp/>/<sp/>2.0f,<sp/>H);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>Jacobian<sp/>J<sp/>of<sp/>the<sp/>homography<sp/>at<sp/>(0,<sp/>0):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>j00,<sp/>j01,<sp/>j10,<sp/>j11,<sp/>v0,<sp/>v1;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>j00<sp/>=<sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>0)<sp/>-<sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>0)<sp/>*<sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>2);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>j01<sp/>=<sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>1)<sp/>-<sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>1)<sp/>*<sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>2);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>j10<sp/>=<sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>0)<sp/>-<sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>0)<sp/>*<sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>2);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>j11<sp/>=<sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>1)<sp/>-<sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>1)<sp/>*<sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>2);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>transformation<sp/>of<sp/>(0,<sp/>0)<sp/>into<sp/>the<sp/>image:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>v0<sp/>=<sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>2);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>v1<sp/>=<sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>2);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>two<sp/>rotation<sp/>solutions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><ref refid="namespacearuco_1a1a2dce405304f7f7d28f52059283ce41" kindref="member">IPPComputeRotations</ref>(j00,<sp/>j01,<sp/>j10,<sp/>j11,<sp/>v0,<sp/>v1,<sp/>Ra,<sp/>Rb);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>each<sp/>rotation<sp/>solution,<sp/>compute<sp/>the<sp/>corresponding<sp/>translation<sp/>solution:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><ref refid="namespacearuco_1a27a1e84cb92d795c0bd4361e99db5843" kindref="member">IPPComputeTranslation</ref>(modelPoints,<sp/>undistortedPoints,<sp/>Ra,<sp/>ta);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="namespacearuco_1a27a1e84cb92d795c0bd4361e99db5843" kindref="member">IPPComputeTranslation</ref>(modelPoints,<sp/>undistortedPoints,<sp/>Rb,<sp/>tb);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reprojErra<sp/>=<sp/><ref refid="namespacearuco_1a4627c757960af459bd688e3ad4639e6f" kindref="member">IPPEvalReprojectionError</ref>(Ra,<sp/>ta,<sp/>modelPoints,<sp/>undistortedPoints);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reprojErrb<sp/>=<sp/><ref refid="namespacearuco_1a4627c757960af459bd688e3ad4639e6f" kindref="member">IPPEvalReprojectionError</ref>(Rb,<sp/>tb,<sp/>modelPoints,<sp/>undistortedPoints);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reprojErra<sp/>&lt;<sp/>reprojErrb)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>tvec1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0)<sp/>=<sp/>ta.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>tvec1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1)<sp/>=<sp/>ta.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>tvec1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2)<sp/>=<sp/>ta.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacearuco_1a154d65249cb00ec52ea85b4d656befcd" kindref="member">IPPERot2vec</ref>(Ra,<sp/>rvec1);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>tvec2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0)<sp/>=<sp/>tb.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>tvec2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1)<sp/>=<sp/>tb.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>tvec2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2)<sp/>=<sp/>tb.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacearuco_1a154d65249cb00ec52ea85b4d656befcd" kindref="member">IPPERot2vec</ref>(Rb,<sp/>rvec2);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>reprojErr1<sp/>=<sp/>reprojErra;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>reprojErr2<sp/>=<sp/>reprojErrb;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>tvec1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0)<sp/>=<sp/>tb.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>tvec1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1)<sp/>=<sp/>tb.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>tvec1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2)<sp/>=<sp/>tb.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacearuco_1a154d65249cb00ec52ea85b4d656befcd" kindref="member">IPPERot2vec</ref>(Rb,<sp/>rvec1);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>tvec2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0)<sp/>=<sp/>ta.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>tvec2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1)<sp/>=<sp/>ta.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>tvec2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2)<sp/>=<sp/>ta.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacearuco_1a154d65249cb00ec52ea85b4d656befcd" kindref="member">IPPERot2vec</ref>(Ra,<sp/>rvec2);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>reprojErr1<sp/>=<sp/>reprojErrb;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>reprojErr2<sp/>=<sp/>reprojErra;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="namespacearuco_1a2433e7d2d8c4d30e0c37e1f6913fff4d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacearuco_1a2433e7d2d8c4d30e0c37e1f6913fff4d" kindref="member">IPPEvalBestPose</ref>(cv::InputArray<sp/>_R1,<sp/>cv::InputArray<sp/>_R2,<sp/>cv::InputArray<sp/>_t1,<sp/>cv::InputArray<sp/>_t2,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::InputArray<sp/>_objectPoints,<sp/>cv::InputArray<sp/>_undistortedPoints)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>modelPoints<sp/>=<sp/>_objectPoints.getMat();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>imgPoints<sp/>=<sp/>_undistortedPoints.getMat();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>R1<sp/>=<sp/>_R1.getMat();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>t1<sp/>=<sp/>_t1.getMat();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>R2<sp/>=<sp/>_R2.getMat();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>t2<sp/>=<sp/>_t2.getMat();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPts<sp/>=<sp/>modelPoints.rows;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>loop<sp/>over<sp/>each<sp/>correspondence<sp/>and<sp/>compute<sp/>the<sp/>reprojection<sp/>error<sp/>of<sp/>both<sp/>pose<sp/>solution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>px,<sp/>py,<sp/>pz;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reprojError1<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>reprojection<sp/>error<sp/>of<sp/>pose<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reprojError2<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>reprojection<sp/>error<sp/>of<sp/>pose<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx,<sp/>dy;<sp/></highlight><highlight class="comment">//<sp/>residual<sp/>reprojection<sp/>error<sp/>with<sp/>respect<sp/>to<sp/>x<sp/>and<sp/>y<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numPts;<sp/>i++)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>projection<sp/>with<sp/>first<sp/>pose<sp/>solution:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>px<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>0)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(0))</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>1)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(1))</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>2)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(2)<sp/>+<sp/>t1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>py<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>0)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(0))</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>1)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(1))</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>2)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(2)<sp/>+<sp/>t1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>pz<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>0)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(0))</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>1)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(1))</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>2)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(2)<sp/>+<sp/>t1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>px<sp/>/<sp/>pz<sp/>-<sp/>imgPoints.at&lt;cv::Vec2f&gt;(i)(0);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>py<sp/>/<sp/>pz<sp/>-<sp/>imgPoints.at&lt;cv::Vec2f&gt;(i)(1);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>reprojError1<sp/>=<sp/>reprojError1<sp/>+<sp/>std::sqrt(dx<sp/>*<sp/>dx<sp/>+<sp/>dy<sp/>*<sp/>dy);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>projection<sp/>with<sp/>second<sp/>pose<sp/>solution:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>px<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>0)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(0))</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>1)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(1))</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>2)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(2)<sp/>+<sp/>t2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>py<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>0)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(0))</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>1)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(1))</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>2)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(2)<sp/>+<sp/>t2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>pz<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>0)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(0))</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>1)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(1))</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>2)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(2)<sp/>+<sp/>t2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>px<sp/>/<sp/>pz<sp/>-<sp/>imgPoints.at&lt;cv::Vec2f&gt;(i)(0);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>py<sp/>/<sp/>pz<sp/>-<sp/>imgPoints.at&lt;cv::Vec2f&gt;(i)(1);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>reprojError2<sp/>=<sp/>reprojError2<sp/>+<sp/>std::sqrt(dx<sp/>*<sp/>dx<sp/>+<sp/>dy<sp/>*<sp/>dy);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reprojError1<sp/>&lt;<sp/>reprojError2)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="namespacearuco_1a4627c757960af459bd688e3ad4639e6f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacearuco_1a4627c757960af459bd688e3ad4639e6f" kindref="member">IPPEvalReprojectionError</ref>(cv::InputArray<sp/>_R,<sp/>cv::InputArray<sp/>_t,<sp/>cv::InputArray<sp/>_objectPoints,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::InputArray<sp/>_undistortedPoints)</highlight></codeline>
<codeline lineno="284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>modelPoints<sp/>=<sp/>_objectPoints.getMat();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>imgPoints<sp/>=<sp/>_undistortedPoints.getMat();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>R<sp/>=<sp/>_R.getMat();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>t<sp/>=<sp/>_t.getMat();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPts<sp/>=<sp/>modelPoints.rows;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>px,<sp/>py,<sp/>pz;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reprojError<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx,<sp/>dy;<sp/></highlight><highlight class="comment">//<sp/>residual<sp/>reprojection<sp/>error<sp/>with<sp/>respect<sp/>to<sp/>x<sp/>and<sp/>y<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>loop<sp/>over<sp/>each<sp/>correspondence<sp/>and<sp/>compute<sp/>the<sp/>reprojection<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numPts;<sp/>i++)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>px<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>0)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(0))</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>1)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(1))</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>2)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(2)<sp/>+<sp/>t.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>py<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>0)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(0))</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>1)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(1))</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>2)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(2)<sp/>+<sp/>t.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>pz<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>0)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(0))</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>1)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(1))</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>2)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(2)<sp/>+<sp/>t.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2));</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>px<sp/>/<sp/>pz<sp/>-<sp/>imgPoints.at&lt;cv::Vec2f&gt;(i)(0);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>py<sp/>/<sp/>pz<sp/>-<sp/>imgPoints.at&lt;cv::Vec2f&gt;(i)(1);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>reprojError<sp/>=<sp/>reprojError<sp/>+<sp/>std::sqrt(dx<sp/>*<sp/>dx<sp/>+<sp/>dy<sp/>*<sp/>dy);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reprojError;</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="namespacearuco_1a154d65249cb00ec52ea85b4d656befcd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacearuco_1a154d65249cb00ec52ea85b4d656befcd" kindref="member">IPPERot2vec</ref>(cv::InputArray<sp/>_R,<sp/>cv::OutputArray<sp/>_r)</highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>R<sp/>=<sp/>_R.getMat();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>rvec<sp/>=<sp/>_r.getMat();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trace<sp/>=<sp/>R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>0)<sp/>+<sp/>R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>1)<sp/>+<sp/>R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>2);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>w_norm<sp/>=<sp/>acos((trace<sp/>-<sp/>1.0)<sp/>/<sp/>2.0);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c0,<sp/>c1,<sp/>c2;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps<sp/>=<sp/>std::numeric_limits&lt;double&gt;::epsilon();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacesetup_1aa2586b6c4dd84a0aaaf49cb1565cee6e" kindref="member">d</ref><sp/>=<sp/>1<sp/>/<sp/>(2<sp/>*<sp/>sin(w_norm))<sp/>*<sp/>w_norm;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w_norm<sp/>&lt;<sp/>eps)<sp/></highlight><highlight class="comment">//<sp/>rotation<sp/>is<sp/>the<sp/>identity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>rvec.setTo(0);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>c0<sp/>=<sp/>R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>1)<sp/>-<sp/>R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>2);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>c1<sp/>=<sp/>R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>2)<sp/>-<sp/>R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>0);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>0)<sp/>-<sp/>R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>1);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>rvec.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0)<sp/>=<sp/><ref refid="namespacesetup_1aa2586b6c4dd84a0aaaf49cb1565cee6e" kindref="member">d</ref><sp/>*<sp/>c0;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>rvec.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1)<sp/>=<sp/><ref refid="namespacesetup_1aa2586b6c4dd84a0aaaf49cb1565cee6e" kindref="member">d</ref><sp/>*<sp/>c1;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>rvec.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2)<sp/>=<sp/><ref refid="namespacesetup_1aa2586b6c4dd84a0aaaf49cb1565cee6e" kindref="member">d</ref><sp/>*<sp/>c2;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="namespacearuco_1a27a1e84cb92d795c0bd4361e99db5843" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacearuco_1a27a1e84cb92d795c0bd4361e99db5843" kindref="member">IPPComputeTranslation</ref>(cv::InputArray<sp/>_objectPoints,<sp/>cv::InputArray<sp/>_imgPoints,<sp/>cv::InputArray<sp/>_R,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::OutputArray<sp/>_t)</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>solved<sp/>by<sp/>building<sp/>the<sp/>linear<sp/>system<sp/>At<sp/>=<sp/>b,<sp/>where<sp/>t<sp/>corresponds<sp/>to<sp/>the<sp/>(ALL_DICTS)<sp/>translation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>then<sp/>inverted<sp/>with<sp/>the<sp/>associated<sp/>normal<sp/>equations<sp/>to<sp/>give<sp/>t<sp/>=<sp/>inv(transpose(A)*A)*transpose(A)*b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>efficiency<sp/>we<sp/>only<sp/>store<sp/>the<sp/>coefficients<sp/>of<sp/>(transpose(A)*A)<sp/>and<sp/>(transpose(A)*b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>modelPoints<sp/>=<sp/>_objectPoints.getMat();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>imgPoints<sp/>=<sp/>_imgPoints.getMat();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPts<sp/>=<sp/>modelPoints.rows;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>_t.create(3,<sp/>1,<sp/>CV_64FC1);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>R<sp/>=<sp/>_R.getMat();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>coefficients<sp/>of<sp/>(transpose(A)<sp/>*<sp/>A)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ATA00<sp/>=<sp/>numPts;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ATA02<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ATA11<sp/>=<sp/>numPts;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ATA12<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ATA20<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ATA21<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ATA22<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>coefficients<sp/>of<sp/>(transpose(A)<sp/>*<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ATb0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ATb1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ATb2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>S<sp/>gives<sp/>inv(transpose(A)<sp/>*<sp/>A)<sp/>/<sp/>det(A)^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>S00,<sp/>S01,<sp/>S02;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>S10,<sp/>S11,<sp/>S12;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>S20,<sp/>S21,<sp/>S22;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rx,<sp/>ry,<sp/>rz;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a2;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b2;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bx,<sp/>by;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>loop<sp/>through<sp/>each<sp/>point<sp/>and<sp/>increment<sp/>the<sp/>coefficients:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numPts;<sp/>i++)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>rx<sp/>=<sp/>R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>0)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(0)<sp/>+<sp/>R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>1)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(1)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>2)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(2);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>ry<sp/>=<sp/>R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>0)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(0)<sp/>+<sp/>R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>1)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(1)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>2)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(2);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>rz<sp/>=<sp/>R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>0)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(0)<sp/>+<sp/>R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>1)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(1)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>R.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>2)<sp/>*<sp/>modelPoints.at&lt;cv::Vec3f&gt;(i)(2);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>a2<sp/>=<sp/>-imgPoints.at&lt;cv::Vec2f&gt;(i)(0);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>b2<sp/>=<sp/>-imgPoints.at&lt;cv::Vec2f&gt;(i)(1);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>ATA02<sp/>=<sp/>ATA02<sp/>+<sp/>a2;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>ATA12<sp/>=<sp/>ATA12<sp/>+<sp/>b2;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>ATA20<sp/>=<sp/>ATA20<sp/>+<sp/>a2;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>ATA21<sp/>=<sp/>ATA21<sp/>+<sp/>b2;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>ATA22<sp/>=<sp/>ATA22<sp/>+<sp/>a2<sp/>*<sp/>a2<sp/>+<sp/>b2<sp/>*<sp/>b2;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>bx<sp/>=<sp/>(imgPoints.at&lt;cv::Vec2f&gt;(i)(0))<sp/>*<sp/>rz<sp/>-<sp/>rx;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>by<sp/>=<sp/>(imgPoints.at&lt;cv::Vec2f&gt;(i)(1))<sp/>*<sp/>rz<sp/>-<sp/>ry;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>ATb0<sp/>=<sp/>ATb0<sp/>+<sp/>bx;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>ATb1<sp/>=<sp/>ATb1<sp/>+<sp/>by;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>ATb2<sp/>=<sp/>ATb2<sp/>+<sp/>a2<sp/>*<sp/>bx<sp/>+<sp/>b2<sp/>*<sp/>by;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>detAInv<sp/>=<sp/>1.0<sp/>/<sp/>(ATA00<sp/>*<sp/>ATA11<sp/>*<sp/>ATA22<sp/>-<sp/>ATA00<sp/>*<sp/>ATA12<sp/>*<sp/>ATA21<sp/>-<sp/>ATA02<sp/>*<sp/>ATA11<sp/>*<sp/>ATA20);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>construct<sp/>S:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>S00<sp/>=<sp/>ATA11<sp/>*<sp/>ATA22<sp/>-<sp/>ATA12<sp/>*<sp/>ATA21;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>S01<sp/>=<sp/>ATA02<sp/>*<sp/>ATA21;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>S02<sp/>=<sp/>-ATA02<sp/>*<sp/>ATA11;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>S10<sp/>=<sp/>ATA12<sp/>*<sp/>ATA20;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>S11<sp/>=<sp/>ATA00<sp/>*<sp/>ATA22<sp/>-<sp/>ATA02<sp/>*<sp/>ATA20;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>S12<sp/>=<sp/>-ATA00<sp/>*<sp/>ATA12;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>S20<sp/>=<sp/>-ATA11<sp/>*<sp/>ATA20;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>S21<sp/>=<sp/>-ATA00<sp/>*<sp/>ATA21;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>S22<sp/>=<sp/>ATA00<sp/>*<sp/>ATA11;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>solve<sp/>t:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>t<sp/>=<sp/>_t.getMat();</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>t.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0)<sp/>=<sp/>detAInv<sp/>*<sp/>(S00<sp/>*<sp/>ATb0<sp/>+<sp/>S01<sp/>*<sp/>ATb1<sp/>+<sp/>S02<sp/>*<sp/>ATb2);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>t.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1)<sp/>=<sp/>detAInv<sp/>*<sp/>(S10<sp/>*<sp/>ATb0<sp/>+<sp/>S11<sp/>*<sp/>ATb1<sp/>+<sp/>S12<sp/>*<sp/>ATb2);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>t.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2)<sp/>=<sp/>detAInv<sp/>*<sp/>(S20<sp/>*<sp/>ATb0<sp/>+<sp/>S21<sp/>*<sp/>ATb1<sp/>+<sp/>S22<sp/>*<sp/>ATb2);</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="namespacearuco_1a1a2dce405304f7f7d28f52059283ce41" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacearuco_1a1a2dce405304f7f7d28f52059283ce41" kindref="member">IPPComputeRotations</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>j00,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>j01,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>j10,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>j11,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q,<sp/>cv::OutputArray<sp/>_R1,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::OutputArray<sp/>_R2)</highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>it<sp/>is<sp/>very<sp/>hard<sp/>to<sp/>understand<sp/>what<sp/>is<sp/>going<sp/>on<sp/>here<sp/>from<sp/>the<sp/>code,<sp/>so<sp/>if<sp/>you<sp/>want<sp/>to<sp/>have<sp/>a<sp/>clear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>explanation<sp/>then<sp/>please<sp/>refer<sp/>to<sp/>the<sp/>IPPE<sp/>paper<sp/>(Algorithm<sp/>1<sp/>and<sp/>its<sp/>description).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>_R1.create(3,<sp/>3,<sp/>CV_64FC1);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>_R2.create(3,<sp/>3,<sp/>CV_64FC1);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a00,<sp/>a01,<sp/>a10,<sp/>a11,<sp/>ata00,<sp/>ata01,<sp/>ata11,<sp/>b00,<sp/>b01,<sp/>b10,<sp/>b11,<sp/>binv00,<sp/>binv01,<sp/>binv10,<sp/>binv11;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rv00,<sp/>rv01,<sp/>rv02,<sp/>rv10,<sp/>rv11,<sp/>rv12,<sp/>rv20,<sp/>rv21,<sp/>rv22;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rtilde00,<sp/>rtilde01,<sp/>rtilde10,<sp/>rtilde11;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rtilde00_2,<sp/>rtilde01_2,<sp/>rtilde10_2,<sp/>rtilde11_2;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b0,<sp/>b1,<sp/>gamma,<sp/>dtinv;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s,<sp/>t,<sp/>sp,<sp/>krs0,<sp/>krs1,<sp/>krs0_2,<sp/>krs1_2,<sp/>costh,<sp/>sinth;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>s<sp/>=<sp/>std::sqrt(p<sp/>*<sp/>p<sp/>+<sp/>q<sp/>*<sp/>q<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>t<sp/>=<sp/>std::sqrt(p<sp/>*<sp/>p<sp/>+<sp/>q<sp/>*<sp/>q);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>costh<sp/>=<sp/>1<sp/>/<sp/>s;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>sinth<sp/>=<sp/>std::sqrt(1<sp/>-<sp/>1<sp/>/<sp/>(s<sp/>*<sp/>s));</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>krs0<sp/>=<sp/>p<sp/>/<sp/>t;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>krs1<sp/>=<sp/>q<sp/>/<sp/>t;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>krs0_2<sp/>=<sp/>krs0<sp/>*<sp/>krs0;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>krs1_2<sp/>=<sp/>krs1<sp/>*<sp/>krs1;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>rv00<sp/>=<sp/>(costh<sp/>-<sp/>1)<sp/>*<sp/>krs0_2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>rv01<sp/>=<sp/>krs0<sp/>*<sp/>krs1<sp/>*<sp/>(costh<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>rv02<sp/>=<sp/>krs0<sp/>*<sp/>sinth;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>rv10<sp/>=<sp/>krs0<sp/>*<sp/>krs1<sp/>*<sp/>(costh<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>rv11<sp/>=<sp/>(costh<sp/>-<sp/>1)<sp/>*<sp/>krs1_2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>rv12<sp/>=<sp/>krs1<sp/>*<sp/>sinth;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>rv20<sp/>=<sp/>-krs0<sp/>*<sp/>sinth;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>rv21<sp/>=<sp/>-krs1<sp/>*<sp/>sinth;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>rv22<sp/>=<sp/>(costh<sp/>-<sp/>1)<sp/>*<sp/>(krs0_2<sp/>+<sp/>krs1_2)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>setup<sp/>the<sp/>2x2<sp/>SVD<sp/>decomposition:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>b00<sp/>=<sp/>rv00<sp/>-<sp/>p<sp/>*<sp/>rv20;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>b01<sp/>=<sp/>rv01<sp/>-<sp/>p<sp/>*<sp/>rv21;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>b10<sp/>=<sp/>rv10<sp/>-<sp/>q<sp/>*<sp/>rv20;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>b11<sp/>=<sp/>rv11<sp/>-<sp/>q<sp/>*<sp/>rv21;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>dtinv<sp/>=<sp/>1.0<sp/>/<sp/>((b00<sp/>*<sp/>b11<sp/>-<sp/>b01<sp/>*<sp/>b10));</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>binv00<sp/>=<sp/>dtinv<sp/>*<sp/>b11;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>binv01<sp/>=<sp/>-dtinv<sp/>*<sp/>b01;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>binv10<sp/>=<sp/>-dtinv<sp/>*<sp/>b10;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>binv11<sp/>=<sp/>dtinv<sp/>*<sp/>b00;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>a00<sp/>=<sp/>binv00<sp/>*<sp/>j00<sp/>+<sp/>binv01<sp/>*<sp/>j10;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>a01<sp/>=<sp/>binv00<sp/>*<sp/>j01<sp/>+<sp/>binv01<sp/>*<sp/>j11;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>a10<sp/>=<sp/>binv10<sp/>*<sp/>j00<sp/>+<sp/>binv11<sp/>*<sp/>j10;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>a11<sp/>=<sp/>binv10<sp/>*<sp/>j01<sp/>+<sp/>binv11<sp/>*<sp/>j11;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>largest<sp/>singular<sp/>value<sp/>of<sp/>A:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>ata00<sp/>=<sp/>a00<sp/>*<sp/>a00<sp/>+<sp/>a01<sp/>*<sp/>a01;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>ata01<sp/>=<sp/>a00<sp/>*<sp/>a10<sp/>+<sp/>a01<sp/>*<sp/>a11;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>ata11<sp/>=<sp/>a10<sp/>*<sp/>a10<sp/>+<sp/>a11<sp/>*<sp/>a11;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>gamma<sp/>=<sp/>std::sqrt(0.5<sp/>*<sp/>(ata00<sp/>+<sp/>ata11<sp/>+<sp/>std::sqrt((ata00<sp/>-<sp/>ata11)<sp/>*<sp/>(ata00<sp/>-<sp/>ata11)<sp/>+<sp/>4.0<sp/>*<sp/>ata01<sp/>*<sp/>ata01)));</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reconstruct<sp/>the<sp/>full<sp/>rotation<sp/>matrices:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>rtilde00<sp/>=<sp/>a00<sp/>/<sp/>gamma;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>rtilde01<sp/>=<sp/>a01<sp/>/<sp/>gamma;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>rtilde10<sp/>=<sp/>a10<sp/>/<sp/>gamma;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>rtilde11<sp/>=<sp/>a11<sp/>/<sp/>gamma;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>rtilde00_2<sp/>=<sp/>rtilde00<sp/>*<sp/>rtilde00;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>rtilde01_2<sp/>=<sp/>rtilde01<sp/>*<sp/>rtilde01;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>rtilde10_2<sp/>=<sp/>rtilde10<sp/>*<sp/>rtilde10;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>rtilde11_2<sp/>=<sp/>rtilde11<sp/>*<sp/>rtilde11;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>b0<sp/>=<sp/>std::sqrt(-rtilde00_2<sp/>-<sp/>rtilde10_2<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>b1<sp/>=<sp/>std::sqrt(-rtilde01_2<sp/>-<sp/>rtilde11_2<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>sp<sp/>=<sp/>(-rtilde00<sp/>*<sp/>rtilde01<sp/>-<sp/>rtilde10<sp/>*<sp/>rtilde11);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>b1<sp/>=<sp/>-b1;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>results:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>R1<sp/>=<sp/>_R1.getMat();</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>R2<sp/>=<sp/>_R2.getMat();</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>R1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>0)<sp/>=<sp/>(rtilde00)<sp/>*<sp/>rv00<sp/>+<sp/>(rtilde10)<sp/>*<sp/>rv01<sp/>+<sp/>(b0)<sp/>*<sp/>rv02;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>R1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>1)<sp/>=<sp/>(rtilde01)<sp/>*<sp/>rv00<sp/>+<sp/>(rtilde11)<sp/>*<sp/>rv01<sp/>+<sp/>(b1)<sp/>*<sp/>rv02;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>R1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>2)<sp/>=<sp/>(b1<sp/>*<sp/>rtilde10<sp/>-<sp/>b0<sp/>*<sp/>rtilde11)<sp/>*<sp/>rv00<sp/>+<sp/>(b0<sp/>*<sp/>rtilde01<sp/>-<sp/>b1<sp/>*<sp/>rtilde00)<sp/>*<sp/>rv01</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(rtilde00<sp/>*<sp/>rtilde11<sp/>-<sp/>rtilde01<sp/>*<sp/>rtilde10)<sp/>*<sp/>rv02;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>R1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>0)<sp/>=<sp/>(rtilde00)<sp/>*<sp/>rv10<sp/>+<sp/>(rtilde10)<sp/>*<sp/>rv11<sp/>+<sp/>(b0)<sp/>*<sp/>rv12;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>R1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>1)<sp/>=<sp/>(rtilde01)<sp/>*<sp/>rv10<sp/>+<sp/>(rtilde11)<sp/>*<sp/>rv11<sp/>+<sp/>(b1)<sp/>*<sp/>rv12;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>R1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>2)<sp/>=<sp/>(b1<sp/>*<sp/>rtilde10<sp/>-<sp/>b0<sp/>*<sp/>rtilde11)<sp/>*<sp/>rv10<sp/>+<sp/>(b0<sp/>*<sp/>rtilde01<sp/>-<sp/>b1<sp/>*<sp/>rtilde00)<sp/>*<sp/>rv11</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(rtilde00<sp/>*<sp/>rtilde11<sp/>-<sp/>rtilde01<sp/>*<sp/>rtilde10)<sp/>*<sp/>rv12;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>R1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>0)<sp/>=<sp/>(rtilde00)<sp/>*<sp/>rv20<sp/>+<sp/>(rtilde10)<sp/>*<sp/>rv21<sp/>+<sp/>(b0)<sp/>*<sp/>rv22;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>R1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>1)<sp/>=<sp/>(rtilde01)<sp/>*<sp/>rv20<sp/>+<sp/>(rtilde11)<sp/>*<sp/>rv21<sp/>+<sp/>(b1)<sp/>*<sp/>rv22;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>R1.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>2)<sp/>=<sp/>(b1<sp/>*<sp/>rtilde10<sp/>-<sp/>b0<sp/>*<sp/>rtilde11)<sp/>*<sp/>rv20<sp/>+<sp/>(b0<sp/>*<sp/>rtilde01<sp/>-<sp/>b1<sp/>*<sp/>rtilde00)<sp/>*<sp/>rv21</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(rtilde00<sp/>*<sp/>rtilde11<sp/>-<sp/>rtilde01<sp/>*<sp/>rtilde10)<sp/>*<sp/>rv22;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>R2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>0)<sp/>=<sp/>(rtilde00)<sp/>*<sp/>rv00<sp/>+<sp/>(rtilde10)<sp/>*<sp/>rv01<sp/>+<sp/>(-b0)<sp/>*<sp/>rv02;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>R2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>1)<sp/>=<sp/>(rtilde01)<sp/>*<sp/>rv00<sp/>+<sp/>(rtilde11)<sp/>*<sp/>rv01<sp/>+<sp/>(-b1)<sp/>*<sp/>rv02;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>R2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>2)<sp/>=<sp/>(b0<sp/>*<sp/>rtilde11<sp/>-<sp/>b1<sp/>*<sp/>rtilde10)<sp/>*<sp/>rv00<sp/>+<sp/>(b1<sp/>*<sp/>rtilde00<sp/>-<sp/>b0<sp/>*<sp/>rtilde01)<sp/>*<sp/>rv01</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(rtilde00<sp/>*<sp/>rtilde11<sp/>-<sp/>rtilde01<sp/>*<sp/>rtilde10)<sp/>*<sp/>rv02;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>R2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>0)<sp/>=<sp/>(rtilde00)<sp/>*<sp/>rv10<sp/>+<sp/>(rtilde10)<sp/>*<sp/>rv11<sp/>+<sp/>(-b0)<sp/>*<sp/>rv12;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>R2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>1)<sp/>=<sp/>(rtilde01)<sp/>*<sp/>rv10<sp/>+<sp/>(rtilde11)<sp/>*<sp/>rv11<sp/>+<sp/>(-b1)<sp/>*<sp/>rv12;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>R2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>2)<sp/>=<sp/>(b0<sp/>*<sp/>rtilde11<sp/>-<sp/>b1<sp/>*<sp/>rtilde10)<sp/>*<sp/>rv10<sp/>+<sp/>(b1<sp/>*<sp/>rtilde00<sp/>-<sp/>b0<sp/>*<sp/>rtilde01)<sp/>*<sp/>rv11</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(rtilde00<sp/>*<sp/>rtilde11<sp/>-<sp/>rtilde01<sp/>*<sp/>rtilde10)<sp/>*<sp/>rv12;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>R2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>0)<sp/>=<sp/>(rtilde00)<sp/>*<sp/>rv20<sp/>+<sp/>(rtilde10)<sp/>*<sp/>rv21<sp/>+<sp/>(-b0)<sp/>*<sp/>rv22;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>R2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>1)<sp/>=<sp/>(rtilde01)<sp/>*<sp/>rv20<sp/>+<sp/>(rtilde11)<sp/>*<sp/>rv21<sp/>+<sp/>(-b1)<sp/>*<sp/>rv22;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>R2.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>2)<sp/>=<sp/>(b0<sp/>*<sp/>rtilde11<sp/>-<sp/>b1<sp/>*<sp/>rtilde10)<sp/>*<sp/>rv20<sp/>+<sp/>(b1<sp/>*<sp/>rtilde00<sp/>-<sp/>b0<sp/>*<sp/>rtilde01)<sp/>*<sp/>rv21</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(rtilde00<sp/>*<sp/>rtilde11<sp/>-<sp/>rtilde01<sp/>*<sp/>rtilde10)<sp/>*<sp/>rv22;</highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="namespacearuco_1a8cd5a905cfcdfe4362406b9c7a6ab079" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacearuco_1a8cd5a905cfcdfe4362406b9c7a6ab079" kindref="member">homographyFromSquarePoints</ref>(cv::InputArray<sp/>_targetPts,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>halfLength,<sp/>cv::OutputArray<sp/>H_)</highlight></codeline>
<codeline lineno="534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>pts<sp/>=<sp/>_targetPts.getMat();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>H_.create(3,<sp/>3,<sp/>CV_64FC1);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>H<sp/>=<sp/>H_.getMat();</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p1x<sp/>=<sp/>-pts.at&lt;cv::Vec2f&gt;(0)(0);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p1y<sp/>=<sp/>-pts.at&lt;cv::Vec2f&gt;(0)(1);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p2x<sp/>=<sp/>-pts.at&lt;cv::Vec2f&gt;(1)(0);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p2y<sp/>=<sp/>-pts.at&lt;cv::Vec2f&gt;(1)(1);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p3x<sp/>=<sp/>-pts.at&lt;cv::Vec2f&gt;(2)(0);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p3y<sp/>=<sp/>-pts.at&lt;cv::Vec2f&gt;(2)(1);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p4x<sp/>=<sp/>-pts.at&lt;cv::Vec2f&gt;(3)(0);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p4y<sp/>=<sp/>-pts.at&lt;cv::Vec2f&gt;(3)(1);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>analytic<sp/>solution:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>detsInv<sp/>=<sp/>-1</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>(halfLength<sp/>*<sp/>(p1x<sp/>*<sp/>p2y<sp/>-<sp/>p2x<sp/>*<sp/>p1y<sp/>-<sp/>p1x<sp/>*<sp/>p4y<sp/>+<sp/>p2x<sp/>*<sp/>p3y<sp/>-<sp/>p3x<sp/>*<sp/>p2y<sp/>+<sp/>p4x<sp/>*<sp/>p1y<sp/>+<sp/>p3x<sp/>*<sp/>p4y<sp/>-<sp/>p4x<sp/>*<sp/>p3y));</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>0)<sp/>=<sp/>detsInv</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(p1x<sp/>*<sp/>p3x<sp/>*<sp/>p2y<sp/>-<sp/>p2x<sp/>*<sp/>p3x<sp/>*<sp/>p1y<sp/>-<sp/>p1x<sp/>*<sp/>p4x<sp/>*<sp/>p2y<sp/>+<sp/>p2x<sp/>*<sp/>p4x<sp/>*<sp/>p1y<sp/>-<sp/>p1x<sp/>*<sp/>p3x<sp/>*<sp/>p4y<sp/>+<sp/>p1x<sp/>*<sp/>p4x<sp/>*<sp/>p3y</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>p2x<sp/>*<sp/>p3x<sp/>*<sp/>p4y<sp/>-<sp/>p2x<sp/>*<sp/>p4x<sp/>*<sp/>p3y);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>1)<sp/>=<sp/>detsInv</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(p1x<sp/>*<sp/>p2x<sp/>*<sp/>p3y<sp/>-<sp/>p1x<sp/>*<sp/>p3x<sp/>*<sp/>p2y<sp/>-<sp/>p1x<sp/>*<sp/>p2x<sp/>*<sp/>p4y<sp/>+<sp/>p2x<sp/>*<sp/>p4x<sp/>*<sp/>p1y<sp/>+<sp/>p1x<sp/>*<sp/>p3x<sp/>*<sp/>p4y<sp/>-<sp/>p3x<sp/>*<sp/>p4x<sp/>*<sp/>p1y</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>p2x<sp/>*<sp/>p4x<sp/>*<sp/>p3y<sp/>+<sp/>p3x<sp/>*<sp/>p4x<sp/>*<sp/>p2y);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>2)<sp/>=<sp/>detsInv<sp/>*<sp/>halfLength</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(p1x<sp/>*<sp/>p2x<sp/>*<sp/>p3y<sp/>-<sp/>p2x<sp/>*<sp/>p3x<sp/>*<sp/>p1y<sp/>-<sp/>p1x<sp/>*<sp/>p2x<sp/>*<sp/>p4y<sp/>+<sp/>p1x<sp/>*<sp/>p4x<sp/>*<sp/>p2y<sp/>-<sp/>p1x<sp/>*<sp/>p4x<sp/>*<sp/>p3y<sp/>+<sp/>p3x<sp/>*<sp/>p4x<sp/>*<sp/>p1y</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>p2x<sp/>*<sp/>p3x<sp/>*<sp/>p4y<sp/>-<sp/>p3x<sp/>*<sp/>p4x<sp/>*<sp/>p2y);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>0)<sp/>=<sp/>detsInv</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(p1x<sp/>*<sp/>p2y<sp/>*<sp/>p3y<sp/>-<sp/>p2x<sp/>*<sp/>p1y<sp/>*<sp/>p3y<sp/>-<sp/>p1x<sp/>*<sp/>p2y<sp/>*<sp/>p4y<sp/>+<sp/>p2x<sp/>*<sp/>p1y<sp/>*<sp/>p4y<sp/>-<sp/>p3x<sp/>*<sp/>p1y<sp/>*<sp/>p4y<sp/>+<sp/>p4x<sp/>*<sp/>p1y<sp/>*<sp/>p3y</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>p3x<sp/>*<sp/>p2y<sp/>*<sp/>p4y<sp/>-<sp/>p4x<sp/>*<sp/>p2y<sp/>*<sp/>p3y);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>1)<sp/>=<sp/>detsInv</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(p2x<sp/>*<sp/>p1y<sp/>*<sp/>p3y<sp/>-<sp/>p3x<sp/>*<sp/>p1y<sp/>*<sp/>p2y<sp/>-<sp/>p1x<sp/>*<sp/>p2y<sp/>*<sp/>p4y<sp/>+<sp/>p4x<sp/>*<sp/>p1y<sp/>*<sp/>p2y<sp/>+<sp/>p1x<sp/>*<sp/>p3y<sp/>*<sp/>p4y<sp/>-<sp/>p4x<sp/>*<sp/>p1y<sp/>*<sp/>p3y</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>p2x<sp/>*<sp/>p3y<sp/>*<sp/>p4y<sp/>+<sp/>p3x<sp/>*<sp/>p2y<sp/>*<sp/>p4y);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>2)<sp/>=<sp/>detsInv<sp/>*<sp/>halfLength</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(p1x<sp/>*<sp/>p2y<sp/>*<sp/>p3y<sp/>-<sp/>p3x<sp/>*<sp/>p1y<sp/>*<sp/>p2y<sp/>-<sp/>p2x<sp/>*<sp/>p1y<sp/>*<sp/>p4y<sp/>+<sp/>p4x<sp/>*<sp/>p1y<sp/>*<sp/>p2y<sp/>-<sp/>p1x<sp/>*<sp/>p3y<sp/>*<sp/>p4y<sp/>+<sp/>p3x<sp/>*<sp/>p1y<sp/>*<sp/>p4y</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>p2x<sp/>*<sp/>p3y<sp/>*<sp/>p4y<sp/>-<sp/>p4x<sp/>*<sp/>p2y<sp/>*<sp/>p3y);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>0)<sp/>=<sp/>-detsInv</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(p1x<sp/>*<sp/>p3y<sp/>-<sp/>p3x<sp/>*<sp/>p1y<sp/>-<sp/>p1x<sp/>*<sp/>p4y<sp/>-<sp/>p2x<sp/>*<sp/>p3y<sp/>+<sp/>p3x<sp/>*<sp/>p2y<sp/>+<sp/>p4x<sp/>*<sp/>p1y<sp/>+<sp/>p2x<sp/>*<sp/>p4y<sp/>-<sp/>p4x<sp/>*<sp/>p2y);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>1)<sp/>=<sp/>detsInv</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(p1x<sp/>*<sp/>p2y<sp/>-<sp/>p2x<sp/>*<sp/>p1y<sp/>-<sp/>p1x<sp/>*<sp/>p3y<sp/>+<sp/>p3x<sp/>*<sp/>p1y<sp/>+<sp/>p2x<sp/>*<sp/>p4y<sp/>-<sp/>p4x<sp/>*<sp/>p2y<sp/>-<sp/>p3x<sp/>*<sp/>p4y<sp/>+<sp/>p4x<sp/>*<sp/>p3y);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>H.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>2)<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>aruco</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="robocluedo_dependencies/aruco_ros/aruco/src/aruco/ippe.cpp"/>
  </compounddef>
</doxygen>
