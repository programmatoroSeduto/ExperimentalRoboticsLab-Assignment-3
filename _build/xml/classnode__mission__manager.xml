<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classnode__mission__manager" kind="class" language="C++" prot="public">
    <compoundname>node_mission_manager</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnode__mission__manager_1ae80c55f44c63fb7cf826fe154234032b" prot="private" static="no" mutable="no">
        <type>ros::NodeHandle</type>
        <definition>ros::NodeHandle node_mission_manager::nh</definition>
        <argsstring></argsstring>
        <name>nh</name>
        <briefdescription>
<para>the node handle </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="913" column="17" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="913" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__mission__manager_1aaec163f3f0944fe7934ee31003c8f3d0" prot="private" static="no" mutable="no">
        <type>ros::ServiceClient</type>
        <definition>ros::ServiceClient node_mission_manager::cl_auto_manip</definition>
        <argsstring></argsstring>
        <name>cl_auto_manip</name>
        <briefdescription>
<para>auto manipulation client </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="916" column="20" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="916" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__mission__manager_1a68390e83274eee5e56e2285b9aa93731" prot="private" static="no" mutable="no">
        <type>ros::ServiceClient</type>
        <definition>ros::ServiceClient node_mission_manager::cl_rosplan_pipeline</definition>
        <argsstring></argsstring>
        <name>cl_rosplan_pipeline</name>
        <briefdescription>
<para>client rosplan pipeline manager </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="919" column="20" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="919" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__mission__manager_1a591487ef8cb9d2b26e37cd6e55fc0878" prot="private" static="no" mutable="no">
        <type>ros::ServiceClient</type>
        <definition>ros::ServiceClient node_mission_manager::cl_armor_add</definition>
        <argsstring></argsstring>
        <name>cl_armor_add</name>
        <briefdescription>
<para>client for armor add hint </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="922" column="20" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="922" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__mission__manager_1a8bab762c14e78ed38de8e1f9eff2e2cb" prot="private" static="no" mutable="no">
        <type>ros::ServiceClient</type>
        <definition>ros::ServiceClient node_mission_manager::cl_armor_find</definition>
        <argsstring></argsstring>
        <name>cl_armor_find</name>
        <briefdescription>
<para>client for armor find consistent hypotheses </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="925" column="20" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="925" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__mission__manager_1aa089f474c485d065ed483df68cf2fdfc" prot="private" static="no" mutable="no">
        <type>ros::ServiceClient</type>
        <definition>ros::ServiceClient node_mission_manager::cl_armor_del</definition>
        <argsstring></argsstring>
        <name>cl_armor_del</name>
        <briefdescription>
<para>client for armor discard hypotheses </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="928" column="20" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="928" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__mission__manager_1a6332261f4037f289d557de2a39825751" prot="private" static="no" mutable="no">
        <type>ros::ServiceClient</type>
        <definition>ros::ServiceClient node_mission_manager::cl_armor_backup</definition>
        <argsstring></argsstring>
        <name>cl_armor_backup</name>
        <briefdescription>
<para>client for armo backup request </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="931" column="20" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="931" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__mission__manager_1a37c4b9d24b5427b42591df5c81d0a120" prot="private" static="no" mutable="no">
        <type>ros::ServiceClient</type>
        <definition>ros::ServiceClient node_mission_manager::cl_oracle_solution</definition>
        <argsstring></argsstring>
        <name>cl_oracle_solution</name>
        <briefdescription>
<para>client for requiring the solution to the oracle </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="934" column="20" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="934" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__mission__manager_1a6d83dfd8579fc3bfb624158297d9e59e" prot="private" static="no" mutable="no">
        <type>ros::Subscriber</type>
        <definition>ros::Subscriber node_mission_manager::sub_oracle_hint</definition>
        <argsstring></argsstring>
        <name>sub_oracle_hint</name>
        <briefdescription>
<para>subscription oracle hints </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="937" column="17" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="937" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__mission__manager_1a866bb75bf2609733dd3cb3d4ca2f2381" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int node_mission_manager::mission_status</definition>
        <argsstring></argsstring>
        <name>mission_status</name>
        <initializer>= <ref refid="mission__manager_8cpp_1a2ce63008cc07bc6a6893f29a282a7830" kindref="member">MISSION_STATUS_REPLAN</ref></initializer>
        <briefdescription>
<para>state of the mission </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="940" column="5" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="940" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnode__mission__manager_1aad994f8fbf26d35e540ae1f6476143b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>node_mission_manager::node_mission_manager</definition>
        <argsstring>()</argsstring>
        <name>node_mission_manager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>node class constructor (open all the interfaces) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="138" column="1" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="138" bodyend="164"/>
        <references refid="mission__manager_8cpp_1a497eb2fcadf2e7f5380b65d6edc24bfa" compoundref="mission__manager_8cpp" startline="73">SERVICE_ROSPLAN_PIPELINE</references>
        <references refid="mission__manager_8cpp_1a0b75b3a0b29b223aa6317a043386d4b7" compoundref="mission__manager_8cpp" startline="74">SERVICE_ARMOR_ADD</references>
        <references refid="mission__manager_8cpp_1ae7d7101314e5beb85bb693ff3accc67d" compoundref="mission__manager_8cpp" startline="75">SERVICE_ARMOR_FIND</references>
        <references refid="mission__manager_8cpp_1a0981d5507d2883f2bea4d7d80b55aa42" compoundref="mission__manager_8cpp" startline="76">SERVICE_ARMOR_DEL</references>
        <references refid="mission__manager_8cpp_1afe289e29c3fd9b68631c14b258790100" compoundref="mission__manager_8cpp" startline="77">SERVICE_ARMOR_BACKUP</references>
        <references refid="mission__manager_8cpp_1aa2b57d2ee6e8903abdb592bf5345b706" compoundref="mission__manager_8cpp" startline="79">SERVICE_ORACLE_SOLUTION</references>
        <references refid="mission__manager_8cpp_1a4c242fea9a3b706e637163f8b0eed95c" compoundref="mission__manager_8cpp" startline="44">TLOG</references>
        <references refid="mission__manager_8cpp_1a07769807eae9ad352141589f3e6fcb6b" compoundref="mission__manager_8cpp" startline="85">TOPIC_ORACLE_HINT</references>
        <references refid="classnode__mission__manager_1a2009dd0ef3eafac889a2d088bcff2ec4" compoundref="mission__manager_8cpp" startline="800" endline="838">cbk_oracle_hint</references>
        <references refid="mission__manager_8cpp_1ae01bd6357e88ba5fb5ff1b0f1f91c189" compoundref="mission__manager_8cpp" startline="131">SERVICE_RANDOM_ARM_SWITCH</references>
      </memberdef>
      <memberdef kind="function" id="classnode__mission__manager_1aa2d1e70fe39f8f16bf82bd29393ad3a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void node_mission_manager::spin</definition>
        <argsstring>()</argsstring>
        <name>spin</name>
        <briefdescription>
<para>node working cycle </para>
        </briefdescription>
        <detaileddescription>
<para>This is where the state machine has been implemented. Currently the state machine implements 8 states.</para>
<para>MISSION_STATUS_REPLAN corresponds to the landmark REPLAN: the node calls that landmark via pipeline manager (so, planning and dispatch). Notice that this action is used also as a intermediate step for passing from ASK_ONTOLOGY to SOLVE.</para>
<para>MISSION_STATUS_COLLECT is the second landmark COLLECT: the mission manager makes a plan towards one waypoint (which one is not important) and dispatch a plan making the robot to collect the hint in that position.</para>
<para>MISSION_STATUS_ASK_ONTOLOGY is performed after the COLLECT. Here the mission manager asks to the aRMOR framework if there are consistent hypotheses to propose to the Oracle.</para>
<para>The common cycle is REPLAN -&gt; COLLECT -&gt; ASK_ONTOLOGY. If there are no hypotheses reasy to be proposed to the Oracle, the cycle restarts from COLLECT, and in case all the waypoints have been explored (in this case the <ref refid="classkb__interface" kindref="compound">kb_interface</ref> blocks the loading phase because the landmark COLLECT is no longer applicable) the cycle restarts from REPLAN, then COLLECT and again the same route.</para>
<para>MISSION_STATUS_SOLVE happens when the robot has at least one consistent hypothesis. In this case, the robot tries to move to the center of the environment for proposing its solution to the Oracle. In case the robot has finished the available paths (topologically speaking) the transition issues a intermediate MISSION_STATUS_REPLAN which cleans all the flags for the explored landmarks. The robot moves to the center.</para>
<para>the last status is MISSION_STATUS_ASK_ORACLE in which the mission manager interrogates the Oracle to understand if the solution is the winning one, or it is false. if false, the system restarts from MISSION_STATUS_REPLAN.</para>
<para>Something could go wrong for any reason. There are some well known cases, handled by the policy pointed out until now. But there are many other cases in which, for instance, making a service call doesn&apos;t work, or maybe some expected errors from the planner. For these problematic cases, the state machine implements a recovery policy.</para>
<para>the state MISSION_STATUS_COUNT_FAULT decrements a &quot;fault counter&quot;, which is initialised according to the macro MAX_FAULT_COUNT . The next status is decided according to the mission status which has generated the error. If the counter becomes zero, the machine breaks in status MISSION_STATUS_FAULT, meaning that too many errors have occurred. This strategy is motivated by the fast that sometimes, during the tests, it has been observed that when the workload of the system becomes significant, some service call could fail unexpectedly.</para>
<para><simplesect kind="note"><para>if there are more than one hypothesis, the robot will ask for only one of them, then, if the solution is wrong, the robot will always collect at least one other hint before the other solution proposal. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="229" column="6" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="229" bodyend="754"/>
        <references refid="mission__manager_8cpp_1a14dd36508d648635f33bfe4c3506a879" compoundref="mission__manager_8cpp" startline="93">MAX_FAULT_COUNT</references>
        <references refid="mission__manager_8cpp_1a0c33673244c02e46d7678f7fdd4f80d1" compoundref="mission__manager_8cpp" startline="69">WTLOG</references>
        <references refid="mission__manager_8cpp_1a4c242fea9a3b706e637163f8b0eed95c" compoundref="mission__manager_8cpp" startline="44">TLOG</references>
        <references refid="mission__manager_8cpp_1a8a9bdfb2d1bf4dd388f35c1bfa853892" compoundref="mission__manager_8cpp" startline="68">WAITKEY</references>
        <references refid="mission__manager_8cpp_1a2ce63008cc07bc6a6893f29a282a7830" compoundref="mission__manager_8cpp" startline="107">MISSION_STATUS_REPLAN</references>
        <references refid="classnode__mission__manager_1ac968210cc999a221c57e610812618456" compoundref="mission__manager_8cpp" startline="757" endline="769">make_plan</references>
        <references refid="mission__manager_8cpp_1a5e91c75d46d09daa821765dd8ff29fc8" compoundref="mission__manager_8cpp" startline="98">LANDMARK_REPLAN</references>
        <references refid="mission__manager_8cpp_1a723a84b8e4828b3ba1ad2ccf3e787643" compoundref="mission__manager_8cpp" startline="45">TWARN</references>
        <references refid="mission__manager_8cpp_1a59b71c836719259a2e9b1428ec35504c" compoundref="mission__manager_8cpp" startline="46">TERR</references>
        <references refid="mission__manager_8cpp_1a9b544dbbc5627b739c42aebc62a5d284" compoundref="mission__manager_8cpp" startline="125">MISSION_STATUS_COUNT_FAULT</references>
        <references refid="classnode__mission__manager_1a82c3de859737d4354f8e8b0bd8910c06" compoundref="mission__manager_8cpp" startline="772" endline="784">execute_plan</references>
        <references refid="mission__manager_8cpp_1a463f713aa5573b0d056e6c0922377ba8" compoundref="mission__manager_8cpp" startline="113">MISSION_STATUS_SOLVE</references>
        <references refid="mission__manager_8cpp_1ab09398cdd7a42f5405fae795bc106db5" compoundref="mission__manager_8cpp" startline="110">MISSION_STATUS_COLLECT</references>
        <references refid="mission__manager_8cpp_1a24358e49160550a847f87e20cbae2755" compoundref="mission__manager_8cpp" startline="101">LANDMARK_COLLECT</references>
        <references refid="mission__manager_8cpp_1a929085a001cea3d1edb3a22d907fa302" compoundref="mission__manager_8cpp" startline="119">MISSION_STATUS_ASK_ONTOLOGY</references>
        <references refid="mission__manager_8cpp_1aeba69fa9266c50170be8cd6c57e4f2ef" compoundref="mission__manager_8cpp" startline="104">LANDMARK_SOLVE</references>
        <references refid="mission__manager_8cpp_1a153fe0ac6e7bea9120a086a44783de17" compoundref="mission__manager_8cpp" startline="116">MISSION_STATUS_ASK_ORACLE</references>
        <references refid="cluedo__armor__interface_8cpp_1a9da26ecbc92f8ac7288574c3d05195b2" compoundref="cluedo__armor__interface_8cpp" startline="313" endline="330">DiscardHypothesis</references>
        <references refid="mission__manager_8cpp_1a5fcf8eaaa64fe053728bd760a95eabe2" compoundref="mission__manager_8cpp" startline="70">WTWARN</references>
        <references refid="mission__manager_8cpp_1a86a8f413c460407b21686a0f68c7a11a" compoundref="mission__manager_8cpp" startline="128">MISSION_STATUS_FAULT</references>
        <referencedby refid="mission__manager_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="mission__manager_8cpp" startline="968" endline="984">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnode__mission__manager_1ac968210cc999a221c57e610812618456" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>robocluedo_rosplan_msgs::RosplanPipelineManagerService::Response</type>
        <definition>robocluedo_rosplan_msgs::RosplanPipelineManagerService::Response node_mission_manager::make_plan</definition>
        <argsstring>(int landmark)</argsstring>
        <name>make_plan</name>
        <param>
          <type>int</type>
          <declname>landmark</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>make a plan ready to be executed (and call the service) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="757" column="66" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="757" bodyend="769"/>
        <references refid="classnode__mission__manager_1aad923693ed0d555dbf95e3a7a73f91b7" compoundref="mission__manager_8cpp" startline="853" endline="861">create_planning_request</references>
        <references refid="mission__manager_8cpp_1a723a84b8e4828b3ba1ad2ccf3e787643" compoundref="mission__manager_8cpp" startline="45">TWARN</references>
        <references refid="classnode__mission__manager_1a70e397271e6aa260c8953714cb425abc" compoundref="mission__manager_8cpp" startline="875" endline="896">set_standard_response</references>
        <referencedby refid="classnode__mission__manager_1aa2d1e70fe39f8f16bf82bd29393ad3a2" compoundref="mission__manager_8cpp" startline="229" endline="754">spin</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnode__mission__manager_1a82c3de859737d4354f8e8b0bd8910c06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>robocluedo_rosplan_msgs::RosplanPipelineManagerService::Response</type>
        <definition>robocluedo_rosplan_msgs::RosplanPipelineManagerService::Response node_mission_manager::execute_plan</definition>
        <argsstring>(int landmark)</argsstring>
        <name>execute_plan</name>
        <param>
          <type>int</type>
          <declname>landmark</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>execute the plan </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="772" column="66" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="772" bodyend="784"/>
        <references refid="classnode__mission__manager_1a43a9e09ce2f7b8a1aa7d3604177791c0" compoundref="mission__manager_8cpp" startline="864" endline="872">create_exec_request</references>
        <references refid="mission__manager_8cpp_1a723a84b8e4828b3ba1ad2ccf3e787643" compoundref="mission__manager_8cpp" startline="45">TWARN</references>
        <references refid="classnode__mission__manager_1a70e397271e6aa260c8953714cb425abc" compoundref="mission__manager_8cpp" startline="875" endline="896">set_standard_response</references>
        <referencedby refid="classnode__mission__manager_1aa2d1e70fe39f8f16bf82bd29393ad3a2" compoundref="mission__manager_8cpp" startline="229" endline="754">spin</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnode__mission__manager_1a2009dd0ef3eafac889a2d088bcff2ec4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void node_mission_manager::cbk_oracle_hint</definition>
        <argsstring>(const erl2::ErlOracle::ConstPtr &amp;hint)</argsstring>
        <name>cbk_oracle_hint</name>
        <param>
          <type>const erl2::ErlOracle::ConstPtr &amp;</type>
          <declname>hint</declname>
        </param>
        <briefdescription>
<para>receive a hint from the Oracle and directly store it </para>
        </briefdescription>
        <detaileddescription>
<para>The callback receives a hit from the Oracle (or, in the third part of the RoboCLuedo project) and directly stores it into the aRMOR ontology. This function also checks whether a hint is valid or not before adding it into the database.</para>
<para>The callback could also ask for a backup of the ontology.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hint</parametername>
</parameternamelist>
<parameterdescription>
<para>the hint from the oracle (or from the decoder) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="800" column="6" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="800" bodyend="838"/>
        <references refid="mission__manager_8cpp_1a4c242fea9a3b706e637163f8b0eed95c" compoundref="mission__manager_8cpp" startline="44">TLOG</references>
        <references refid="classnode__mission__manager_1a4ffc224cc6e25730f1e633d8fd9aeeaf" compoundref="mission__manager_8cpp" startline="841" endline="850">is_valid_hint</references>
        <references refid="mission__manager_8cpp_1a723a84b8e4828b3ba1ad2ccf3e787643" compoundref="mission__manager_8cpp" startline="45">TWARN</references>
        <referencedby refid="classnode__mission__manager_1aad994f8fbf26d35e540ae1f6476143b0" compoundref="mission__manager_8cpp" startline="138" endline="164">node_mission_manager</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnode__mission__manager_1a4ffc224cc6e25730f1e633d8fd9aeeaf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool node_mission_manager::is_valid_hint</definition>
        <argsstring>(const erl2::ErlOracle::ConstPtr &amp;hint)</argsstring>
        <name>is_valid_hint</name>
        <param>
          <type>const erl2::ErlOracle::ConstPtr &amp;</type>
          <declname>hint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>check wether the hint is valid or not </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="841" column="6" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="841" bodyend="850"/>
        <referencedby refid="classnode__mission__manager_1a2009dd0ef3eafac889a2d088bcff2ec4" compoundref="mission__manager_8cpp" startline="800" endline="838">cbk_oracle_hint</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnode__mission__manager_1aad923693ed0d555dbf95e3a7a73f91b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>robocluedo_rosplan_msgs::RosplanPipelineManagerService</type>
        <definition>robocluedo_rosplan_msgs::RosplanPipelineManagerService node_mission_manager::create_planning_request</definition>
        <argsstring>(int landmark)</argsstring>
        <name>create_planning_request</name>
        <param>
          <type>int</type>
          <declname>landmark</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>make a planning request without parsing and execution </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="853" column="56" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="853" bodyend="861"/>
        <references refid="classnode__mission__manager_1a7f426607b21ebfade0a55c30ebd55647" compoundref="mission__manager_8cpp" startline="899" endline="908">set_request</references>
        <references refid="classnode__mission__manager_1a70e397271e6aa260c8953714cb425abc" compoundref="mission__manager_8cpp" startline="875" endline="896">set_standard_response</references>
        <referencedby refid="classnode__mission__manager_1ac968210cc999a221c57e610812618456" compoundref="mission__manager_8cpp" startline="757" endline="769">make_plan</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnode__mission__manager_1a43a9e09ce2f7b8a1aa7d3604177791c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>robocluedo_rosplan_msgs::RosplanPipelineManagerService</type>
        <definition>robocluedo_rosplan_msgs::RosplanPipelineManagerService node_mission_manager::create_exec_request</definition>
        <argsstring>(int landmark=-1)</argsstring>
        <name>create_exec_request</name>
        <param>
          <type>int</type>
          <declname>landmark</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>make a planning request without loading and solving </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="864" column="56" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="864" bodyend="872"/>
        <references refid="classnode__mission__manager_1a7f426607b21ebfade0a55c30ebd55647" compoundref="mission__manager_8cpp" startline="899" endline="908">set_request</references>
        <references refid="classnode__mission__manager_1a70e397271e6aa260c8953714cb425abc" compoundref="mission__manager_8cpp" startline="875" endline="896">set_standard_response</references>
        <referencedby refid="classnode__mission__manager_1a82c3de859737d4354f8e8b0bd8910c06" compoundref="mission__manager_8cpp" startline="772" endline="784">execute_plan</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnode__mission__manager_1a70e397271e6aa260c8953714cb425abc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void node_mission_manager::set_standard_response</definition>
        <argsstring>(robocluedo_rosplan_msgs::RosplanPipelineManagerService &amp;cmd, bool failure=false)</argsstring>
        <name>set_standard_response</name>
        <param>
          <type>robocluedo_rosplan_msgs::RosplanPipelineManagerService &amp;</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>failure</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set a standard response for the service planning pipeline request </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="875" column="6" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="875" bodyend="896"/>
        <referencedby refid="classnode__mission__manager_1ac968210cc999a221c57e610812618456" compoundref="mission__manager_8cpp" startline="757" endline="769">make_plan</referencedby>
        <referencedby refid="classnode__mission__manager_1a82c3de859737d4354f8e8b0bd8910c06" compoundref="mission__manager_8cpp" startline="772" endline="784">execute_plan</referencedby>
        <referencedby refid="classnode__mission__manager_1aad923693ed0d555dbf95e3a7a73f91b7" compoundref="mission__manager_8cpp" startline="853" endline="861">create_planning_request</referencedby>
        <referencedby refid="classnode__mission__manager_1a43a9e09ce2f7b8a1aa7d3604177791c0" compoundref="mission__manager_8cpp" startline="864" endline="872">create_exec_request</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnode__mission__manager_1a7f426607b21ebfade0a55c30ebd55647" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void node_mission_manager::set_request</definition>
        <argsstring>(robocluedo_rosplan_msgs::RosplanPipelineManagerService &amp;cmd, bool load, bool solve, bool parse, bool exec, int landmark)</argsstring>
        <name>set_request</name>
        <param>
          <type>robocluedo_rosplan_msgs::RosplanPipelineManagerService &amp;</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>load</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>solve</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>parse</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>exec</declname>
        </param>
        <param>
          <type>int</type>
          <declname>landmark</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>quick set request </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="899" column="6" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="899" bodyend="908"/>
        <referencedby refid="classnode__mission__manager_1aad923693ed0d555dbf95e3a7a73f91b7" compoundref="mission__manager_8cpp" startline="853" endline="861">create_planning_request</referencedby>
        <referencedby refid="classnode__mission__manager_1a43a9e09ce2f7b8a1aa7d3604177791c0" compoundref="mission__manager_8cpp" startline="864" endline="872">create_exec_request</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnode__mission__manager_1a767743411d4ca1ee6c7d7e510949220a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool node_mission_manager::open_client</definition>
        <argsstring>(std::string cl_name, ros::ServiceClient &amp;cl_handle)</argsstring>
        <name>open_client</name>
        <param>
          <type>std::string</type>
          <declname>cl_name</declname>
        </param>
        <param>
          <type>ros::ServiceClient &amp;</type>
          <declname>cl_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>open a client </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="944" column="6" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="944" bodyend="956"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="robocluedo_mission_manager/src/mission_manager.cpp" line="134" column="1" bodyfile="robocluedo_mission_manager/src/mission_manager.cpp" bodystart="133" bodyend="957"/>
    <listofallmembers>
      <member refid="classnode__mission__manager_1a2009dd0ef3eafac889a2d088bcff2ec4" prot="public" virt="non-virtual"><scope>node_mission_manager</scope><name>cbk_oracle_hint</name></member>
      <member refid="classnode__mission__manager_1a591487ef8cb9d2b26e37cd6e55fc0878" prot="private" virt="non-virtual"><scope>node_mission_manager</scope><name>cl_armor_add</name></member>
      <member refid="classnode__mission__manager_1a6332261f4037f289d557de2a39825751" prot="private" virt="non-virtual"><scope>node_mission_manager</scope><name>cl_armor_backup</name></member>
      <member refid="classnode__mission__manager_1aa089f474c485d065ed483df68cf2fdfc" prot="private" virt="non-virtual"><scope>node_mission_manager</scope><name>cl_armor_del</name></member>
      <member refid="classnode__mission__manager_1a8bab762c14e78ed38de8e1f9eff2e2cb" prot="private" virt="non-virtual"><scope>node_mission_manager</scope><name>cl_armor_find</name></member>
      <member refid="classnode__mission__manager_1aaec163f3f0944fe7934ee31003c8f3d0" prot="private" virt="non-virtual"><scope>node_mission_manager</scope><name>cl_auto_manip</name></member>
      <member refid="classnode__mission__manager_1a37c4b9d24b5427b42591df5c81d0a120" prot="private" virt="non-virtual"><scope>node_mission_manager</scope><name>cl_oracle_solution</name></member>
      <member refid="classnode__mission__manager_1a68390e83274eee5e56e2285b9aa93731" prot="private" virt="non-virtual"><scope>node_mission_manager</scope><name>cl_rosplan_pipeline</name></member>
      <member refid="classnode__mission__manager_1a43a9e09ce2f7b8a1aa7d3604177791c0" prot="public" virt="non-virtual"><scope>node_mission_manager</scope><name>create_exec_request</name></member>
      <member refid="classnode__mission__manager_1aad923693ed0d555dbf95e3a7a73f91b7" prot="public" virt="non-virtual"><scope>node_mission_manager</scope><name>create_planning_request</name></member>
      <member refid="classnode__mission__manager_1a82c3de859737d4354f8e8b0bd8910c06" prot="public" virt="non-virtual"><scope>node_mission_manager</scope><name>execute_plan</name></member>
      <member refid="classnode__mission__manager_1a4ffc224cc6e25730f1e633d8fd9aeeaf" prot="public" virt="non-virtual"><scope>node_mission_manager</scope><name>is_valid_hint</name></member>
      <member refid="classnode__mission__manager_1ac968210cc999a221c57e610812618456" prot="public" virt="non-virtual"><scope>node_mission_manager</scope><name>make_plan</name></member>
      <member refid="classnode__mission__manager_1a866bb75bf2609733dd3cb3d4ca2f2381" prot="private" virt="non-virtual"><scope>node_mission_manager</scope><name>mission_status</name></member>
      <member refid="classnode__mission__manager_1ae80c55f44c63fb7cf826fe154234032b" prot="private" virt="non-virtual"><scope>node_mission_manager</scope><name>nh</name></member>
      <member refid="classnode__mission__manager_1aad994f8fbf26d35e540ae1f6476143b0" prot="public" virt="non-virtual"><scope>node_mission_manager</scope><name>node_mission_manager</name></member>
      <member refid="classnode__mission__manager_1a767743411d4ca1ee6c7d7e510949220a" prot="private" virt="non-virtual"><scope>node_mission_manager</scope><name>open_client</name></member>
      <member refid="classnode__mission__manager_1a7f426607b21ebfade0a55c30ebd55647" prot="public" virt="non-virtual"><scope>node_mission_manager</scope><name>set_request</name></member>
      <member refid="classnode__mission__manager_1a70e397271e6aa260c8953714cb425abc" prot="public" virt="non-virtual"><scope>node_mission_manager</scope><name>set_standard_response</name></member>
      <member refid="classnode__mission__manager_1aa2d1e70fe39f8f16bf82bd29393ad3a2" prot="public" virt="non-virtual"><scope>node_mission_manager</scope><name>spin</name></member>
      <member refid="classnode__mission__manager_1a6d83dfd8579fc3bfb624158297d9e59e" prot="private" virt="non-virtual"><scope>node_mission_manager</scope><name>sub_oracle_hint</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
