<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="python-doc-official_8md_8txt" kind="file" language="C++">
    <compoundname>python-doc-official.md.txt</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="python-doc-official_8md_8txt_1a2d35c92f7478dc84ac9cebd591fe9582" prot="public" static="no" mutable="no">
        <type>python Example Google style docstrings This module demonstrates <ref refid="rest-directives_8md_8txt_1adb81e9bf9520066dfb32d5594e56e029" kindref="member">documentation</ref> as specified by <ref refid="cpp-docs-template_8md_8txt_1a20ff6362005f038a891568b43d660996" kindref="member">the</ref> Google Python Style Guide _ Docstrings may extend <ref refid="erl2-oracle-user-manual_8md_8txt_1adb5ee131f66bbecd3c9667dc4e450d5c" kindref="member">over</ref> multiple lines Sections are created with <ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref> section header <ref refid="update-navigation-manager_8md_8txt_1a15b7813e77b47a47a7537cf54bcdbc8a" kindref="member">and</ref> <ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref> colon followed by <ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref> block of indented text</type>
        <definition>python Example Google style docstrings This module demonstrates documentation as specified by the Google Python Style Guide _ Docstrings may extend over multiple lines Sections are created with a section header and a colon followed by a block of indented text Example</definition>
        <argsstring></argsstring>
        <name>Example</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_build/html/_sources/_docs/python-doc-official.md.txt" line="12" column="1" bodyfile="_build/html/_sources/_docs/python-doc-official.md.txt" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="python-doc-official_8md_8txt_1af6d6c90dde76b97b1d912d9f6fa97218" prot="public" static="no" mutable="no">
        <type>python <ref refid="python-doc-official_8md_8txt_1a2d35c92f7478dc84ac9cebd591fe9582" kindref="member">Example</ref> Google style docstrings This module demonstrates <ref refid="rest-directives_8md_8txt_1adb81e9bf9520066dfb32d5594e56e029" kindref="member">documentation</ref> as specified by <ref refid="cpp-docs-template_8md_8txt_1a20ff6362005f038a891568b43d660996" kindref="member">the</ref> Google Python Style Guide _ Docstrings may extend <ref refid="erl2-oracle-user-manual_8md_8txt_1adb5ee131f66bbecd3c9667dc4e450d5c" kindref="member">over</ref> multiple lines Sections are created with <ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref> section header <ref refid="update-navigation-manager_8md_8txt_1a15b7813e77b47a47a7537cf54bcdbc8a" kindref="member">and</ref> <ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref> colon followed by <ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref> block of indented text including literal blocks::python example_google py Section breaks are created by resuming unindented text Section breaks are also implicitly created anytime <ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref> new section starts</type>
        <definition>python Example Google style docstrings This module demonstrates documentation as specified by the Google Python Style Guide _ Docstrings may extend over multiple lines Sections are created with a section header and a colon followed by a block of indented text including literal blocks:: python example_google py Section breaks are created by resuming unindented text Section breaks are also implicitly created anytime a new section starts Attributes</definition>
        <argsstring></argsstring>
        <name>Attributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_build/html/_sources/_docs/python-doc-official.md.txt" line="22" column="1" bodyfile="_build/html/_sources/_docs/python-doc-official.md.txt" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="python-doc-official_8md_8txt_1af34b59e31bf6f3d06a8cef9aab7fde7c" prot="public" static="no" mutable="no">
        <type>python <ref refid="python-doc-official_8md_8txt_1a2d35c92f7478dc84ac9cebd591fe9582" kindref="member">Example</ref> Google style docstrings This module demonstrates <ref refid="rest-directives_8md_8txt_1adb81e9bf9520066dfb32d5594e56e029" kindref="member">documentation</ref> as specified by <ref refid="cpp-docs-template_8md_8txt_1a20ff6362005f038a891568b43d660996" kindref="member">the</ref> Google Python Style Guide _ Docstrings may extend <ref refid="erl2-oracle-user-manual_8md_8txt_1adb5ee131f66bbecd3c9667dc4e450d5c" kindref="member">over</ref> multiple lines Sections are created with <ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref> section header <ref refid="update-navigation-manager_8md_8txt_1a15b7813e77b47a47a7537cf54bcdbc8a" kindref="member">and</ref> <ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref> colon followed by <ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref> block of indented text including literal blocks::python example_google py Section breaks are created by resuming unindented text Section breaks are also implicitly created anytime <ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref> new section starts or in an docstring immediately <ref refid="robocluedo-hunter-user-manual_8md_8txt_1a82ebe9e7c4092182fd5935150921610c" kindref="member">following</ref> <ref refid="cpp-docs-template_8md_8txt_1a20ff6362005f038a891568b43d660996" kindref="member">the</ref> variable Either form is</type>
        <definition>python Example Google style docstrings This module demonstrates documentation as specified by the Google Python Style Guide _ Docstrings may extend over multiple lines Sections are created with a section header and a colon followed by a block of indented text including literal blocks:: python example_google py Section breaks are created by resuming unindented text Section breaks are also implicitly created anytime a new section starts or in an docstring immediately following the variable Either form is acceptable</definition>
        <argsstring></argsstring>
        <name>acceptable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_build/html/_sources/_docs/python-doc-official.md.txt" line="27" column="24" bodyfile="_build/html/_sources/_docs/python-doc-official.md.txt" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="python-doc-official_8md_8txt_1a357ae02e20f48129e887d67b92a8a667" prot="public" static="no" mutable="no">
        <type>python <ref refid="python-doc-official_8md_8txt_1a2d35c92f7478dc84ac9cebd591fe9582" kindref="member">Example</ref> Google style docstrings This module demonstrates <ref refid="rest-directives_8md_8txt_1adb81e9bf9520066dfb32d5594e56e029" kindref="member">documentation</ref> as specified by <ref refid="cpp-docs-template_8md_8txt_1a20ff6362005f038a891568b43d660996" kindref="member">the</ref> Google Python Style Guide _ Docstrings may extend <ref refid="erl2-oracle-user-manual_8md_8txt_1adb5ee131f66bbecd3c9667dc4e450d5c" kindref="member">over</ref> multiple lines Sections are created with <ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref> section header <ref refid="update-navigation-manager_8md_8txt_1a15b7813e77b47a47a7537cf54bcdbc8a" kindref="member">and</ref> <ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref> colon followed by <ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref> block of indented text including literal blocks::python example_google py Section breaks are created by resuming unindented text Section breaks are also implicitly created anytime <ref refid="erl2-oracle-user-manual_8md_8txt_1ad06afa07b0e26dd80f556e318c747644" kindref="member">a</ref> new section starts or in an docstring immediately <ref refid="robocluedo-hunter-user-manual_8md_8txt_1a82ebe9e7c4092182fd5935150921610c" kindref="member">following</ref> <ref refid="cpp-docs-template_8md_8txt_1a20ff6362005f038a891568b43d660996" kindref="member">the</ref> variable Either form is but <ref refid="cpp-docs-template_8md_8txt_1a20ff6362005f038a891568b43d660996" kindref="member">the</ref> two should not be mixed Choose one convention <ref refid="erl3-oracle-user-manual_8md_8txt_1af02cd2ec07331037df3b999a6221822b" kindref="member">to</ref> document module <ref refid="update-navigation-manager_8md_8txt_1a3b06c43f94b23ef975c39f3c6475e636" kindref="member">level</ref> variables <ref refid="update-navigation-manager_8md_8txt_1a15b7813e77b47a47a7537cf54bcdbc8a" kindref="member">and</ref> be consistent with <ref refid="test-the-project_8md_8txt_1ae9880850b92fe7594f93a01193dc189d" kindref="member">it</ref></type>
        <definition>python Example Google style docstrings This module demonstrates documentation as specified by the Google Python Style Guide _ Docstrings may extend over multiple lines Sections are created with a section header and a colon followed by a block of indented text including literal blocks:: python example_google py Section breaks are created by resuming unindented text Section breaks are also implicitly created anytime a new section starts or in an docstring immediately following the variable Either form is but the two should not be mixed Choose one convention to document module level variables and be consistent with it Todo</definition>
        <argsstring></argsstring>
        <name>Todo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_build/html/_sources/_docs/python-doc-official.md.txt" line="31" column="1" bodyfile="_build/html/_sources/_docs/python-doc-official.md.txt" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>Python<sp/>Google<sp/>Docstring<sp/>--<sp/>an<sp/>official<sp/>example</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal">```python</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>-*-<sp/>coding:<sp/>utf-8<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="stringliteral">&quot;Example<sp/>Google<sp/>style<sp/>docstrings.</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral">This<sp/>module<sp/>demonstrates<sp/>documentation<sp/>as<sp/>specified<sp/>by<sp/>the<sp/>`Google<sp/>Python</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">Style<sp/>Guide`_.<sp/>Docstrings<sp/>may<sp/>extend<sp/>over<sp/>multiple<sp/>lines.<sp/>Sections<sp/>are<sp/>created</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral">with<sp/>a<sp/>section<sp/>header<sp/>and<sp/>a<sp/>colon<sp/>followed<sp/>by<sp/>a<sp/>block<sp/>of<sp/>indented<sp/>text.</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral">Example:</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Examples<sp/>can<sp/>be<sp/>given<sp/>using<sp/>either<sp/>the<sp/>``Example``<sp/>or<sp/>``Examples``</highlight></codeline>
<codeline lineno="14" refid="python-doc-official_8md_8txt_1a2d35c92f7478dc84ac9cebd591fe9582" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>sections.<sp/>Sections<sp/>support<sp/>any<sp/>reStructuredText<sp/>formatting,<sp/>including</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>literal<sp/>blocks::</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$<sp/>python<sp/>example_google.py</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral">Section<sp/>breaks<sp/>are<sp/>created<sp/>by<sp/>resuming<sp/>unindented<sp/>text.<sp/>Section<sp/>breaks</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral">are<sp/>also<sp/>implicitly<sp/>created<sp/>anytime<sp/>a<sp/>new<sp/>section<sp/>starts.</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">Attributes:</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>module_level_variable1<sp/>(int):<sp/>Module<sp/>level<sp/>variables<sp/>may<sp/>be<sp/>documented<sp/>in</highlight></codeline>
<codeline lineno="24" refid="python-doc-official_8md_8txt_1af6d6c90dde76b97b1d912d9f6fa97218" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>either<sp/>the<sp/>``Attributes``<sp/>section<sp/>of<sp/>the<sp/>module<sp/>docstring,<sp/>or<sp/>in<sp/>an</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inline<sp/>docstring<sp/>immediately<sp/>following<sp/>the<sp/>variable.</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="27" refid="python-doc-official_8md_8txt_1af34b59e31bf6f3d06a8cef9aab7fde7c" refkind="member"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Either<sp/>form<sp/>is<sp/>acceptable,<sp/>but<sp/>the<sp/>two<sp/>should<sp/>not<sp/>be<sp/>mixed.<sp/>Choose</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>one<sp/>convention<sp/>to<sp/>document<sp/>module<sp/>level<sp/>variables<sp/>and<sp/>be<sp/>consistent</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>it.</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral">Todo:</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>*<sp/>For<sp/>module<sp/>TODOs</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>*<sp/>You<sp/>have<sp/>to<sp/>also<sp/>use<sp/>``sphinx.ext.todo``<sp/>extension</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral">..<sp/>_Google<sp/>Python<sp/>Style<sp/>Guide:</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/>http://google.github.io/styleguide/pyguide.html</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral">&quot;</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">module_level_variable1<sp/>=<sp/>12345</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">module_level_variable2<sp/>=<sp/>98765</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="stringliteral">&quot;int:<sp/>Module<sp/>level<sp/>variable<sp/>documented<sp/>inline.</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral">The<sp/>docstring<sp/>may<sp/>span<sp/>multiple<sp/>lines.<sp/>The<sp/>type<sp/>may<sp/>optionally<sp/>be<sp/>specified</highlight></codeline>
<codeline lineno="46" refid="python-doc-official_8md_8txt_1a357ae02e20f48129e887d67b92a8a667" refkind="member"><highlight class="stringliteral">on<sp/>the<sp/>first<sp/>line,<sp/>separated<sp/>by<sp/>a<sp/>colon.</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral">&quot;</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">def<sp/>function_with_types_in_docstring(param1,<sp/>param2):</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="stringliteral">&quot;Example<sp/>function<sp/>with<sp/>types<sp/>documented<sp/>in<sp/>the<sp/>docstring.</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>`PEP<sp/>484`_<sp/>type<sp/>annotations<sp/>are<sp/>supported.<sp/>If<sp/>attribute,<sp/>parameter,<sp/>and</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>return<sp/>types<sp/>are<sp/>annotated<sp/>according<sp/>to<sp/>`PEP<sp/>484`_,<sp/>they<sp/>do<sp/>not<sp/>need<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>included<sp/>in<sp/>the<sp/>docstring:</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param1<sp/>(int):<sp/>The<sp/>first<sp/>parameter.</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param2<sp/>(str):<sp/>The<sp/>second<sp/>parameter.</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool:<sp/>The<sp/>return<sp/>value.<sp/>True<sp/>for<sp/>success,<sp/>False<sp/>otherwise.</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>_PEP<sp/>484:</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>https://www.python.org/dev/peps/pep-0484/</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">def<sp/>function_with_pep484_type_annotations(param1:<sp/>int,<sp/>param2:<sp/>str)<sp/>-&gt;<sp/>bool:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="stringliteral">&quot;Example<sp/>function<sp/>with<sp/>PEP<sp/>484<sp/>type<sp/>annotations.</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param1:<sp/>The<sp/>first<sp/>parameter.</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param2:<sp/>The<sp/>second<sp/>parameter.</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>return<sp/>value.<sp/>True<sp/>for<sp/>success,<sp/>False<sp/>otherwise.</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">def<sp/>module_level_function(param1,<sp/>param2=None,<sp/>*<ref refid="namespacerosfacedetect_1acd872233149ff2374b8b631a0f1d2e67" kindref="member">args</ref>,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>an<sp/>example<sp/>of<sp/>a<sp/>module<sp/>level<sp/>function.</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Function<sp/>parameters<sp/>should<sp/>be<sp/>documented<sp/>in<sp/>the<sp/>``Args``<sp/>section.<sp/>The<sp/>name</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>of<sp/>each<sp/>parameter<sp/>is<sp/>required.<sp/>The<sp/>type<sp/>and<sp/>description<sp/>of<sp/>each<sp/>parameter</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>is<sp/>optional,<sp/>but<sp/>should<sp/>be<sp/>included<sp/>if<sp/>not<sp/>obvious.</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>If<sp/>\*args<sp/>or<sp/>\*\*kwargs<sp/>are<sp/>accepted,</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>they<sp/>should<sp/>be<sp/>listed<sp/>as<sp/>``*args``<sp/>and<sp/>``**kwargs``.</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>format<sp/>for<sp/>a<sp/>parameter<sp/>is::</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>(type):<sp/>description</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>description<sp/>may<sp/>span<sp/>multiple<sp/>lines.<sp/>Following</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>should<sp/>be<sp/>indented.<sp/>The<sp/>&quot;</highlight><highlight class="normal">(<ref refid="erl2-oracle-user-manual_8md_8txt_1a09d0680988bbc4127cbfa7c02b57c0b8" kindref="member">type</ref>)</highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>optional.</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Multiple<sp/>paragraphs<sp/>are<sp/>supported<sp/>in<sp/>parameter</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptions.</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param1<sp/>(int):<sp/>The<sp/>first<sp/>parameter.</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param2<sp/>(:obj:`str`,<sp/>optional):<sp/>The<sp/>second<sp/>parameter.<sp/>Defaults<sp/>to<sp/>None.</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Second<sp/>line<sp/>of<sp/>description<sp/>should<sp/>be<sp/>indented.</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*args:<sp/>Variable<sp/>length<sp/>argument<sp/>list.</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**kwargs:<sp/>Arbitrary<sp/>keyword<sp/>arguments.</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool:<sp/>True<sp/>if<sp/>successful,<sp/>False<sp/>otherwise.</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>return<sp/>type<sp/>is<sp/>optional<sp/>and<sp/>may<sp/>be<sp/>specified<sp/>at<sp/>the<sp/>beginning<sp/>of</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>``Returns``<sp/>section<sp/>followed<sp/>by<sp/>a<sp/>colon.</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>``Returns``<sp/>section<sp/>may<sp/>span<sp/>multiple<sp/>lines<sp/>and<sp/>paragraphs.</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Following<sp/>lines<sp/>should<sp/>be<sp/>indented<sp/>to<sp/>match<sp/>the<sp/>first<sp/>line.</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>``Returns``<sp/>section<sp/>supports<sp/>any<sp/>reStructuredText<sp/>formatting,</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>including<sp/>literal<sp/>blocks::</highlight></codeline>
<codeline lineno="120"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;param1&apos;:<sp/>param1,</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;param2&apos;:<sp/>param2</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AttributeError:<sp/>The<sp/>``Raises``<sp/>section<sp/>is<sp/>a<sp/>list<sp/>of<sp/>all<sp/>exceptions</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>are<sp/>relevant<sp/>to<sp/>the<sp/>interface.</highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValueError:<sp/>If<sp/>`param2`<sp/>is<sp/>equal<sp/>to<sp/>`param1`.</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="examples__tools_8md_8txt_1ab7ba283e106143c7b2f5dbb2b4147982" kindref="member">if</ref><sp/>param1<sp/>==<sp/>param2:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>ValueError(</highlight><highlight class="stringliteral">&apos;param1<sp/>may<sp/>not<sp/>be<sp/>equal<sp/>to<sp/>param2&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="examples__tools_8md_8txt_1a9717e7bbecb906637e86cef6da3d83c2" kindref="member">return</ref><sp/>True</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">def<sp/>example_generator(n):</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="stringliteral">&quot;Generators<sp/>have<sp/>a<sp/>``Yields``<sp/>section<sp/>instead<sp/>of<sp/>a<sp/>``Returns``<sp/>section.</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>(int):<sp/>The<sp/>upper<sp/>limit<sp/>of<sp/>the<sp/>range<sp/>to<sp/>generate,<sp/>from<sp/>0<sp/>to<sp/>`n`<sp/>-<sp/>1.</highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Yields:</highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int:<sp/>The<sp/>next<sp/>number<sp/>in<sp/>the<sp/>range<sp/>of<sp/>0<sp/>to<sp/>`n`<sp/>-<sp/>1.</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Examples:</highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Examples<sp/>should<sp/>be<sp/>written<sp/>in<sp/>doctest<sp/>format,<sp/>and<sp/>should<sp/>illustrate<sp/>how</highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>use<sp/>the<sp/>function.</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>print([i<sp/>for<sp/>i<sp/>in<sp/>example_generator(4)])</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0,<sp/>1,<sp/>2,<sp/>3]</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rosplan-kb_8md_8txt_1a70b081480885bd2f2b09ae4e492abc6c" kindref="member">for</ref><sp/>i<sp/>in<sp/>range(n):</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/>i</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><ref refid="classclass" kindref="compound">class</ref><sp/>ExampleError(Exception):</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="stringliteral">&quot;Exceptions<sp/>are<sp/>documented<sp/>in<sp/>the<sp/>same<sp/>way<sp/>as<sp/>classes.</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>__init__<sp/>method<sp/>may<sp/>be<sp/>documented<sp/>in<sp/>either<sp/>the<sp/>class<sp/>level</highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>docstring,<sp/>or<sp/>as<sp/>a<sp/>docstring<sp/>on<sp/>the<sp/>__init__<sp/>method<sp/>itself.</highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Either<sp/>form<sp/>is<sp/>acceptable,<sp/>but<sp/>the<sp/>two<sp/>should<sp/>not<sp/>be<sp/>mixed.<sp/>Choose<sp/>one</highlight></codeline>
<codeline lineno="165"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>convention<sp/>to<sp/>document<sp/>the<sp/>__init__<sp/>method<sp/>and<sp/>be<sp/>consistent<sp/>with<sp/>it.</highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Note:</highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Do<sp/>not<sp/>include<sp/>the<sp/>`self`<sp/>parameter<sp/>in<sp/>the<sp/>``Args``<sp/>section.</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>(str):<sp/>Human<sp/>readable<sp/>string<sp/>describing<sp/>the<sp/>exception.</highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>(:obj:`int`,<sp/>optional):<sp/>Error<sp/>code.</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Attributes:</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>(str):<sp/>Human<sp/>readable<sp/>string<sp/>describing<sp/>the<sp/>exception.</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>(int):<sp/>Exception<sp/>error<sp/>code.</highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>msg,<sp/><ref refid="examples__tools_8md_8txt_1a9e62a1e988e0d3599a0e1f28d21142d8" kindref="member">code</ref>):</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.msg<sp/>=<sp/>msg</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="examples__tools_8md_8txt_1a9e62a1e988e0d3599a0e1f28d21142d8" kindref="member">code</ref><sp/>=<sp/><ref refid="examples__tools_8md_8txt_1a9e62a1e988e0d3599a0e1f28d21142d8" kindref="member">code</ref></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><ref refid="classclass" kindref="compound">class</ref><sp/>ExampleClass(<ref refid="erl2-oracle-user-manual_8md_8txt_1addab1b9086873b018521634dbdb58bb4" kindref="member">object</ref>):</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="stringliteral">&quot;The<sp/>summary<sp/>line<sp/>for<sp/>a<sp/>class<sp/>docstring<sp/>should<sp/>fit<sp/>on<sp/>one<sp/>line.</highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>If<sp/>the<sp/>class<sp/>has<sp/>public<sp/>attributes,<sp/>they<sp/>may<sp/>be<sp/>documented<sp/>here</highlight></codeline>
<codeline lineno="189"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>in<sp/>an<sp/>``Attributes``<sp/>section<sp/>and<sp/>follow<sp/>the<sp/>same<sp/>formatting<sp/>as<sp/>a</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function&apos;s<sp/>``Args``<sp/>section.<sp/>Alternatively,<sp/>attributes<sp/>may<sp/>be<sp/>documented</highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>inline<sp/>with<sp/>the<sp/>attribute&apos;s<sp/>declaration<sp/>(see<sp/>__init__<sp/>method<sp/>below).</highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Properties<sp/>created<sp/>with<sp/>the<sp/>``@property``<sp/>decorator<sp/>should<sp/>be<sp/>documented</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>in<sp/>the<sp/>property&apos;s<sp/>getter<sp/>method.</highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Attributes:</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attr1<sp/>(str):<sp/>Description<sp/>of<sp/>`attr1`.</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attr2<sp/>(:obj:`int`,<sp/>optional):<sp/>Description<sp/>of<sp/>`attr2`.</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>param1,<sp/>param2,<sp/>param3):</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="stringliteral">&quot;Example<sp/>of<sp/>docstring<sp/>on<sp/>the<sp/>__init__<sp/>method.</highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>__init__<sp/>method<sp/>may<sp/>be<sp/>documented<sp/>in<sp/>either<sp/>the<sp/>class<sp/>level</highlight></codeline>
<codeline lineno="206"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>docstring,<sp/>or<sp/>as<sp/>a<sp/>docstring<sp/>on<sp/>the<sp/>__init__<sp/>method<sp/>itself.</highlight></codeline>
<codeline lineno="207"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="208"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Either<sp/>form<sp/>is<sp/>acceptable,<sp/>but<sp/>the<sp/>two<sp/>should<sp/>not<sp/>be<sp/>mixed.<sp/>Choose<sp/>one</highlight></codeline>
<codeline lineno="209"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convention<sp/>to<sp/>document<sp/>the<sp/>__init__<sp/>method<sp/>and<sp/>be<sp/>consistent<sp/>with<sp/>it.</highlight></codeline>
<codeline lineno="210"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="211"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Note:</highlight></codeline>
<codeline lineno="212"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Do<sp/>not<sp/>include<sp/>the<sp/>`self`<sp/>parameter<sp/>in<sp/>the<sp/>``Args``<sp/>section.</highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param1<sp/>(str):<sp/>Description<sp/>of<sp/>`param1`.</highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param2<sp/>(:obj:`int`,<sp/>optional):<sp/>Description<sp/>of<sp/>`param2`.<sp/>Multiple</highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>are<sp/>supported.</highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param3<sp/>(:obj:`list`<sp/>of<sp/>:obj:`str`):<sp/>Description<sp/>of<sp/>`param3`.</highlight></codeline>
<codeline lineno="219"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.attr1<sp/>=<sp/>param1</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.attr2<sp/>=<sp/>param2</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.attr3<sp/>=<sp/>param3<sp/><sp/>#:<sp/>Doc<sp/>comment<sp/>*inline*<sp/>with<sp/>attribute</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#:<sp/>list<sp/>of<sp/>str:<sp/>Doc<sp/>comment<sp/>*before*<sp/>attribute,<sp/>with<sp/><ref refid="erl2-oracle-user-manual_8md_8txt_1a09d0680988bbc4127cbfa7c02b57c0b8" kindref="member">type</ref><sp/>specified</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.attr4<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;attr4&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.attr5<sp/>=<sp/>None</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="stringliteral">&quot;str:<sp/>Docstring<sp/>*after*<sp/>attribute,<sp/>with<sp/>type<sp/>specified.&quot;</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>readonly_property(self):</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="stringliteral">&quot;str:<sp/>Properties<sp/>should<sp/>be<sp/>documented<sp/>in<sp/>their<sp/>getter<sp/>method.&quot;</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="examples__tools_8md_8txt_1a9717e7bbecb906637e86cef6da3d83c2" kindref="member">return</ref><sp/></highlight><highlight class="stringliteral">&apos;readonly_property&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>@property</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>readwrite_property(self):</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="stringliteral">&quot;:obj:`list`<sp/>of<sp/>:obj:`str`:<sp/>Properties<sp/>with<sp/>both<sp/>a<sp/>getter<sp/>and<sp/>setter</highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>only<sp/>be<sp/>documented<sp/>in<sp/>their<sp/>getter<sp/>method.</highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>setter<sp/>method<sp/>contains<sp/>notable<sp/>behavior,<sp/>it<sp/>should<sp/>be</highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mentioned<sp/>here.</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="examples__tools_8md_8txt_1a9717e7bbecb906637e86cef6da3d83c2" kindref="member">return</ref><sp/>[</highlight><highlight class="stringliteral">&apos;readwrite_property&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>@readwrite_property.setter</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>readwrite_property(self,<sp/>value):</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>example_method(self,<sp/>param1,<sp/>param2):</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="stringliteral">&quot;Class<sp/>methods<sp/>are<sp/>similar<sp/>to<sp/>regular<sp/>functions.</highlight></codeline>
<codeline lineno="252"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="253"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Note:</highlight></codeline>
<codeline lineno="254"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Do<sp/>not<sp/>include<sp/>the<sp/>`self`<sp/>parameter<sp/>in<sp/>the<sp/>``Args``<sp/>section.</highlight></codeline>
<codeline lineno="255"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="256"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="257"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param1:<sp/>The<sp/>first<sp/>parameter.</highlight></codeline>
<codeline lineno="258"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param2:<sp/>The<sp/>second<sp/>parameter.</highlight></codeline>
<codeline lineno="259"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="260"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="261"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>True<sp/>if<sp/>successful,<sp/>False<sp/>otherwise.</highlight></codeline>
<codeline lineno="262"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="263"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="examples__tools_8md_8txt_1a9717e7bbecb906637e86cef6da3d83c2" kindref="member">return</ref><sp/>True</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>__special__(self):</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="stringliteral">&quot;By<sp/>default<sp/>special<sp/>members<sp/>with<sp/>docstrings<sp/>are<sp/>not<sp/>included.</highlight></codeline>
<codeline lineno="268"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="269"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Special<sp/>members<sp/>are<sp/>any<sp/>methods<sp/>or<sp/>attributes<sp/>that<sp/>start<sp/>with<sp/>and</highlight></codeline>
<codeline lineno="270"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>with<sp/>a<sp/>double<sp/>underscore.<sp/>Any<sp/>special<sp/>member<sp/>with<sp/>a<sp/>docstring</highlight></codeline>
<codeline lineno="271"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>be<sp/>included<sp/>in<sp/>the<sp/>output,<sp/>if</highlight></codeline>
<codeline lineno="272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``napoleon_include_special_with_doc``<sp/>is<sp/>set<sp/>to<sp/>True.</highlight></codeline>
<codeline lineno="273"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="274"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>behavior<sp/>can<sp/>be<sp/>enabled<sp/>by<sp/>changing<sp/>the<sp/>following<sp/>setting<sp/>in</highlight></codeline>
<codeline lineno="275"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sphinx&apos;s<sp/>conf.py::</highlight></codeline>
<codeline lineno="276"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>napoleon_include_special_with_doc<sp/>=<sp/>True</highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="279"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>__special_without_docstring__(self):</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>_private(self):</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="stringliteral">&quot;By<sp/>default<sp/>private<sp/>members<sp/>are<sp/>not<sp/>included.</highlight></codeline>
<codeline lineno="287"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="288"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Private<sp/>members<sp/>are<sp/>any<sp/>methods<sp/>or<sp/>attributes<sp/>that<sp/>start<sp/>with<sp/>an</highlight></codeline>
<codeline lineno="289"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>underscore<sp/>and<sp/>are<sp/>*not*<sp/>special.<sp/>By<sp/>default<sp/>they<sp/>are<sp/>not<sp/>included</highlight></codeline>
<codeline lineno="290"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>output.</highlight></codeline>
<codeline lineno="291"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="292"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>behavior<sp/>can<sp/>be<sp/>changed<sp/>such<sp/>that<sp/>private<sp/>members<sp/>*are*<sp/>included</highlight></codeline>
<codeline lineno="293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>changing<sp/>the<sp/>following<sp/>setting<sp/>in<sp/>Sphinx&apos;s<sp/>conf.py::</highlight></codeline>
<codeline lineno="294"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="295"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>napoleon_include_private_with_doc<sp/>=<sp/>True</highlight></codeline>
<codeline lineno="296"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="297"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>_private_without_docstring(self):</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline lineno="302"><highlight class="normal">```</highlight></codeline>
    </programlisting>
    <location file="_build/html/_sources/_docs/python-doc-official.md.txt"/>
  </compounddef>
</doxygen>
