<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="directed_8py" kind="file" language="Python">
    <compoundname>directed.py</compoundname>
    <innerclass refid="classdirected_1_1_test_directed" prot="public">directed::TestDirected</innerclass>
    <innernamespace refid="namespacedirected">directed</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacedirected" refkind="compound"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>print_function</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rostest</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospy</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>unittest</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sensor_msgs.msg</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>image_geometry<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>PinholeCameraModel,<sp/>StereoCameraModel</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="classdirected_1_1_test_directed" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdirected_1_1_test_directed" kindref="compound">TestDirected</ref>(unittest.TestCase):</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="classdirected_1_1_test_directed_1ab7c337e0c893f0fe575501813978dedf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdirected_1_1_test_directed_1ab7c337e0c893f0fe575501813978dedf" kindref="member">setUp</ref>(self):</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classdirected_1_1_test_directed_1a42258bd895df4a9710029a9063640634" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdirected_1_1_test_directed_1a42258bd895df4a9710029a9063640634" kindref="member">test_monocular</ref>(self):</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci<sp/>=<sp/>sensor_msgs.msg.CameraInfo()</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci.width<sp/>=<sp/>640</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci.height<sp/>=<sp/>480</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacearuco_1a2b40362ac4f2994c0e05ca7bcb0e93f0" kindref="member">print</ref>(ci)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cam<sp/>=<sp/><ref refid="classimage__geometry_1_1_pinhole_camera_model" kindref="compound">PinholeCameraModel</ref>()</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cam.fromCameraInfo(ci)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacearuco_1a2b40362ac4f2994c0e05ca7bcb0e93f0" kindref="member">print</ref>(cam.rectifyPoint((0,<sp/>0)))</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacearuco_1a2b40362ac4f2994c0e05ca7bcb0e93f0" kindref="member">print</ref>(cam.project3dToPixel((0,0,0)))</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classdirected_1_1_test_directed_1a61baa0d712e402f8fb2d9f263dce76a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdirected_1_1_test_directed_1a61baa0d712e402f8fb2d9f263dce76a1" kindref="member">test_stereo</ref>(self):</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmsg<sp/>=<sp/>sensor_msgs.msg.CameraInfo()</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmsg<sp/>=<sp/>sensor_msgs.msg.CameraInfo()</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>m<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(lmsg,<sp/>rmsg):</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.width<sp/>=<sp/>640</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.height<sp/>=<sp/>480</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>These<sp/>parameters<sp/>taken<sp/>from<sp/>a<sp/>real<sp/>camera<sp/>calibration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmsg.D<sp/>=<sp/><sp/>[-0.363528858080088,<sp/>0.16117037733986861,<sp/>-8.1109585007538829e-05,<sp/>-0.00044776712298447841,<sp/>0.0]</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmsg.K<sp/>=<sp/><sp/>[430.15433020105519,<sp/>0.0,<sp/>311.71339830549732,<sp/>0.0,<sp/>430.60920415473657,<sp/>221.06824942698509,<sp/>0.0,<sp/>0.0,<sp/>1.0]</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmsg.R<sp/>=<sp/><sp/>[0.99806560714807102,<sp/>0.0068562422224214027,<sp/>0.061790256276695904,<sp/>-0.0067522959054715113,<sp/>0.99997541519165112,<sp/>-0.0018909025066874664,<sp/>-0.061801701660692349,<sp/>0.0014700186639396652,<sp/>0.99808736527268516]</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmsg.P<sp/>=<sp/><sp/>[295.53402059708782,<sp/>0.0,<sp/>285.55760765075684,<sp/>0.0,<sp/>0.0,<sp/>295.53402059708782,<sp/>223.29617881774902,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>1.0,<sp/>0.0]</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmsg.D<sp/>=<sp/><sp/>[-0.3560641041112021,<sp/>0.15647260261553159,<sp/>-0.00016442960757099968,<sp/>-0.00093175810713916221]</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmsg.K<sp/>=<sp/><sp/>[428.38163131344191,<sp/>0.0,<sp/>327.95553847249192,<sp/>0.0,<sp/>428.85728580588329,<sp/>217.54828640915309,<sp/>0.0,<sp/>0.0,<sp/>1.0]</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmsg.R<sp/>=<sp/><sp/>[0.9982082576219119,<sp/>0.0067433328293516528,<sp/>0.059454199832973849,<sp/>-0.0068433268864187356,<sp/>0.99997549128605434,<sp/>0.0014784127772287513,<sp/>-0.059442773257581252,<sp/>-0.0018826283666309878,<sp/>0.99822993965212292]</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmsg.P<sp/>=<sp/><sp/>[295.53402059708782,<sp/>0.0,<sp/>285.55760765075684,<sp/>-26.507895206214123,<sp/>0.0,<sp/>295.53402059708782,<sp/>223.29617881774902,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>1.0,<sp/>0.0]</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cam<sp/>=<sp/><ref refid="classimage__geometry_1_1_stereo_camera_model" kindref="compound">StereoCameraModel</ref>()</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cam.fromCameraInfo(lmsg,<sp/>rmsg)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(16,<sp/>320,<sp/>m.width<sp/>-<sp/>16):</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>y<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(16,<sp/>240,<sp/>m.height<sp/>-<sp/>16):</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>d<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,<sp/>10):</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt3d<sp/>=<sp/>cam.projectPixelTo3d((x,<sp/>y),<sp/>d)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((lx,<sp/>ly),<sp/>(rx,<sp/>ry))<sp/>=<sp/>cam.project3dToPixel(pt3d)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertAlmostEqual(y,<sp/>ly,<sp/>3)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertAlmostEqual(y,<sp/>ry,<sp/>3)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertAlmostEqual(x,<sp/>lx,<sp/>3)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertAlmostEqual(x,<sp/>rx<sp/>+<sp/>d,<sp/>3)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>=<sp/>100.0</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>200.0</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>du<sp/>=<sp/>17.0</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dv<sp/>=<sp/>23.0</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z<sp/>=<sp/>2.0</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xyz0<sp/>=<sp/>cam.left.projectPixelTo3dRay((u,<sp/>v))</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xyz0<sp/>=<sp/>(xyz0[0]<sp/>*<sp/>(Z<sp/>/<sp/>xyz0[2]),<sp/>xyz0[1]<sp/>*<sp/>(Z<sp/>/<sp/>xyz0[2]),<sp/>Z)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xyz1<sp/>=<sp/>cam.left.projectPixelTo3dRay((u<sp/>+<sp/>du,<sp/>v<sp/>+<sp/>dv))</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xyz1<sp/>=<sp/>(xyz1[0]<sp/>*<sp/>(Z<sp/>/<sp/>xyz1[2]),<sp/>xyz1[1]<sp/>*<sp/>(Z<sp/>/<sp/>xyz1[2]),<sp/>Z)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertAlmostEqual(cam.left.getDeltaU(xyz1[0]<sp/>-<sp/>xyz0[0],<sp/>Z),<sp/>du,<sp/>3)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertAlmostEqual(cam.left.getDeltaV(xyz1[1]<sp/>-<sp/>xyz0[1],<sp/>Z),<sp/>dv,<sp/>3)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertAlmostEqual(cam.left.getDeltaX(du,<sp/>Z),<sp/>xyz1[0]<sp/>-<sp/>xyz0[0],<sp/>3)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertAlmostEqual(cam.left.getDeltaY(dv,<sp/>Z),<sp/>xyz1[1]<sp/>-<sp/>xyz0[1],<sp/>3)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rostest.unitrun(</highlight><highlight class="stringliteral">&apos;image_geometry&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;directed&apos;</highlight><highlight class="normal">,<sp/>TestDirected)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75" refid="namespacedirected_1afcfae8ac5af5c4a119deff3255043a17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suite<sp/>=<sp/>unittest.TestSuite()</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suite.addTest(<ref refid="classdirected_1_1_test_directed" kindref="compound">TestDirected</ref>(</highlight><highlight class="stringliteral">&apos;test_stereo&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="77" refid="namespacedirected_1aa599d32affe679c40fc7c6c4aa04e4eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unittest.TextTestRunner(verbosity=2).run(suite)</highlight></codeline>
    </programlisting>
    <location file="robocluedo_dependencies/vision_opencv/image_geometry/test/directed.py"/>
  </compounddef>
</doxygen>
