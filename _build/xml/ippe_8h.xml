<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="ippe_8h" kind="file" language="C++">
    <compoundname>ippe.h</compoundname>
    <includes local="no">opencv2/core.hpp</includes>
    <includes refid="aruco__export_8h" local="yes">aruco_export.h</includes>
    <includedby refid="ippe_8cpp" local="yes">robocluedo_dependencies/aruco_ros/aruco/src/aruco/ippe.cpp</includedby>
    <includedby refid="posetracker_8cpp" local="yes">robocluedo_dependencies/aruco_ros/aruco/src/aruco/posetracker.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>robocluedo_dependencies/aruco_ros/aruco/include/aruco/ippe.h</label>
        <link refid="ippe_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>aruco_export.h</label>
        <link refid="aruco__export_8h"/>
      </node>
      <node id="2">
        <label>opencv2/core.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>robocluedo_dependencies/aruco_ros/aruco/include/aruco/ippe.h</label>
        <link refid="ippe_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>robocluedo_dependencies/aruco_ros/aruco/src/aruco/ippe.cpp</label>
        <link refid="ippe_8cpp"/>
      </node>
      <node id="3">
        <label>robocluedo_dependencies/aruco_ros/aruco/src/aruco/posetracker.cpp</label>
        <link refid="posetracker_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacearuco">aruco</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>core<sp/>header<sp/>file<sp/>for<sp/>IPPE.<sp/>Infinitesimal<sp/>Plane-based<sp/>Pose<sp/>Estimation<sp/>(IPPE)<sp/>is<sp/>a<sp/>very<sp/>fast<sp/>and<sp/>accurate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>way<sp/>to<sp/>compute<sp/>a<sp/>camera&apos;s<sp/>pose<sp/>from<sp/>a<sp/>single<sp/>image<sp/>of<sp/>a<sp/>planar<sp/>object<sp/>using<sp/>point<sp/>correspondences.<sp/>This<sp/>has<sp/>uses<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>several<sp/>applications,<sp/>including<sp/>augmented<sp/>reality,<sp/>3D<sp/>tracking<sp/>and<sp/>pose<sp/>estimation<sp/>with<sp/>planar<sp/>markers,<sp/>and<sp/>3D<sp/>scene</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>understanding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>package<sp/>is<sp/>free<sp/>and<sp/>covered<sp/>by<sp/>the<sp/>BSD<sp/>licence<sp/>without<sp/>any<sp/>warranty.<sp/>We<sp/>hope<sp/>you<sp/>find<sp/>this<sp/>code<sp/>useful<sp/>and<sp/>if<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>please<sp/>cite<sp/>our<sp/>paper<sp/>in<sp/>your<sp/>work:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//@article{<sp/>year={2014},<sp/>issn={0920-5691},<sp/>journal={International<sp/>Journal<sp/>of<sp/>Computer<sp/>Vision},<sp/>volume={109},<sp/>number={3},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//doi={10.1007/s11263-014-0725-5},<sp/>title={Infinitesimal<sp/>Plane-Based<sp/>Pose<sp/>Estimation},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//url={http://dx.doi.org/10.1007/s11263-014-0725-5},<sp/>publisher={Springer<sp/>US},<sp/>keywords={Plane;<sp/>Pose;<sp/>SfM;<sp/>PnP;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//Homography},<sp/>author={Collins,<sp/>Toby<sp/>and<sp/>Bartoli,<sp/>Adrien},<sp/>pages={252-286},<sp/>language={English}<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Please<sp/>contact<sp/>Toby<sp/>(toby.collins@gmail.com)<sp/>if<sp/>you<sp/>have<sp/>any<sp/>questions<sp/>about<sp/>the<sp/>code,<sp/>paper<sp/>and<sp/>IPPE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor">#ifndef<sp/>_IPPE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_IPPE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/core.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="aruco__export_8h" kindref="compound">aruco_export.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearuco" kindref="compound">aruco</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>the<sp/>two<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">std::vector&lt;cv::Mat&gt;<sp/><ref refid="namespacearuco_1a8bdf5564fc70b773ac326d5afa004b47" kindref="member">solvePnP</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;cv::Point3f&gt;&amp;<sp/>objPoints,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;cv::Point2f&gt;&amp;<sp/>imgPoints,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::InputArray<sp/>cameraMatrix,<sp/>cv::InputArray<sp/>distCoeffs);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><ref refid="aruco__export_8h_1a47f9a248e0fcb66919073dec9c96dbe7" kindref="member">ARUCO_EXPORT</ref><sp/>std::vector&lt;std::pair&lt;cv::Mat,<sp/>double&gt;<sp/>&gt;<sp/><ref refid="namespacearuco_1ac3489ddda33f94f247d9be2e6da021f9" kindref="member">solvePnP_</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;cv::Point2f&gt;<sp/>&amp;imgPoints,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::InputArray<sp/>cameraMatrix,<sp/>cv::InputArray<sp/>distCoeffs);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">std::vector&lt;std::pair&lt;cv::Mat,<sp/>double&gt;&gt;<sp/><ref refid="namespacearuco_1ac3489ddda33f94f247d9be2e6da021f9" kindref="member">solvePnP_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;cv::Point3f&gt;&amp;<sp/>objPoints,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;cv::Point2f&gt;&amp;<sp/>imgPoints,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::InputArray<sp/>cameraMatrix,<sp/>cv::InputArray<sp/>distCoeffs);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacearuco_1ada065824d7de806dcd082f8a8ebd1e75" kindref="member">solvePoseOfCentredSquare</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>squareLength,<sp/>cv::InputArray<sp/>imagePoints,<sp/>cv::InputArray<sp/>cameraMatrix,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::InputArray<sp/>distCoeffs,<sp/>cv::OutputArray<sp/>_rvec1,<sp/>cv::OutputArray<sp/>_tvec1,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>reprojErr1,<sp/>cv::OutputArray<sp/>_rvec2,<sp/>cv::OutputArray<sp/>_tvec2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>reprojErr2);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacearuco_1a2433e7d2d8c4d30e0c37e1f6913fff4d" kindref="member">IPPEvalBestPose</ref>(cv::InputArray<sp/>_R1,<sp/>cv::InputArray<sp/>_R2,<sp/>cv::InputArray<sp/>_t1,<sp/>cv::InputArray<sp/>_t2,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::InputArray<sp/>_objectPoints,<sp/>cv::InputArray<sp/>_undistortedPoints);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacearuco_1a4627c757960af459bd688e3ad4639e6f" kindref="member">IPPEvalReprojectionError</ref>(cv::InputArray<sp/>_R,<sp/>cv::InputArray<sp/>_t,<sp/>cv::InputArray<sp/>_objectPoints,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::InputArray<sp/>_undistortedPoints);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacearuco_1a154d65249cb00ec52ea85b4d656befcd" kindref="member">IPPERot2vec</ref>(cv::InputArray<sp/>_R,<sp/>cv::OutputArray<sp/>_r);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacearuco_1a27a1e84cb92d795c0bd4361e99db5843" kindref="member">IPPComputeTranslation</ref>(cv::InputArray<sp/>_objectPoints,<sp/>cv::InputArray<sp/>_imgPoints,<sp/>cv::InputArray<sp/>_R,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::OutputArray<sp/>_t);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacearuco_1a1a2dce405304f7f7d28f52059283ce41" kindref="member">IPPComputeRotations</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>j00,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>j01,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>j10,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>j11,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>q,<sp/>cv::OutputArray<sp/>_R1,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::OutputArray<sp/>_R2);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacearuco_1a8cd5a905cfcdfe4362406b9c7a6ab079" kindref="member">homographyFromSquarePoints</ref>(cv::InputArray<sp/>_targetPts,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>halfLength,<sp/>cv::OutputArray<sp/>_H);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>aruco</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_IPPE_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="robocluedo_dependencies/aruco_ros/aruco/include/aruco/ippe.h"/>
  </compounddef>
</doxygen>
