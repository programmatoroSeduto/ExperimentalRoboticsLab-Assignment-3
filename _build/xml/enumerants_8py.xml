<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="enumerants_8py" kind="file" language="Python">
    <compoundname>enumerants.py</compoundname>
    <innerclass refid="classenumerants_1_1_test_enumerants" prot="public">enumerants::TestEnumerants</innerclass>
    <innernamespace refid="namespaceenumerants">enumerants</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceenumerants" refkind="compound"><highlight class="comment">#!/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rostest</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>unittest</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cv2</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sensor_msgs.msg</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>cv_bridge<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>CvBridge,<sp/>CvBridgeError,<sp/>getCvType</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="classenumerants_1_1_test_enumerants" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classenumerants_1_1_test_enumerants" kindref="compound">TestEnumerants</ref>(unittest.TestCase):</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="classenumerants_1_1_test_enumerants_1aa4a864f1fca4ef45ab778172b62f1cfe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classenumerants_1_1_test_enumerants_1aa4a864f1fca4ef45ab778172b62f1cfe" kindref="member">test_enumerants_cv2</ref>(self):</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>img_msg<sp/>=<sp/>sensor_msgs.msg.Image()</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>img_msg.width<sp/>=<sp/>640</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>img_msg.height<sp/>=<sp/>480</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>img_msg.encoding<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;rgba8&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>img_msg.step<sp/>=<sp/>640*4</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>img_msg.data<sp/>=<sp/>(640<sp/>*<sp/>480)<sp/>*<sp/></highlight><highlight class="stringliteral">&quot;1234&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bridge_<sp/>=<sp/><ref refid="classcv__bridge_1_1core_1_1_cv_bridge" kindref="compound">CvBridge</ref>()</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cvim<sp/>=<sp/>bridge_.imgmsg_to_cv2(img_msg,<sp/></highlight><highlight class="stringliteral">&quot;rgb8&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assert_(sys.getrefcount(cvim)<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>A<sp/>3<sp/>channel<sp/>image<sp/>cannot<sp/>be<sp/>sent<sp/>as<sp/>an<sp/>rgba8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertRaises(CvBridgeError,<sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal">:<sp/>bridge_.cv2_to_imgmsg(cvim,<sp/></highlight><highlight class="stringliteral">&quot;rgba8&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>but<sp/>it<sp/>can<sp/>be<sp/>sent<sp/>as<sp/>rgb8<sp/>and<sp/>bgr8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bridge_.cv2_to_imgmsg(cvim,<sp/></highlight><highlight class="stringliteral">&quot;rgb8&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bridge_.cv2_to_imgmsg(cvim,<sp/></highlight><highlight class="stringliteral">&quot;bgr8&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assert_(<ref refid="namespacecv__bridge_1a60b43d74db6ef87fd6cd35d9305b1ef1" kindref="member">getCvType</ref>(</highlight><highlight class="stringliteral">&quot;32FC4&quot;</highlight><highlight class="normal">)<sp/>==<sp/>cv2.CV_32FC4)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assert_(<ref refid="namespacecv__bridge_1a60b43d74db6ef87fd6cd35d9305b1ef1" kindref="member">getCvType</ref>(</highlight><highlight class="stringliteral">&quot;8UC1&quot;</highlight><highlight class="normal">)<sp/>==<sp/>cv2.CV_8UC1)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assert_(<ref refid="namespacecv__bridge_1a60b43d74db6ef87fd6cd35d9305b1ef1" kindref="member">getCvType</ref>(</highlight><highlight class="stringliteral">&quot;8U&quot;</highlight><highlight class="normal">)<sp/>==<sp/>cv2.CV_8UC1)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classenumerants_1_1_test_enumerants_1a4f2d58b07f7a9a8676a613de67a4b886" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classenumerants_1_1_test_enumerants_1a4f2d58b07f7a9a8676a613de67a4b886" kindref="member">test_numpy_types</ref>(self):</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cv2</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bridge_<sp/>=<sp/><ref refid="classcv__bridge_1_1core_1_1_cv_bridge" kindref="compound">CvBridge</ref>()</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertRaises(TypeError,<sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal">:<sp/>bridge_.cv2_to_imgmsg(1,<sp/></highlight><highlight class="stringliteral">&quot;rgba8&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasattr(cv2,<sp/></highlight><highlight class="stringliteral">&apos;cv&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertRaises(TypeError,<sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal">:<sp/>bridge_.cv2_to_imgmsg(cv2.cv(),<sp/></highlight><highlight class="stringliteral">&quot;rgba8&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>rosunit.unitrun(</highlight><highlight class="stringliteral">&apos;opencv_tests&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;enumerants&apos;</highlight><highlight class="normal">,<sp/>TestEnumerants)</highlight></codeline>
    </programlisting>
    <location file="robocluedo_dependencies/vision_opencv/cv_bridge/test/enumerants.py"/>
  </compounddef>
</doxygen>
