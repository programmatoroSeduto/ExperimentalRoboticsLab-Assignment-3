<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo" kind="page">
    <compoundname>md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo</compoundname>
    <title>robocluedo – notes about the PDDL</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<sect1 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md271">
<title>osservazioni iniziali</title>
<para><itemizedlist>
<listitem><para>il planner risolve il problema fino alla fine come se non ci fosse nessun problema</para>
</listitem><listitem><para>è il sistema esterno a risolvere gli imprevisti con eventuali richieste di replanning</para>
</listitem><listitem><para>la knowledge base è formata da un insieme di informazioni non comunicanti: quelle che servono per il planner PDDL, e quelle che servono per la reale gestione del reasoning</para>
</listitem><listitem><para>date le funzionalità della knowledge base, contare via query è davvero una pessima idea: il PDDL dovrà portare con se tutta una serie di metadati da aggiornare ogni volta che viene ricevuto un nuovo hint dall&apos;oracolo. questa operazione permette inoltre di usare la knowledge base come una shared memory tra le varie actions</para>
</listitem><listitem><para>ogni nodo ha la sua particolare istanza di <computeroutput>robocluedo_kb_tools</computeroutput>, per giunta su processi diversi, dunque l&apos;unica vera memoria condivisa è la knowledge base: inutile tenere dei conteggi nella classe senza aggiornare la knowledge base: dei fluents di conteggio devono esserci sempre nel problema.</para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md272">
<title>system inizialization</title>
<para>the system shall be initialized, which means to allocate the hints and to update the ontology before starting.</para>
<para><programlisting><codeline><highlight class="normal">(init-planning-system<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>controlla<sp/>e<sp/>aggiorna<sp/>lo<sp/>stato<sp/>del<sp/>database</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*)<sp/>conta<sp/>gli<sp/>elementi<sp/>associati<sp/>alle<sp/>ipotesi</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*)<sp/>e<sp/>classifica<sp/>le<sp/>ipotesi<sp/>nelle<sp/>tre<sp/>categorie</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>controlla<sp/>che<sp/>il<sp/>problema<sp/>ammetta<sp/>soluzione</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>c&apos;è<sp/>almeno<sp/>un&apos;ipotesi<sp/>ammissibile?</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*)<sp/>IF<sp/>almeno<sp/>una<sp/>ipotesi<sp/>ammissibile<sp/>-&gt;<sp/>REPLAN<sp/>(verso<sp/>la<sp/>soluzione)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>applica<sp/>l&apos;effetto<sp/>dell&apos;azione</highlight></codeline>
</programlisting></para>
<sect2 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md273">
<title>check hint status</title>
<para><bold>assunzione</bold> : dopo un tentativo di esecuzione di soluzione fallito, la knowledge base conserva ancora i dati derivati dall&apos;ultima esecuzione.</para>
<para>classificazione degli ID:</para>
<para><itemizedlist>
<listitem><para>un ID è <emphasis>attivo</emphasis> quando non si può provare che questi non è valido</para>
</listitem><listitem><para>un ID è <emphasis>escluso</emphasis> quando uno tra i campi <emphasis>who</emphasis>, <emphasis>where</emphasis> o <emphasis>what</emphasis> ha almeno due elementi associati questo è gestito dall&apos;esterno: è il sistema esterno al PDDL che individua le esclusioni. il planner può escludere solo questi casi</para>
</listitem><listitem><para>un ID è <emphasis>ammissibile</emphasis> quando i tre campi hanno uno e un solo elemento</para>
</listitem></itemizedlist>
</para>
<para>il sistema iniziale valuta le condizioni delle ipotesi e marca i tre predicati col loro stato.</para>
<para>il sistema fa anche il check se il problema è risolvibile.</para>
<para><bold>il problema è risolvibile quando</bold> esiste almeno un&apos;opzione ancora attiva</para>
<para><bold>il problema è risolto per esclusione</bold> quando esiste un&apos;unica opzione valida o anche completa</para>
<para><bold>il problema non è risolvibile</bold> quando tutte le opzioni sono state escluse</para>
</sect2>
</sect1>
<sect1 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md274">
<title>movimento</title>
<para>caratteristiche generali:</para>
<para><itemizedlist>
<listitem><para>il robot può muoversi ovunque voglia, anche al centro</para>
</listitem><listitem><para>i punti in cui il robot può stare sono chiamati waypoints nel codice</para>
</listitem></itemizedlist>
</para>
<para>constraints:</para>
<para><itemizedlist>
<listitem><para>il robot non può stare più di un turno nello stesso posto</para>
</listitem><listitem><para>(però può tornare al punto precedente al turno successivo, basta che si muova)</para>
</listitem></itemizedlist>
</para>
<para>pseudocodice associato all&apos;azione:</para>
<para><programlisting><codeline><highlight class="normal">(move-to<sp/>?from<sp/>?to<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>serve<sp/>un<sp/>check<sp/>sulla<sp/>validità<sp/>delle<sp/>preconditions<sp/>prima<sp/>di<sp/>iniziare?</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>ottieni<sp/>le<sp/>coordinate<sp/>reali<sp/>del<sp/>waypoint</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>esiste<sp/>una<sp/>tabella<sp/>nella<sp/>classe<sp/>che<sp/>associa<sp/>il<sp/>waypoint<sp/>alla<sp/>pose<sp/>reale</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>oppure<sp/>leggi<sp/>le<sp/>posizioni<sp/>dall&apos;oracolo</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>navigation<sp/>controller<sp/>-&gt;<sp/>vai<sp/>a<sp/>quel<sp/>waypoint</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>attendi<sp/>fin<sp/>quando<sp/>il<sp/>robot<sp/>non<sp/>ha<sp/>raggiunto<sp/>la<sp/>posizione<sp/>finale</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>applica<sp/>l&apos;effetto<sp/>dell&apos;azione</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md275">
<title>segnale di acquisizione</title>
<para>il robot può continuare a muoversi nello spazio come vuole. Al momento però in cui bisogna fare l&apos;acquisizione di un hint, il robot deve <emphasis>segnalare</emphasis> la sua volontà di acquisire il suggerimento.</para>
<para><programlisting><codeline><highlight class="normal">(signal-info-acquisition<sp/>?wp)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>controlla<sp/>le<sp/>preconditions</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>aggiorna<sp/>allo<sp/>stato<sp/>successivo</highlight></codeline>
</programlisting></para>
<para>anche una semplice azione standard è sufficiente per questa operazione.</para>
</sect1>
<sect1 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md276">
<title>avvicinamento manipolatore</title>
<para><bold>quando il robot avvicina il manipolatore, l&apos;oracolo pubblica un messaggio con l&apos;hint</bold></para>
<para><programlisting><codeline><highlight class="normal">(manipulator-near-marker<sp/>?wp<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>check<sp/>sulla<sp/>validità<sp/>delle<sp/>condition?</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>coordinate<sp/>del<sp/>marker</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>manipulator<sp/>controller<sp/>-&gt;<sp/>avvicina<sp/>il<sp/>manipolatore</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>attendi<sp/>fin<sp/>quando<sp/>l&apos;azione<sp/>non<sp/>ha<sp/>avuto<sp/>termine</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>a<sp/>questo<sp/>punto,<sp/>l&apos;azione<sp/>successiva<sp/>dovrebbe<sp/>aver<sp/>ricevuto<sp/>l&apos;hint</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>fine<sp/>dell&apos;azione,<sp/>aggiorna<sp/>la<sp/>knowledge<sp/>base</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md277">
<title>cattura dell&apos;indizio</title>
<para>qui il robot &quot;legge&quot; l&apos;indizio, vale a dire il sistema interpreta l&apos;indizio proveniente dall&apos;oracolo (precedentemente allocato)</para>
<para><programlisting><codeline><highlight class="normal">(acquire-hint<sp/>?wp)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>controllo<sp/>delle<sp/>preconditions?</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>controlla<sp/>che<sp/>l&apos;indizio<sp/>ricevuto<sp/>sia<sp/>ben<sp/>formato</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/>(altrimenti<sp/>scartalo<sp/>e<sp/>passa<sp/>avanti)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>controllare<sp/>qui<sp/>se<sp/>l&apos;indizio<sp/>è<sp/>ridondante?</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*)<sp/>aggiungi<sp/>l&apos;indizio<sp/>alla<sp/>ontology</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*)<sp/>in<sp/>base<sp/>all&apos;indizio,<sp/>classifica<sp/>l&apos;ID<sp/>dell&apos;ipotesi<sp/>implicata</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>INFINE<sp/>applica<sp/>il<sp/>nuovo<sp/>stato<sp/>alla<sp/>KB</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md278">
<title>riprotare il manipolatore alla posizione iniziale</title>
<para>a questo punto il robot ha già acquisito l&apos;indizio.</para>
<para><programlisting><codeline><highlight class="normal">(manipulator-far-marker<sp/>?wp<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>check<sp/>della<sp/>validità<sp/>delle<sp/>preconditions?<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>manipulator<sp/>controller<sp/>-&gt;<sp/>home<sp/>position<sp/>del<sp/>manipolatore</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>attendi<sp/>fino<sp/>al<sp/>termine<sp/>dell&apos;operazione</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>aggiorna<sp/>la<sp/>KB</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md279">
<title>valutazione dello stato del problema</title>
<para>questa azione viene eseguita subito dopo aver ritratto il manipolatore dopo l&apos;acquisizione dell&apos;hint, e consiste nella valutazione di risolubilità del problema in base allo stato attuale e al numero di mosse rimanenti.</para>
<para>Non conviene fare questa mossa quando il manipolatore è ancora vicino al marker.</para>
<para><programlisting><codeline><highlight class="normal">(sherlok-is-thinking<sp/>?wp<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>check<sp/>delle<sp/>conditions?<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>aggiorna<sp/>i<sp/>conteggi</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>-&gt;VERIFICA<sp/>SE<sp/>IL<sp/>PROBLEMA<sp/>E&apos;<sp/>ANCORA<sp/>RISOLVIBILE</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>questa<sp/>procedura<sp/>non<sp/>dovrebbe<sp/>essere<sp/>eseguita<sp/>una<sp/>volta<sp/>ritratto<sp/>il<sp/>braccio?</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*)<sp/>ELIF<sp/>nessun<sp/>ID<sp/>valido<sp/>:<sp/>FINE,<sp/>mistero<sp/>irrisolvibile</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*)<sp/>ELIF<sp/>c&apos;è<sp/>solo<sp/>un<sp/>ID<sp/>valido<sp/>:<sp/>REPLAN,<sp/>verso<sp/>una<sp/>soluzione<sp/>per<sp/>esclusione</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*)<sp/>ELIF<sp/>più<sp/>di<sp/>un<sp/>ID<sp/>:<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*)<sp/>IF<sp/>troppi<sp/>ID,<sp/>poche<sp/>mosse<sp/>-&gt;<sp/>REPLAN</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*)<sp/>ELSE<sp/>:<sp/>vai<sp/>avanti</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>nel<sp/>caso<sp/>tutto<sp/>sia<sp/>andato<sp/>bene,<sp/>aggiorna<sp/>la<sp/>KB<sp/>e<sp/>vai<sp/>avanti</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md280">
<title>preparazione alla soluzione finale</title>
<para>l&apos;idea di base: il robot può proporre la sua soluzione solo una volta raggiunto il centro dell&apos;arena.</para>
<para><programlisting><codeline><highlight class="normal">(bright-bulb-over-head<sp/>?wp<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>check<sp/>delle<sp/>conditions?<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>aggiorna<sp/>la<sp/>KB<sp/>e<sp/>vai<sp/>avanti</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md281">
<title>la soluzione del caso</title>
<para>il planner, dato che funziona offline, non può ricevere alcun dato sui vari ID delle ipotesi: purchè un&apos;ipotesi sia classificata valida, il planner può sempre sceglierla. Sempre nello stesso spirito: <emphasis>per il planner, tutto va a liscio liscio</emphasis>. E&apos; il sistema esterno che deve giudicare la soluzione proposta, evitando decisioni &quot;eccessivamente irrazionali&quot; da parte del planner, che comunque attua una scelta al termine dell&apos;investigazione, anche se non dettata da un effettivo ragionamento deduttivo.</para>
<para>il planner può scegliere tra le opzioni attive, ed escluderà solo quelle risapute non valide <emphasis>a priori</emphasis>, quindi quelle escluse dal problem file prima di fare la ricerca della soluzione.</para>
<para>per favorire le opzioni complete su quelle solo attive, il codice PDDL richiede un&apos;ottimizzazione sulla qualità della soluzione, e mette a disposizione due tipi di azione: q1 che aggiunge 1 alla qualità, e q2 che invece aggiunge 10 alla qualità. entrambe hanno lo stesso effetto, ma il reward di una è maggiore che nell&apos;altra.</para>
<para><programlisting><codeline><highlight class="normal">(who-killed-doctor-black-huh-q1<sp/>?id<sp/>)</highlight></codeline>
<codeline><highlight class="normal">(who-killed-doctor-black-huh-q2<sp/>?id<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>controlla<sp/>le<sp/>preconditions</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>IF<sp/>id<sp/>di<sp/>opzione<sp/>classificata<sp/>completa<sp/>:<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*)<sp/>oracolo<sp/>-&gt;<sp/>invia<sp/>la<sp/>soluzione<sp/>e<sp/>ricevi<sp/>l&apos;id<sp/>della<sp/>soluzione</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>servizio,<sp/>bloccante</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*)<sp/>IF<sp/>soluzione<sp/>corretta<sp/>:<sp/>SOLUZIONE<sp/>DEL<sp/>CASO,<sp/>termina<sp/>la<sp/>missione</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*)<sp/>ELSE<sp/>:<sp/>segna<sp/>l&apos;esito<sp/>nella<sp/>KB</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>e<sp/>passa<sp/>alla<sp/>valutazione<sp/>di<sp/>fattibilità</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>ELIF<sp/>id<sp/>classificato<sp/>attivo<sp/>:<sp/>REPLAN,<sp/>non<sp/>accettare<sp/>una<sp/>soluzione<sp/>non<sp/>motivata</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>valutazione<sp/>di<sp/>fattibilità</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*)<sp/>il<sp/>problema<sp/>è<sp/>risolvibile?<sp/>ci<sp/>sono<sp/>ancora<sp/>ipotesi<sp/>smarcate?</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>se<sp/>non<sp/>c&apos;è<sp/>più<sp/>nulla<sp/>da<sp/>fare,<sp/>FAIL<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*)<sp/>valuta<sp/>il<sp/>numero<sp/>di<sp/>cicli<sp/>alla<sp/>prossima<sp/>iterazione</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>se<sp/>c&apos;è<sp/>un<sp/>solo<sp/>ID<sp/>completo<sp/>da<sp/>provare,<sp/>0<sp/>potrebbe<sp/>essere<sp/>la<sp/>scelta</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>SLOT<sp/>:<sp/>(3<sp/>-<sp/>massimo<sp/>numero<sp/>di<sp/>elementi<sp/>in<sp/>una<sp/>ipotesi<sp/>ancora<sp/>aperta)<sp/>*<sp/>(numero<sp/>di<sp/>ID<sp/>ancora<sp/>attivi)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>in<sp/>generale<sp/>meno<sp/>slot<sp/>ci<sp/>sono<sp/>da<sp/>riempire,<sp/>e<sp/>meno<sp/>iterazioni<sp/>serviranno<sp/>per<sp/>proporre<sp/>una<sp/>ipotesi<sp/>completa</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(*)<sp/>infine,<sp/>REPLAN<sp/>e<sp/>il<sp/>ciclo<sp/>ricomincia</highlight></codeline>
</programlisting></para>
<sect2 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md282">
<title>movimento verso il centro</title>
<para>il robot si muove verso il centro dell&apos;arena per proporre la soluzione.</para>
</sect2>
</sect1>
<sect1 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md283">
<title>Landmarks</title>
<para>riporto qui i landmarks che ho usato per debuggare e testare il codice PDDL, tutti a partire dallo stesso stato iniziale.</para>
<sect2 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md284">
<title>solo init del sistema</title>
<para>il sistema parte da stato <computeroutput>(pre-init )</computeroutput>. Nota che, di tutti questi stati, ce n&apos;è ad ogni azione solo uno acceso, come una sorta di segnalatore di stato.</para>
<para><programlisting filename=".lisp"><codeline><highlight class="normal">(:goal<sp/>(investigating<sp/>))</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md285">
<title>init e movimento a w2</title>
<para>il robot parte dal centro e arriva in w2</para>
<para><programlisting filename=".lisp"><codeline><highlight class="normal">(:goal<sp/>(and<sp/>(investigating<sp/>)<sp/>(robot-position<sp/>w2)))</highlight></codeline>
</programlisting></para>
<para>o anche solo</para>
<para><programlisting filename=".lisp"><codeline><highlight class="normal">(:goal<sp/>(robot-position<sp/>w2))</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md286">
<title>in w2 e braccio verso il marker</title>
<para><programlisting filename=".lisp"><codeline><highlight class="normal">(:goal<sp/>(and<sp/>(robot-position<sp/>w2<sp/>)<sp/>(acquiring<sp/>)<sp/>(manipulator-on<sp/>)))</highlight></codeline>
</programlisting></para>
<para>o anche, più compatto,</para>
<para><programlisting filename=".lisp"><codeline><highlight class="normal">(:goal<sp/>(and<sp/>(robot-position<sp/>w2<sp/>)<sp/>(acquiring<sp/>)<sp/>(manipulator-on<sp/>)))</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md287">
<title>cattura il marker w2 col braccio vicino al marker</title>
<para><programlisting filename=".lisp"><codeline><highlight class="normal">(:goal<sp/>(and<sp/>(robot-position<sp/>w2<sp/>)<sp/>(acquired<sp/>)<sp/>(manipulator-on<sp/>)<sp/>(acquired-hint<sp/>w2)))</highlight></codeline>
</programlisting></para>
<para>in alternativa, bastava anche solo</para>
<para><programlisting filename=".lisp"><codeline><highlight class="normal">(:goal<sp/>(acquired-hint<sp/>w2))</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md288">
<title>wp2 acquisito e manipolatore non attivo</title>
<para><programlisting filename=".lisp"><codeline><highlight class="normal">(:goal<sp/>(and<sp/>(manipulator-off<sp/>)<sp/>(acquired-hint<sp/>w2)))</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md289">
<title>wp2 e wp3 in due mosse</title>
<para>il fluent <computeroutput>(remaining-moves )</computeroutput> viene inizializzato a 3 prima di far partire il problema.</para>
<para><programlisting filename=".lisp"><codeline><highlight class="normal">(:goal<sp/>(and<sp/>(manipulator-off<sp/>)<sp/>(acquired-hint<sp/>w2<sp/>)<sp/>(acquired-hint<sp/>w3<sp/>)<sp/>(&gt;=<sp/>(remaining-moves<sp/>)<sp/>1)))</highlight></codeline>
</programlisting></para>
<para>si ottiene un risultato praticamente identico usando la metrica:</para>
<para><programlisting filename=".lisp"><codeline><highlight class="normal">(:goal<sp/>(and<sp/>(manipulator-off<sp/>)<sp/>(acquired-hint<sp/>w2<sp/>)<sp/>(acquired-hint<sp/>w3<sp/>)))</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:metric<sp/>maximize<sp/>(remaining-moves<sp/>))</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md290">
<title>wp1 wp2 wp3 poi in mezzo</title>
<para><programlisting filename=".lisp"><codeline><highlight class="normal">(:goal<sp/>(and<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(acquired-hint<sp/>w1<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(acquired-hint<sp/>w2<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(acquired-hint<sp/>w3<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(robot-position<sp/>center<sp/>)</highlight></codeline>
<codeline><highlight class="normal">))</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md291">
<title>ciclo completo di indagine prima della soluzione</title>
<para><programlisting filename=".lisp"><codeline><highlight class="normal">(:goal<sp/>(wanna-solve<sp/>))</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md292">
<title>in centro per proporre la soluzione</title>
<para><programlisting filename=".lisp"><codeline><highlight class="normal">(:goal<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(wanna-solve<sp/>)<sp/>(robot-position<sp/>center)</highlight></codeline>
<codeline><highlight class="normal">))</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md293">
<title>il ciclo di lavoro completo</title>
<para><programlisting filename=".lisp"><codeline><highlight class="normal">(:goal<sp/>(elementary-whatson<sp/>))</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:metric<sp/>maximize<sp/>(solution-quality<sp/>))</highlight></codeline>
</programlisting></para>
</sect2>
</sect1>
<sect1 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md294">
<title>Checkpoints</title>
<sect2 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md295">
<title>domain</title>
<para><programlisting filename=".lisp"><codeline><highlight class="normal">(define<sp/>(domain<sp/>robocluedo)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:requirements<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>===<sp/>PDDL1.1<sp/>===<sp/>;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:strips<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:typing<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:equality<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:existential-preconditions</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:universal-preconditions<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:conditional-effects</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:quantified-preconditions</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>===<sp/>PDDL2.1<sp/>===<sp/>;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:numeric-fluents</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:durative-actions</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:types</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>ontology</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>hypID</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>navigation<sp/>system</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>waypoint</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:constants</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>center<sp/>-<sp/>waypoint</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:predicates</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>working<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(pre-init<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(investigating<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(ready-to-acquire<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(acquiring<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(acquired<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(thinking<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(wanna-solve<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(who-killed-doctor-black<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(elementary-whatson<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>environment</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(passage<sp/>?w1<sp/>?w2<sp/>-<sp/>waypoint<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>navigation<sp/>system</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(not-explored<sp/>?w<sp/>-<sp/>waypoint<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(robot-position<sp/>?w<sp/>-<sp/>waypoint<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>manipulator</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(manipulator-off<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(manipulator-on<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>hint<sp/>gathering</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(not-acquired-hint<sp/>?wp<sp/>-<sp/>waypoint<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(acquired-hint<sp/>?wp<sp/>-<sp/>waypoint<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(can-give-hint<sp/>?wp<sp/>-<sp/>waypoint<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>hypotheses<sp/>classification</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(h-open<sp/>?id<sp/>-<sp/>hypID<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(h-complete<sp/>?id<sp/>-<sp/>hypID<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(h-discard<sp/>?id<sp/>-<sp/>hypID<sp/>)</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:functions</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(remaining-moves<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(solution-quality<sp/>)</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">;;<sp/>===<sp/>SYSTEM<sp/>INIT<sp/>===<sp/>;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:durative-action<sp/>init-planning-system</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:parameters<sp/>(<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:duration<sp/>(=<sp/>?duration<sp/>1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:condition<sp/>(at<sp/>start<sp/>(pre-init<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:effect<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(not<sp/>(pre-init<sp/>)))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(investigating<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">;;<sp/>===<sp/>NAVIGATION<sp/>SYSTEM<sp/>===<sp/>;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:durative-action<sp/>move-to</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:parameters<sp/>(<sp/>?from<sp/>?to<sp/>-<sp/>waypoint<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:duration<sp/>(=<sp/>?duration<sp/>1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:condition<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(investigating<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>localization</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(robot-position<sp/>?from<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>passage</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(passage<sp/>?from<sp/>?to<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>path<sp/>tracking</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(not-explored<sp/>?to<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>manipulator</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(manipulator-off<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>it<sp/>must<sp/>be<sp/>a<sp/>new<sp/>hint<sp/>there</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/>(at<sp/>start<sp/>(can-give-hint<sp/>?to<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/>(at<sp/>start<sp/>(not-acquired-hint<sp/>?to<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:effect<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>localization</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(not<sp/>(robot-position<sp/>?from<sp/>)))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(robot-position<sp/>?to<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>path<sp/>tracking</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(not<sp/>(not-explored<sp/>?to<sp/>)))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(not-explored<sp/>?from<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:durative-action<sp/>move-to-center</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:parameters<sp/>(<sp/>?from<sp/>-<sp/>waypoint<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:duration<sp/>(=<sp/>?duration<sp/>1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:condition<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(wanna-solve<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>localization</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(robot-position<sp/>?from<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>moves</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(=<sp/>(remaining-moves<sp/>)<sp/>0))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:effect<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>localization</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(not<sp/>(robot-position<sp/>?from<sp/>)))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(robot-position<sp/>center))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>system<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(not<sp/>(wanna-solve<sp/>)))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(who-killed-doctor-black<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">;;<sp/>===<sp/>MANIPULATOR<sp/>===<sp/>;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:durative-action<sp/>manipulator-near-marker</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:parameters<sp/>(<sp/>?wp<sp/>-<sp/>waypoint<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:duration<sp/>(=<sp/>?duration<sp/>1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:condition<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>robot<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(ready-to-acquire<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>position</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(robot-position<sp/>?wp<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>it<sp/>must<sp/>be<sp/>a<sp/>new<sp/>hint<sp/>there</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(can-give-hint<sp/>?wp<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(not-acquired-hint<sp/>?wp<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>manipulator</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(manipulator-off<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:effect<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>robot<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(not<sp/>(ready-to-acquire<sp/>)))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(acquiring<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>manipulator<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(not<sp/>(manipulator-off<sp/>)))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(manipulator-on<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:durative-action<sp/>manipulator-far-marker</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:parameters<sp/>(<sp/>?wp<sp/>-<sp/>waypoint<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:duration<sp/>(=<sp/>?duration<sp/>1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:condition<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>robot<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(acquired<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>position</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(robot-position<sp/>?wp<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>point<sp/>already<sp/>acquired</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(can-give-hint<sp/>?wp<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(acquired-hint<sp/>?wp<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>manipulator<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(manipulator-on<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:effect<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>robot<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(not<sp/>(acquired<sp/>)))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(thinking<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>manipulator<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(not<sp/>(manipulator-on<sp/>)))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(manipulator-off<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">;;<sp/>===<sp/>HINT<sp/>ACQUISITION<sp/>===<sp/>;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:durative-action<sp/>signal-info-acquisition</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:parameters<sp/>(<sp/>?wp<sp/>-<sp/>waypoint<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:duration<sp/>(=<sp/>?duration<sp/>1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:condition<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>robot<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(investigating<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>manipulator<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(manipulator-off<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>robot<sp/>position</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(robot-position<sp/>?wp<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>moves</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(&gt;<sp/>(remaining-moves<sp/>)<sp/>0))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:effect<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>moves</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(decrease<sp/>(remaining-moves<sp/>)<sp/>1))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>robot<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(not<sp/>(investigating<sp/>)))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(ready-to-acquire<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:durative-action<sp/>acquire-hint</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:parameters<sp/>(<sp/>?wp<sp/>-<sp/>waypoint<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:duration<sp/>(=<sp/>?duration<sp/>1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:condition<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>position</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(robot-position<sp/>?wp<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>robot<sp/>state</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(acquiring<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>manipulator<sp/>state</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(manipulator-on<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>it<sp/>must<sp/>be<sp/>a<sp/>hint<sp/>there</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(can-give-hint<sp/>?wp<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(not-acquired-hint<sp/>?wp<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:effect<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>robot<sp/>state</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(not<sp/>(acquiring<sp/>)))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(acquired<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>marker<sp/>has<sp/>been<sp/>acquired</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(not<sp/>(not-acquired-hint<sp/>?wp<sp/>)))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(acquired-hint<sp/>?wp<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:durative-action<sp/>sherlock-is-thinking</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:parameters<sp/>(<sp/>?wp<sp/>-<sp/>waypoint<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:duration<sp/>(=<sp/>?duration<sp/>1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:condition<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>system<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(thinking<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>manipulator<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(manipulator-off<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>robot<sp/>localization</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(robot-position<sp/>?wp<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>hint<sp/>already<sp/>acquired<sp/>for<sp/>that<sp/>position</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(can-give-hint<sp/>?wp<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(acquired-hint<sp/>?wp<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:effect<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>system<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(not<sp/>(thinking<sp/>)))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(investigating<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">;;<sp/>===<sp/>MYSTERY<sp/>SOLUTION<sp/>===<sp/>;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:durative-action<sp/>bright-bulb-over-head</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:parameters<sp/>(<sp/>?wp<sp/>-<sp/>waypoint<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:duration<sp/>(=<sp/>?duration<sp/>1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:condition<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>system<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(investigating<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>robot<sp/>position</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(robot-position<sp/>?wp<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>no<sp/>more<sp/>moves</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(=<sp/>(remaining-moves<sp/>)<sp/>0))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:effect<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(not<sp/>(investigating<sp/>)))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(wanna-solve<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:durative-action<sp/>who-killed-doctor-black-huh-q1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:parameters<sp/>(<sp/>?id<sp/>-<sp/>hypID<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:duration<sp/>(=<sp/>?duration<sp/>1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:condition<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>system<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(who-killed-doctor-black<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>robot<sp/>position</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(robot-position<sp/>center))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>remaining<sp/>moves</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(=<sp/>(remaining-moves<sp/>)<sp/>0))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>quality<sp/>of<sp/>the<sp/>ID<sp/>--<sp/>active</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(h-open<sp/>?id<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:effect<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>reward<sp/>-<sp/>1<sp/>point</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(increase<sp/>(solution-quality<sp/>)<sp/>1))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>status<sp/>change</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(not<sp/>(who-killed-doctor-black<sp/>)))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(elementary-whatson<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:durative-action<sp/>who-killed-doctor-black-huh-q2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:parameters<sp/>(<sp/>?id<sp/>-<sp/>hypID<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:duration<sp/>(=<sp/>?duration<sp/>1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:condition<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>system<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(who-killed-doctor-black<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>robot<sp/>position</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(robot-position<sp/>center))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>remaining<sp/>moves</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(=<sp/>(remaining-moves<sp/>)<sp/>0))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>quality<sp/>of<sp/>the<sp/>ID<sp/>--<sp/>complete</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(h-complete<sp/>?id<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:effect<sp/>(and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>reward<sp/>-<sp/>10<sp/>points</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(increase<sp/>(solution-quality<sp/>)<sp/>10))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;;<sp/>status<sp/>change</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>start<sp/>(not<sp/>(who-killed-doctor-black<sp/>)))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(at<sp/>end<sp/>(elementary-whatson<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md296">
<title>problem</title>
<para><programlisting filename=".lisp"><codeline><highlight class="normal">(define<sp/>(problem<sp/>task)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:domain<sp/>robocluedo)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:objects</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>ontology<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ID1<sp/>ID2<sp/>ID3<sp/>ID4<sp/>ID5<sp/>ID6<sp/>-<sp/>hypID</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>environment</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>w1<sp/>w2<sp/>w3<sp/>w4<sp/>-<sp/>waypoint</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:init</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>init<sp/>state<sp/>of<sp/>the<sp/>system</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(pre-init<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>moves</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(=<sp/>(remaining-moves<sp/>)<sp/>3)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>quality<sp/>of<sp/>the<sp/>solution</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(=<sp/>(solution-quality<sp/>)<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>environment<sp/>data</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(passage<sp/>w1<sp/>w2<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(passage<sp/>w1<sp/>w3<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(passage<sp/>w1<sp/>w4<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(passage<sp/>w1<sp/>center<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(passage<sp/>w2<sp/>w1<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(passage<sp/>w2<sp/>w3<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(passage<sp/>w2<sp/>w4<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(passage<sp/>w2<sp/>center<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(passage<sp/>w3<sp/>w1<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(passage<sp/>w3<sp/>w2<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(passage<sp/>w3<sp/>w4<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(passage<sp/>w3<sp/>center<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(passage<sp/>w4<sp/>w1<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(passage<sp/>w4<sp/>w2<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(passage<sp/>w4<sp/>w3<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(passage<sp/>w4<sp/>center<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(passage<sp/>center<sp/>w1<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(passage<sp/>center<sp/>w2<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(passage<sp/>center<sp/>w3<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(passage<sp/>center<sp/>w4<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>navigation<sp/>system</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(robot-position<sp/>center<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(not-explored<sp/>w1<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(not-explored<sp/>w2<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(not-explored<sp/>w3<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(not-explored<sp/>w4<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>manipulator</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(manipulator-off<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>hints<sp/>gathering<sp/>system</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(can-give-hint<sp/>w1<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(not-acquired-hint<sp/>w1<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(can-give-hint<sp/>w2<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(not-acquired-hint<sp/>w2<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(can-give-hint<sp/>w3<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(not-acquired-hint<sp/>w3<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(can-give-hint<sp/>w4<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(not-acquired-hint<sp/>w1<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;;<sp/>hypotheses<sp/>classification</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(h-open<sp/>ID1<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(h-open<sp/>ID2<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(h-open<sp/>ID3<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(h-open<sp/>ID4<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(h-open<sp/>ID5<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(h-open<sp/>ID6<sp/>)</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:goal<sp/>(elementary-whatson<sp/>))</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(:metric<sp/>maximize<sp/>(solution-quality<sp/>))</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_robocluedo_rosplan_pddl_robocluedo_old_robocluedo_1autotoc_md297">
<title>ultimo log</title>
<para><programlisting><codeline><highlight class="normal">Number<sp/>of<sp/>literals:<sp/>27</highlight></codeline>
<codeline><highlight class="normal">Constructing<sp/>lookup<sp/>tables:<sp/>[10%]<sp/>[20%]<sp/>[30%]<sp/>[40%]<sp/>[50%]<sp/>[60%]<sp/>[70%]<sp/>[80%]<sp/>[90%]<sp/>[100%]</highlight></codeline>
<codeline><highlight class="normal">Post<sp/>filtering<sp/>unreachable<sp/>actions:<sp/><sp/>[10%]<sp/>[20%]<sp/>[30%]<sp/>[40%]<sp/>[50%]<sp/>[60%]<sp/>[70%]<sp/>[80%]<sp/>[90%]<sp/>[100%]</highlight></codeline>
<codeline><highlight class="normal">No<sp/>analytic<sp/>limits<sp/>found,<sp/>not<sp/>considering<sp/>limit<sp/>effects<sp/>of<sp/>goal-only<sp/>operators</highlight></codeline>
<codeline><highlight class="normal">47%<sp/>of<sp/>the<sp/>ground<sp/>temporal<sp/>actions<sp/>in<sp/>this<sp/>problem<sp/>are<sp/>compression-safe</highlight></codeline>
<codeline><highlight class="normal">Initial<sp/>heuristic<sp/>=<sp/>4.000</highlight></codeline>
<codeline><highlight class="normal">b<sp/>(3.000<sp/>|<sp/>1.000)</highlight></codeline>
<codeline><highlight class="normal">Resorting<sp/>to<sp/>best-first<sp/>search</highlight></codeline>
<codeline><highlight class="normal">b<sp/>(3.000<sp/>|<sp/>1.000)b<sp/>(2.000<sp/>|<sp/>20.019)b<sp/>(1.000<sp/>|<sp/>21.020);;;;<sp/>Solution<sp/>Found</highlight></codeline>
<codeline><highlight class="normal">;<sp/>States<sp/>evaluated:<sp/>1109</highlight></codeline>
<codeline><highlight class="normal">;<sp/>Cost:<sp/>0.000</highlight></codeline>
<codeline><highlight class="normal">;<sp/>Time<sp/>0.63</highlight></codeline>
<codeline><highlight class="normal">0.000:<sp/>(init-planning-system)<sp/><sp/>[1.000]</highlight></codeline>
<codeline><highlight class="normal">1.001:<sp/>(move-to<sp/>center<sp/>w1)<sp/><sp/>[1.000]</highlight></codeline>
<codeline><highlight class="normal">2.002:<sp/>(signal-info-acquisition<sp/>w1)<sp/><sp/>[1.000]</highlight></codeline>
<codeline><highlight class="normal">3.003:<sp/>(manipulator-near-marker<sp/>w1)<sp/><sp/>[1.000]</highlight></codeline>
<codeline><highlight class="normal">4.004:<sp/>(acquire-hint<sp/>w1)<sp/><sp/>[1.000]</highlight></codeline>
<codeline><highlight class="normal">5.005:<sp/>(manipulator-far-marker<sp/>w1)<sp/><sp/>[1.000]</highlight></codeline>
<codeline><highlight class="normal">6.006:<sp/>(sherlock-is-thinking<sp/>w1)<sp/><sp/>[1.000]</highlight></codeline>
<codeline><highlight class="normal">7.007:<sp/>(move-to<sp/>w1<sp/>w2)<sp/><sp/>[1.000]</highlight></codeline>
<codeline><highlight class="normal">8.008:<sp/>(signal-info-acquisition<sp/>w2)<sp/><sp/>[1.000]</highlight></codeline>
<codeline><highlight class="normal">9.009:<sp/>(manipulator-near-marker<sp/>w2)<sp/><sp/>[1.000]</highlight></codeline>
<codeline><highlight class="normal">10.010:<sp/>(acquire-hint<sp/>w2)<sp/><sp/>[1.000]</highlight></codeline>
<codeline><highlight class="normal">11.011:<sp/>(manipulator-far-marker<sp/>w2)<sp/><sp/>[1.000]</highlight></codeline>
<codeline><highlight class="normal">12.012:<sp/>(sherlock-is-thinking<sp/>w2)<sp/><sp/>[1.000]</highlight></codeline>
<codeline><highlight class="normal">13.013:<sp/>(move-to<sp/>w2<sp/>w3)<sp/><sp/>[1.000]</highlight></codeline>
<codeline><highlight class="normal">14.014:<sp/>(signal-info-acquisition<sp/>w3)<sp/><sp/>[1.000]</highlight></codeline>
<codeline><highlight class="normal">15.015:<sp/>(manipulator-near-marker<sp/>w3)<sp/><sp/>[1.000]</highlight></codeline>
<codeline><highlight class="normal">16.016:<sp/>(acquire-hint<sp/>w3)<sp/><sp/>[1.000]</highlight></codeline>
<codeline><highlight class="normal">17.017:<sp/>(manipulator-far-marker<sp/>w3)<sp/><sp/>[1.000]</highlight></codeline>
<codeline><highlight class="normal">18.018:<sp/>(sherlock-is-thinking<sp/>w3)<sp/><sp/>[1.000]</highlight></codeline>
<codeline><highlight class="normal">19.019:<sp/>(bright-bulb-over-head<sp/>w3)<sp/><sp/>[1.000]</highlight></codeline>
<codeline><highlight class="normal">20.020:<sp/>(move-to-center<sp/>w3)<sp/><sp/>[1.000]</highlight></codeline>
<codeline><highlight class="normal">21.021:<sp/>(who-killed-doctor-black-huh-q1<sp/>id1)<sp/><sp/>[1.000]</highlight></codeline>
</programlisting></para>
<para><programlisting></programlisting> </para>
</sect2>
</sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
