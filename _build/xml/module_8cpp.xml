<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="module_8cpp" kind="file" language="C++">
    <compoundname>module.cpp</compoundname>
    <includes refid="module_8hpp" local="yes">module.hpp</includes>
    <incdepgraph>
      <node id="9">
        <label>ros/static_assert.h</label>
      </node>
      <node id="5">
        <label>cv_bridge/cv_bridge.h</label>
        <link refid="cv__bridge_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>stdexcept</label>
      </node>
      <node id="10">
        <label>opencv2/core/core.hpp</label>
      </node>
      <node id="6">
        <label>sensor_msgs/Image.h</label>
      </node>
      <node id="2">
        <label>module.hpp</label>
        <link refid="module_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>sensor_msgs/image_encodings.h</label>
      </node>
      <node id="12">
        <label>opencv2/imgproc/types_c.h</label>
      </node>
      <node id="11">
        <label>opencv2/imgproc/imgproc.hpp</label>
      </node>
      <node id="1">
        <label>robocluedo_dependencies/vision_opencv/cv_bridge/src/module.cpp</label>
        <link refid="module_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>boost/python.hpp</label>
      </node>
      <node id="14">
        <label>Python.h</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="7">
        <label>sensor_msgs/CompressedImage.h</label>
      </node>
      <node id="15">
        <label>numpy/ndarrayobject.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="module_8cpp_1a5936c8af885f06bac78eadc221e52a74" prot="public" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* mod_opencv</definition>
        <argsstring></argsstring>
        <name>mod_opencv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/module.cpp" line="37" column="10" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/module.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="module_8cpp_1a8c7ec70176ea133aefcb8643f6609953" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="simulation3_8cpp_1a4368e40a20e72e62974037baf19dba80" kindref="member">bp::object</ref></type>
        <definition>bp::object cvtColor2Wrap</definition>
        <argsstring>(bp::object obj_in, const std::string &amp;encoding_in, const std::string &amp;encoding_out)</argsstring>
        <name>cvtColor2Wrap</name>
        <param>
          <type><ref refid="simulation3_8cpp_1a4368e40a20e72e62974037baf19dba80" kindref="member">bp::object</ref></type>
          <declname>obj_in</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>encoding_in</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>encoding_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/module.cpp" line="40" column="1" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/module.cpp" bodystart="40" bodyend="51"/>
        <references refid="module_8hpp_1a6c0555e5d855fc3500098940533b8207" compoundref="module__opencv4_8cpp" startline="368" endline="372">convert_to_CvMat2</references>
        <references refid="namespacecv__bridge_1ab9a4ba669b03a3b0a35651a6c0d77be1" compoundref="cv__bridge_8cpp" startline="462" endline="466">cv_bridge::cvtColor</references>
        <references refid="simulation_8cpp_1a4368e40a20e72e62974037baf19dba80" compoundref="simulation_8cpp" startline="34">object</references>
        <references refid="module_8hpp_1a54170436318b2d6fd625feb75fb4c4c2">pyopencv_from</references>
      </memberdef>
      <memberdef kind="function" id="module_8cpp_1aa9d810d7cb2ab2982c77d0b44a4b13f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="simulation3_8cpp_1a4368e40a20e72e62974037baf19dba80" kindref="member">bp::object</ref></type>
        <definition>bp::object cvtColorForDisplayWrap</definition>
        <argsstring>(bp::object obj_in, const std::string &amp;encoding_in, const std::string &amp;encoding_out, bool do_dynamic_scaling=false, double min_image_value=0.0, double max_image_value=0.0)</argsstring>
        <name>cvtColorForDisplayWrap</name>
        <param>
          <type><ref refid="simulation3_8cpp_1a4368e40a20e72e62974037baf19dba80" kindref="member">bp::object</ref></type>
          <declname>obj_in</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>encoding_in</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>encoding_out</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_dynamic_scaling</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>double</type>
          <declname>min_image_value</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>max_image_value</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/module.cpp" line="54" column="1" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/module.cpp" bodystart="54" bodyend="75"/>
        <references refid="module_8hpp_1a6c0555e5d855fc3500098940533b8207" compoundref="module__opencv4_8cpp" startline="368" endline="372">convert_to_CvMat2</references>
        <references refid="namespacerosfacedetect_1a70f49839854fb47c872ee9769de83563" compoundref="rosfacedetect_8py" startline="44">rosfacedetect.options</references>
        <references refid="namespacecv__bridge_1ac82f0aba256a6eac48cf4378a8990268" compoundref="cv__bridge_8cpp" startline="576" endline="735">cv_bridge::cvtColorForDisplay</references>
        <references refid="simulation_8cpp_1a4368e40a20e72e62974037baf19dba80" compoundref="simulation_8cpp" startline="34">object</references>
        <references refid="module_8hpp_1a54170436318b2d6fd625feb75fb4c4c2">pyopencv_from</references>
      </memberdef>
      <memberdef kind="function" id="module_8cpp_1a383cca781ddc8c10da434d9654bc1f6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CV_MAT_CNWrap</definition>
        <argsstring>(int i)</argsstring>
        <name>CV_MAT_CNWrap</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/module.cpp" line="79" column="5" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/module.cpp" bodystart="79" bodyend="81"/>
        <referencedby refid="classcv__bridge_1_1core_1_1_cv_bridge_1a421cf0c5b17751fa2cd5624e8880afe4" compoundref="core_8py" startline="86" endline="89">cv_bridge.core.CvBridge.cvtype2_to_dtype_with_channels</referencedby>
      </memberdef>
      <memberdef kind="function" id="module_8cpp_1a874189b278582e249cc976047eed5fd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CV_MAT_DEPTHWrap</definition>
        <argsstring>(int i)</argsstring>
        <name>CV_MAT_DEPTHWrap</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/module.cpp" line="83" column="5" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/module.cpp" bodystart="83" bodyend="85"/>
        <referencedby refid="classcv__bridge_1_1core_1_1_cv_bridge_1a421cf0c5b17751fa2cd5624e8880afe4" compoundref="core_8py" startline="86" endline="89">cv_bridge.core.CvBridge.cvtype2_to_dtype_with_channels</referencedby>
      </memberdef>
      <memberdef kind="function" id="module_8cpp_1a6e928ac22c55a4080df0aa468dd71825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_PYTHON_MODULE</definition>
        <argsstring>(cv_bridge_boost)</argsstring>
        <name>BOOST_PYTHON_MODULE</name>
        <param>
          <type>cv_bridge_boost</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/module.cpp" line="87" column="1" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/module.cpp" bodystart="87" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Software<sp/>License<sp/>Agreement<sp/>(BSD<sp/>License)</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/><sp/>Copyright<sp/>(c)<sp/>2012,<sp/>Willow<sp/>Garage,<sp/>Inc.</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/><sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/><sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Willow<sp/>Garage<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/><sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/><sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS</highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/><sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/><sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,</highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/><sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/><sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/><sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/><sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/><sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/><sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="module_8hpp" kindref="compound">module.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="module_8cpp_1a5936c8af885f06bac78eadc221e52a74" refkind="member"><highlight class="normal">PyObject<sp/>*<ref refid="module_8cpp_1a5936c8af885f06bac78eadc221e52a74" kindref="member">mod_opencv</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="simulation_8cpp_1a4368e40a20e72e62974037baf19dba80" kindref="member">bp::object</ref></highlight></codeline>
<codeline lineno="40" refid="module_8cpp_1a8c7ec70176ea133aefcb8643f6609953" refkind="member"><highlight class="normal"><ref refid="module_8cpp_1a8c7ec70176ea133aefcb8643f6609953" kindref="member">cvtColor2Wrap</ref>(<ref refid="simulation_8cpp_1a4368e40a20e72e62974037baf19dba80" kindref="member">bp::object</ref><sp/>obj_in,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>encoding_in,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>encoding_out)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>the<sp/>Python<sp/>input<sp/>to<sp/>an<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>mat_in;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="module_8hpp_1a6c0555e5d855fc3500098940533b8207" kindref="member">convert_to_CvMat2</ref>(obj_in.ptr(),<sp/>mat_in);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>cv_bridge<sp/>for<sp/>color<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="namespacecv__bridge_1a1be6ad7c0a2d37ef773198f59ed2f456" kindref="member">cv_bridge::CvImagePtr</ref><sp/>cv_image(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcv__bridge_1_1_cv_image" kindref="compound">cv_bridge::CvImage</ref>(std_msgs::Header(),<sp/>encoding_in,<sp/>mat_in));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>mat<sp/>=<sp/><ref refid="namespacecv__bridge_1ab9a4ba669b03a3b0a35651a6c0d77be1" kindref="member">cv_bridge::cvtColor</ref>(cv_image,<sp/>encoding_out)-&gt;image;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="simulation_8cpp_1a4368e40a20e72e62974037baf19dba80" kindref="member">bp::object</ref>(boost::python::handle&lt;&gt;(<ref refid="module_8hpp_1a54170436318b2d6fd625feb75fb4c4c2" kindref="member">pyopencv_from</ref>(mat)));</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="simulation_8cpp_1a4368e40a20e72e62974037baf19dba80" kindref="member">bp::object</ref></highlight></codeline>
<codeline lineno="54" refid="module_8cpp_1aa9d810d7cb2ab2982c77d0b44a4b13f3" refkind="member"><highlight class="normal"><ref refid="module_8cpp_1aa9d810d7cb2ab2982c77d0b44a4b13f3" kindref="member">cvtColorForDisplayWrap</ref>(<ref refid="simulation_8cpp_1a4368e40a20e72e62974037baf19dba80" kindref="member">bp::object</ref><sp/>obj_in,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>encoding_in,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>encoding_out,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_dynamic_scaling<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_image_value<sp/>=<sp/>0.0,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_image_value<sp/>=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>the<sp/>Python<sp/>input<sp/>to<sp/>an<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>mat_in;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="module_8hpp_1a6c0555e5d855fc3500098940533b8207" kindref="member">convert_to_CvMat2</ref>(obj_in.ptr(),<sp/>mat_in);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="namespacecv__bridge_1a1be6ad7c0a2d37ef773198f59ed2f456" kindref="member">cv_bridge::CvImagePtr</ref><sp/>cv_image(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcv__bridge_1_1_cv_image" kindref="compound">cv_bridge::CvImage</ref>(std_msgs::Header(),<sp/>encoding_in,<sp/>mat_in));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="structcv__bridge_1_1_cvt_color_for_display_options" kindref="compound">cv_bridge::CvtColorForDisplayOptions</ref><sp/><ref refid="namespacerosfacedetect_1a70f49839854fb47c872ee9769de83563" kindref="member">options</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="namespacerosfacedetect_1a70f49839854fb47c872ee9769de83563" kindref="member">options</ref>.do_dynamic_scaling<sp/>=<sp/>do_dynamic_scaling;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><ref refid="namespacerosfacedetect_1a70f49839854fb47c872ee9769de83563" kindref="member">options</ref>.min_image_value<sp/>=<sp/>min_image_value;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="namespacerosfacedetect_1a70f49839854fb47c872ee9769de83563" kindref="member">options</ref>.max_image_value<sp/>=<sp/>max_image_value;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>mat<sp/>=<sp/><ref refid="namespacecv__bridge_1ac82f0aba256a6eac48cf4378a8990268" kindref="member">cv_bridge::cvtColorForDisplay</ref>(</highlight><highlight class="comment">/*source=*/</highlight><highlight class="normal">cv_image,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*encoding_out=*/</highlight><highlight class="normal">encoding_out,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*options=*/</highlight><highlight class="normal"><ref refid="namespacerosfacedetect_1a70f49839854fb47c872ee9769de83563" kindref="member">options</ref>)-&gt;image;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="simulation_8cpp_1a4368e40a20e72e62974037baf19dba80" kindref="member">bp::object</ref>(boost::python::handle&lt;&gt;(<ref refid="module_8hpp_1a54170436318b2d6fd625feb75fb4c4c2" kindref="member">pyopencv_from</ref>(mat)));</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">BOOST_PYTHON_FUNCTION_OVERLOADS(cvtColorForDisplayWrap_overloads,<sp/><ref refid="module_8cpp_1aa9d810d7cb2ab2982c77d0b44a4b13f3" kindref="member">cvtColorForDisplayWrap</ref>,<sp/>3,<sp/>6)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="module_8cpp_1a383cca781ddc8c10da434d9654bc1f6e" refkind="member"><highlight class="normal">int<sp/><ref refid="module_8cpp_1a383cca781ddc8c10da434d9654bc1f6e" kindref="member">CV_MAT_CNWrap</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CV_MAT_CN(i);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="module_8cpp_1a874189b278582e249cc976047eed5fd6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="module_8cpp_1a874189b278582e249cc976047eed5fd6" kindref="member">CV_MAT_DEPTHWrap</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CV_MAT_DEPTH(i);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="module_8cpp_1a6e928ac22c55a4080df0aa468dd71825" refkind="member"><highlight class="normal"><ref refid="module_8cpp_1a6e928ac22c55a4080df0aa468dd71825" kindref="member">BOOST_PYTHON_MODULE</ref>(cv_bridge_boost)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>do_numpy_import();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="module_8cpp_1a5936c8af885f06bac78eadc221e52a74" kindref="member">mod_opencv</ref><sp/>=<sp/>PyImport_ImportModule(</highlight><highlight class="stringliteral">&quot;cv2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Wrap<sp/>the<sp/>function<sp/>to<sp/>get<sp/>encodings<sp/>as<sp/>OpenCV<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>boost::python::def(</highlight><highlight class="stringliteral">&quot;getCvType&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacecv__bridge_1a60b43d74db6ef87fd6cd35d9305b1ef1" kindref="member">cv_bridge::getCvType</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>boost::python::def(</highlight><highlight class="stringliteral">&quot;cvtColor2&quot;</highlight><highlight class="normal">,<sp/><ref refid="module_8cpp_1a8c7ec70176ea133aefcb8643f6609953" kindref="member">cvtColor2Wrap</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>boost::python::def(</highlight><highlight class="stringliteral">&quot;CV_MAT_CNWrap&quot;</highlight><highlight class="normal">,<sp/><ref refid="module_8cpp_1a383cca781ddc8c10da434d9654bc1f6e" kindref="member">CV_MAT_CNWrap</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>boost::python::def(</highlight><highlight class="stringliteral">&quot;CV_MAT_DEPTHWrap&quot;</highlight><highlight class="normal">,<sp/><ref refid="module_8cpp_1a874189b278582e249cc976047eed5fd6" kindref="member">CV_MAT_DEPTHWrap</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>boost::python::def(</highlight><highlight class="stringliteral">&quot;cvtColorForDisplay&quot;</highlight><highlight class="normal">,<sp/><ref refid="module_8cpp_1aa9d810d7cb2ab2982c77d0b44a4b13f3" kindref="member">cvtColorForDisplayWrap</ref>,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cvtColorForDisplayWrap_overloads(</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacerosfacedetect_1acd872233149ff2374b8b631a0f1d2e67" kindref="member">boost::python::args</ref>(</highlight><highlight class="stringliteral">&quot;source&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;encoding_in&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;encoding_out&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;do_dynamic_scaling&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;min_image_value&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;max_image_value&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Convert<sp/>image<sp/>to<sp/>display<sp/>with<sp/>specified<sp/>encodings.\n\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Args:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>source<sp/>(numpy.ndarray):<sp/>input<sp/>image\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>encoding_in<sp/>(str):<sp/>input<sp/>image<sp/>encoding\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>encoding_out<sp/>(str):<sp/>encoding<sp/>to<sp/>which<sp/>the<sp/>image<sp/>conveted\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>do_dynamic_scaling<sp/>(bool):<sp/>flag<sp/>to<sp/>do<sp/>dynamic<sp/>scaling<sp/>with<sp/>min/max<sp/>value\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>min_image_value<sp/>(float):<sp/>minimum<sp/>pixel<sp/>value<sp/>for<sp/>dynamic<sp/>scaling\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>max_image_value<sp/>(float):<sp/>maximum<sp/>pixel<sp/>value<sp/>for<sp/>dynamic<sp/>scaling\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/module.cpp"/>
  </compounddef>
</doxygen>
