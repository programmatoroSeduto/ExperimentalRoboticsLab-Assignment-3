<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="test__compression_8cpp" kind="file" language="C++">
    <compoundname>test_compression.cpp</compoundname>
    <includes refid="cv__bridge_8h" local="no">cv_bridge/cv_bridge.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">gtest/gtest.h</includes>
    <incdepgraph>
      <node id="6">
        <label>ros/static_assert.h</label>
      </node>
      <node id="2">
        <label>cv_bridge/cv_bridge.h</label>
        <link refid="cv__bridge_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stdexcept</label>
      </node>
      <node id="7">
        <label>opencv2/core/core.hpp</label>
      </node>
      <node id="3">
        <label>sensor_msgs/Image.h</label>
      </node>
      <node id="5">
        <label>sensor_msgs/image_encodings.h</label>
      </node>
      <node id="9">
        <label>opencv2/imgproc/types_c.h</label>
      </node>
      <node id="8">
        <label>opencv2/imgproc/imgproc.hpp</label>
      </node>
      <node id="12">
        <label>gtest/gtest.h</label>
      </node>
      <node id="1">
        <label>robocluedo_dependencies/vision_opencv/cv_bridge/test/test_compression.cpp</label>
        <link refid="test__compression_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sensor_msgs/CompressedImage.h</label>
      </node>
      <node id="11">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__compression_8cpp_1a4a83d5ef9bb4eb154f7dfbab5e11cde8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(CvBridgeTest, compression)</argsstring>
        <name>TEST</name>
        <param>
          <type>CvBridgeTest</type>
        </param>
        <param>
          <type>compression</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/test/test_compression.cpp" line="5" column="1" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/test/test_compression.cpp" bodystart="5" bodyend="36"/>
        <references refid="classcv__bridge_1_1_cv_image_1a39163ba516149204027cd5f237d69f63" compoundref="cv__bridge_8cpp" startline="470" endline="475">cv_bridge::CvImage::toCompressedImageMsg</references>
        <references refid="namespacecv__bridge_1a166887feb09ea6ce14e8742384e574bfa0a36eb1d5d593f0c0c5b298ae353ab94" compoundref="cv__bridge_8h" startline="99">cv_bridge::PNG</references>
        <references refid="namespacecv__bridge_1acbf2da402f4d3e505613e95b5a2aed35" compoundref="cv__bridge_8cpp" startline="425" endline="429">cv_bridge::toCvCopy</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cv__bridge_8h" kindref="compound">cv_bridge/cv_bridge.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="test__compression_8cpp_1a4a83d5ef9bb4eb154f7dfbab5e11cde8" refkind="member"><highlight class="normal"><ref refid="test__compression_8cpp_1a4a83d5ef9bb4eb154f7dfbab5e11cde8" kindref="member">TEST</ref>(CvBridgeTest,<sp/>compression)</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/>cv::RNG<sp/>rng(0);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>std_msgs::Header<sp/>header;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>3<sp/>channel<sp/>images.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>++i)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>format<sp/>=<sp/>(i<sp/>==<sp/>0)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;bgr8&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;rgb8&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat_&lt;cv::Vec3b&gt;<sp/>in(10,<sp/>10);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>rng.fill(in,<sp/>cv::RNG::UNIFORM,<sp/>0,<sp/>256);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor_msgs::CompressedImagePtr<sp/>msg<sp/>=<sp/><ref refid="classcv__bridge_1_1_cv_image" kindref="compound">cv_bridge::CvImage</ref>(header,<sp/>format,<sp/>in).<ref refid="classcv__bridge_1_1_cv_image_1a39163ba516149204027cd5f237d69f63" kindref="member">toCompressedImageMsg</ref>(<ref refid="namespacecv__bridge_1a166887feb09ea6ce14e8742384e574bfa0a36eb1d5d593f0c0c5b298ae353ab94" kindref="member">cv_bridge::PNG</ref>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecv__bridge_1a87c18e83f76df1e0383ba9be59502d00" kindref="member">cv_bridge::CvImageConstPtr</ref><sp/>out<sp/>=<sp/><ref refid="namespacecv__bridge_1acbf2da402f4d3e505613e95b5a2aed35" kindref="member">cv_bridge::toCvCopy</ref>(msg,<sp/>format);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(out-&gt;image.channels(),<sp/>3);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(cv::norm(out-&gt;image,<sp/>in),<sp/>0);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>4<sp/>channel<sp/>images.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>++i)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>format<sp/>=<sp/>(i<sp/>==<sp/>0)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;bgra8&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;rgba8&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat_&lt;cv::Vec4b&gt;<sp/>in(10,<sp/>10);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>rng.fill(in,<sp/>cv::RNG::UNIFORM,<sp/>0,<sp/>256);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor_msgs::CompressedImagePtr<sp/>msg<sp/>=<sp/><ref refid="classcv__bridge_1_1_cv_image" kindref="compound">cv_bridge::CvImage</ref>(header,<sp/>format,<sp/>in).<ref refid="classcv__bridge_1_1_cv_image_1a39163ba516149204027cd5f237d69f63" kindref="member">toCompressedImageMsg</ref>(<ref refid="namespacecv__bridge_1a166887feb09ea6ce14e8742384e574bfa0a36eb1d5d593f0c0c5b298ae353ab94" kindref="member">cv_bridge::PNG</ref>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecv__bridge_1a87c18e83f76df1e0383ba9be59502d00" kindref="member">cv_bridge::CvImageConstPtr</ref><sp/>out<sp/>=<sp/><ref refid="namespacecv__bridge_1acbf2da402f4d3e505613e95b5a2aed35" kindref="member">cv_bridge::toCvCopy</ref>(msg,<sp/>format);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(out-&gt;image.channels(),<sp/>4);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(cv::norm(out-&gt;image,<sp/>in),<sp/>0);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="robocluedo_dependencies/vision_opencv/cv_bridge/test/test_compression.cpp"/>
  </compounddef>
</doxygen>
