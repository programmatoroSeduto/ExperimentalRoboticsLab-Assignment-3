<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="cameraparameters_8cpp" kind="file" language="C++">
    <compoundname>cameraparameters.cpp</compoundname>
    <includes refid="cameraparameters_8h" local="yes">cameraparameters.h</includes>
    <includes local="no">opencv2/calib3d.hpp</includes>
    <includes local="no">opencv2/core.hpp</includes>
    <includes local="no">fstream</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="2">
        <label>cameraparameters.h</label>
        <link refid="cameraparameters_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stdexcept</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="7">
        <label>opencv2/calib3d.hpp</label>
      </node>
      <node id="8">
        <label>fstream</label>
      </node>
      <node id="4">
        <label>opencv2/core.hpp</label>
      </node>
      <node id="3">
        <label>aruco_export.h</label>
        <link refid="aruco__export_8h"/>
      </node>
      <node id="9">
        <label>iostream</label>
      </node>
      <node id="1">
        <label>robocluedo_dependencies/aruco_ros/aruco/src/aruco/cameraparameters.cpp</label>
        <link refid="cameraparameters_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacearuco">aruco</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="29"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cameraparameters_8h" kindref="compound">cameraparameters.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/calib3d.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/core.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearuco" kindref="compound">aruco</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classaruco_1_1_camera_parameters_1a23e30ef777f22f819a332592bf3db075" refkind="member"><highlight class="normal"><ref refid="classaruco_1_1_camera_parameters_1a23e30ef777f22f819a332592bf3db075" kindref="member">CameraParameters::CameraParameters</ref>()</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref><sp/>=<sp/>cv::Mat();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref><sp/>=<sp/>cv::Mat();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1aceb1bd577d65e459a8946e44b04e6c99" kindref="member">ExtrinsicMatrix</ref><sp/>=<sp/>cv::Mat();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1a08fdd4888daf7140cf31bdd341c3f303" kindref="member">CamSize</ref><sp/>=<sp/>cv::Size(-1,<sp/>-1);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classaruco_1_1_camera_parameters_1a8abee4cd106b36900f0860b39ea7ef2a" refkind="member"><highlight class="normal"><ref refid="classaruco_1_1_camera_parameters_1a23e30ef777f22f819a332592bf3db075" kindref="member">CameraParameters::CameraParameters</ref>(cv::Mat<sp/>cameraMatrix,<sp/>cv::Mat<sp/>distorsionCoeff,<sp/>cv::Size<sp/>size)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1af51ad02ac8a968ed20161baa18ca6435" kindref="member">setParams</ref>(cameraMatrix,<sp/>distorsionCoeff,<sp/>size);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classaruco_1_1_camera_parameters_1a9f9c0c3a68c29f3f5dd2b718de5217e1" refkind="member"><highlight class="normal"><ref refid="classaruco_1_1_camera_parameters_1a23e30ef777f22f819a332592bf3db075" kindref="member">CameraParameters::CameraParameters</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_camera_parameters" kindref="compound">CameraParameters</ref>&amp;<sp/>CI)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>CI.<ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>.copyTo(<ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>CI.<ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref>.copyTo(<ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>CI.<ref refid="classaruco_1_1_camera_parameters_1aceb1bd577d65e459a8946e44b04e6c99" kindref="member">ExtrinsicMatrix</ref>.copyTo(<ref refid="classaruco_1_1_camera_parameters_1aceb1bd577d65e459a8946e44b04e6c99" kindref="member">ExtrinsicMatrix</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1a08fdd4888daf7140cf31bdd341c3f303" kindref="member">CamSize</ref><sp/>=<sp/>CI.<ref refid="classaruco_1_1_camera_parameters_1a08fdd4888daf7140cf31bdd341c3f303" kindref="member">CamSize</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classaruco_1_1_camera_parameters_1a4c13267368caccb7d05e79769460e1b3" refkind="member"><highlight class="normal"><ref refid="classaruco_1_1_camera_parameters" kindref="compound">CameraParameters</ref>&amp;<sp/><ref refid="classaruco_1_1_camera_parameters_1a4c13267368caccb7d05e79769460e1b3" kindref="member">CameraParameters::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_camera_parameters" kindref="compound">CameraParameters</ref>&amp;<sp/>CI)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>CI.<ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>.copyTo(<ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>CI.<ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref>.copyTo(<ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>CI.<ref refid="classaruco_1_1_camera_parameters_1aceb1bd577d65e459a8946e44b04e6c99" kindref="member">ExtrinsicMatrix</ref>.copyTo(<ref refid="classaruco_1_1_camera_parameters_1aceb1bd577d65e459a8946e44b04e6c99" kindref="member">ExtrinsicMatrix</ref>);<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1a08fdd4888daf7140cf31bdd341c3f303" kindref="member">CamSize</ref><sp/>=<sp/>CI.<ref refid="classaruco_1_1_camera_parameters_1a08fdd4888daf7140cf31bdd341c3f303" kindref="member">CamSize</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classaruco_1_1_camera_parameters_1af51ad02ac8a968ed20161baa18ca6435" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_camera_parameters_1af51ad02ac8a968ed20161baa18ca6435" kindref="member">CameraParameters::setParams</ref>(cv::Mat<sp/>cameraMatrix,<sp/>cv::Mat<sp/>distorsionCoeff,<sp/>cv::Size<sp/>size)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>auxCamMatrix;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1aceb1bd577d65e459a8946e44b04e6c99" kindref="member">ExtrinsicMatrix</ref><sp/>=<sp/>cv::Mat::zeros(1,<sp/>3,<sp/>CV_64FC1);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cameraMatrix.rows<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>cameraMatrix.cols<sp/>==<sp/>4)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1aceb1bd577d65e459a8946e44b04e6c99" kindref="member">ExtrinsicMatrix</ref>.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,0)<sp/>=<sp/>cameraMatrix.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,<sp/>3);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1aceb1bd577d65e459a8946e44b04e6c99" kindref="member">ExtrinsicMatrix</ref>.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,1)<sp/>=<sp/>cameraMatrix.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(1,<sp/>3);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1aceb1bd577d65e459a8946e44b04e6c99" kindref="member">ExtrinsicMatrix</ref>.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,2)<sp/>=<sp/>cameraMatrix.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(2,<sp/>3);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Change<sp/>size<sp/>to<sp/>3x3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>auxCamMatrix<sp/>=<sp/>cameraMatrix(cv::Rect(0,0,3,3)).clone();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>cameraMatrix<sp/>=<sp/>auxCamMatrix;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cameraMatrix.rows<sp/>!=<sp/>3<sp/>||<sp/>cameraMatrix.cols<sp/>!=<sp/>3)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>cv::Exception(9000,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>input<sp/>cameraMatrix&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CameraParameters::setParams&quot;</highlight><highlight class="normal">,<sp/>__FILE__,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>cameraMatrix.convertTo(<ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>,<sp/>CV_32FC1);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distorsionCoeff.total()<sp/>&lt;<sp/>4<sp/>||<sp/>distorsionCoeff.total()<sp/>&gt;=<sp/>7)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>cv::Exception(9000,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>input<sp/>distorsionCoeff&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CameraParameters::setParams&quot;</highlight><highlight class="normal">,<sp/>__FILE__,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>__LINE__);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>auxD;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>distorsionCoeff.convertTo(<ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref>,<sp/>CV_32FC1);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Distorsion.create(1,<sp/>4,<sp/>CV_32FC1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Distorsion.ptr&lt;float&gt;(0)[i]=auxD.ptr&lt;float&gt;(0)[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1a08fdd4888daf7140cf31bdd341c3f303" kindref="member">CamSize</ref><sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classaruco_1_1_camera_parameters_1ab3f102b448814ed007788d9d6020beb2" refkind="member"><highlight class="normal">cv::Point3f<sp/><ref refid="classaruco_1_1_camera_parameters_1ab3f102b448814ed007788d9d6020beb2" kindref="member">CameraParameters::getCameraLocation</ref>(cv::Mat<sp/>Rvec,<sp/>cv::Mat<sp/>Tvec)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>m33(3,<sp/>3,<sp/>CV_32FC1);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>cv::Rodrigues(Rvec,<sp/>m33);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>m44<sp/>=<sp/>cv::Mat::eye(4,<sp/>4,<sp/>CV_32FC1);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>j++)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m44.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(i,<sp/>j)<sp/>=<sp/>m33.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(i,<sp/>j);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now,<sp/>add<sp/>translation<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>m44.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(i,<sp/>3)<sp/>=<sp/>Tvec.ptr&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0)[i];</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>invert<sp/>the<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>m44.inv();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cv::Point3f(m44.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0,<sp/>3),<sp/>m44.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(1,<sp/>3),<sp/>m44.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(2,<sp/>3));</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classaruco_1_1_camera_parameters_1aa648ee51d375fd3f74e45eecf1f489f4" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_camera_parameters_1aa648ee51d375fd3f74e45eecf1f489f4" kindref="member">CameraParameters::saveToFile</ref>(std::string<sp/>path,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inXML)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classaruco_1_1_camera_parameters_1ab5ff265805e264fb13f119b97e0597f7" kindref="member">isValid</ref>())</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>cv::Exception(9006,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>object&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CameraParameters::saveToFile&quot;</highlight><highlight class="normal">,<sp/>__FILE__,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inXML)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ofstream<sp/>file(path.c_str());</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>cv::Exception(9006,<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>open<sp/>file:&quot;</highlight><highlight class="normal"><sp/>+<sp/>path,<sp/></highlight><highlight class="stringliteral">&quot;CameraParameters::saveToFile&quot;</highlight><highlight class="normal">,<sp/>__FILE__,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__LINE__);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>ArUco<sp/>1.0<sp/>CameraParameters&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fx<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0,<sp/>0)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;cx<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0,<sp/>2)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fy<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(1,<sp/>1)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;cy<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(1,<sp/>2)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;k1<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0,<sp/>0)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;k2<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(1,<sp/>0)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;p1<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(2,<sp/>0)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;p2<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(3,<sp/>0)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;tx<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classaruco_1_1_camera_parameters_1aceb1bd577d65e459a8946e44b04e6c99" kindref="member">ExtrinsicMatrix</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0,<sp/>0)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ty<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classaruco_1_1_camera_parameters_1aceb1bd577d65e459a8946e44b04e6c99" kindref="member">ExtrinsicMatrix</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(1,<sp/>0)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;tz<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classaruco_1_1_camera_parameters_1aceb1bd577d65e459a8946e44b04e6c99" kindref="member">ExtrinsicMatrix</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(2,<sp/>0)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;width<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classaruco_1_1_camera_parameters_1a08fdd4888daf7140cf31bdd341c3f303" kindref="member">CamSize</ref>.width<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;height<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classaruco_1_1_camera_parameters_1a08fdd4888daf7140cf31bdd341c3f303" kindref="member">CamSize</ref>.height<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::FileStorage<sp/>fs(path,<sp/>cv::FileStorage::WRITE);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>fs<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;image_width&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classaruco_1_1_camera_parameters_1a08fdd4888daf7140cf31bdd341c3f303" kindref="member">CamSize</ref>.width;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>fs<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;image_height&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classaruco_1_1_camera_parameters_1a08fdd4888daf7140cf31bdd341c3f303" kindref="member">CamSize</ref>.height;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>fs<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;camera_matrix&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>fs<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;distortion_coefficients&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>fs<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;extrinsics&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classaruco_1_1_camera_parameters_1aceb1bd577d65e459a8946e44b04e6c99" kindref="member">ExtrinsicMatrix</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="classaruco_1_1_camera_parameters_1aabf139725fb75759b4172a53de63100f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_camera_parameters_1aabf139725fb75759b4172a53de63100f" kindref="member">CameraParameters::resize</ref>(cv::Size<sp/>size)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classaruco_1_1_camera_parameters_1ab5ff265805e264fb13f119b97e0597f7" kindref="member">isValid</ref>())</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>cv::Exception(9007,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>object&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CameraParameters::resize&quot;</highlight><highlight class="normal">,<sp/>__FILE__,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/><ref refid="classaruco_1_1_camera_parameters_1a08fdd4888daf7140cf31bdd341c3f303" kindref="member">CamSize</ref>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now,<sp/>read<sp/>the<sp/>camera<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>resize<sp/>the<sp/>camera<sp/>parameters<sp/>to<sp/>fit<sp/>this<sp/>image<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>AxFactor<sp/>=<sp/>float(size.width)<sp/>/<sp/>float(<ref refid="classaruco_1_1_camera_parameters_1a08fdd4888daf7140cf31bdd341c3f303" kindref="member">CamSize</ref>.width);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>AyFactor<sp/>=<sp/>float(size.height)<sp/>/<sp/>float(<ref refid="classaruco_1_1_camera_parameters_1a08fdd4888daf7140cf31bdd341c3f303" kindref="member">CamSize</ref>.height);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0,<sp/>0)<sp/>*=<sp/>AxFactor;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0,<sp/>2)<sp/>*=<sp/>AxFactor;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(1,<sp/>1)<sp/>*=<sp/>AyFactor;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(1,<sp/>2)<sp/>*=<sp/>AyFactor;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1a08fdd4888daf7140cf31bdd341c3f303" kindref="member">CamSize</ref><sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="classaruco_1_1_camera_parameters_1a1bad10cf93f5e1fd201a18b3c53b5a20" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_camera_parameters_1a1bad10cf93f5e1fd201a18b3c53b5a20" kindref="member">CameraParameters::readFromXMLFile</ref>(std::string<sp/>filePath)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>cv::FileStorage<sp/>fs(filePath,<sp/>cv::FileStorage::READ);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fs.isOpened())</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;CameraParameters::readFromXMLFile<sp/>could<sp/>not<sp/>open<sp/>file:&quot;</highlight><highlight class="normal"><sp/>+<sp/>filePath);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>-1,<sp/>h<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>MCamera,<sp/>MDist,<sp/>MExtrinsics;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>fs[</highlight><highlight class="stringliteral">&quot;image_width&quot;</highlight><highlight class="normal">]<sp/>&gt;&gt;<sp/>w;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>fs[</highlight><highlight class="stringliteral">&quot;image_height&quot;</highlight><highlight class="normal">]<sp/>&gt;&gt;<sp/>h;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>fs[</highlight><highlight class="stringliteral">&quot;distortion_coefficients&quot;</highlight><highlight class="normal">]<sp/>&gt;&gt;<sp/>MDist;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>fs[</highlight><highlight class="stringliteral">&quot;camera_matrix&quot;</highlight><highlight class="normal">]<sp/>&gt;&gt;<sp/>MCamera;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>fs[</highlight><highlight class="stringliteral">&quot;extrinsics&quot;</highlight><highlight class="normal">]<sp/>&gt;&gt;<sp/>MExtrinsics;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MCamera.cols<sp/>==<sp/>0<sp/>||<sp/>MCamera.rows<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>fs[</highlight><highlight class="stringliteral">&quot;Camera_Matrix&quot;</highlight><highlight class="normal">]<sp/>&gt;&gt;<sp/>MCamera;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MCamera.cols<sp/>==<sp/>0<sp/>||<sp/>MCamera.rows<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>cv::Exception(9007,<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>:&quot;</highlight><highlight class="normal"><sp/>+<sp/>filePath<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>does<sp/>not<sp/>contain<sp/>valid<sp/>camera<sp/>matrix&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;CameraParameters::readFromXML&quot;</highlight><highlight class="normal">,<sp/>__FILE__,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>==<sp/>-1<sp/>||<sp/>h<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>fs[</highlight><highlight class="stringliteral">&quot;image_Width&quot;</highlight><highlight class="normal">]<sp/>&gt;&gt;<sp/>w;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>fs[</highlight><highlight class="stringliteral">&quot;image_Height&quot;</highlight><highlight class="normal">]<sp/>&gt;&gt;<sp/>h;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>==<sp/>-1<sp/>||<sp/>h<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>cv::Exception(9007,<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>:&quot;</highlight><highlight class="normal"><sp/>+<sp/>filePath<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>does<sp/>not<sp/>contain<sp/>valid<sp/>camera<sp/>dimensions&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;CameraParameters::readFromXML&quot;</highlight><highlight class="normal">,<sp/>__FILE__,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MCamera.type()<sp/>!=<sp/>CV_32FC1)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>MCamera.convertTo(<ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>,<sp/>CV_32FC1);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref><sp/>=<sp/>MCamera;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MDist.total()<sp/>&lt;<sp/>4)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>fs[</highlight><highlight class="stringliteral">&quot;Distortion_Coefficients&quot;</highlight><highlight class="normal">]<sp/>&gt;&gt;<sp/>MDist;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MDist.total()<sp/>&lt;<sp/>4)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>cv::Exception(9007,<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>:&quot;</highlight><highlight class="normal"><sp/>+<sp/>filePath<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>does<sp/>not<sp/>contain<sp/>valid<sp/>distortion_coefficients&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;CameraParameters::readFromXML&quot;</highlight><highlight class="normal">,<sp/>__FILE__,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>to<sp/>32<sp/>and<sp/>get<sp/>the<sp/>4<sp/>first<sp/>elements<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>mdist32;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>MDist.convertTo(mdist32,<sp/>CV_32FC1);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Distorsion.create(1,<sp/>4,<sp/>CV_32FC1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Distorsion.ptr&lt;float&gt;(0)[i]=mdist32.ptr&lt;float&gt;(0)[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref>.create(1,<sp/>5,<sp/>CV_32FC1);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref>.ptr&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0)[i]<sp/>=<sp/>mdist32.ptr&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0)[i];</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1a08fdd4888daf7140cf31bdd341c3f303" kindref="member">CamSize</ref>.width<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_camera_parameters_1a08fdd4888daf7140cf31bdd341c3f303" kindref="member">CamSize</ref>.height<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="classaruco_1_1_camera_parameters_1adbfb82ecadfbe6c59c47798f558064ac" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_camera_parameters_1adbfb82ecadfbe6c59c47798f558064ac" kindref="member">CameraParameters::glGetProjectionMatrix</ref>(cv::Size<sp/>orgImgSize,<sp/>cv::Size<sp/>size,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>proj_matrix[16],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gnear,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gfar,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>invert)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cv::countNonZero(<ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CameraParameters::glGetProjectionMatrix<sp/>::<sp/>The<sp/>camera<sp/>has<sp/>distortion<sp/>coefficients<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>__FILE__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>__LINE__<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classaruco_1_1_camera_parameters_1ab5ff265805e264fb13f119b97e0597f7" kindref="member">isValid</ref>()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>cv::Exception(9100,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>camera<sp/>parameters&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CameraParameters::glGetProjectionMatrix&quot;</highlight><highlight class="normal">,<sp/>__FILE__,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>__LINE__);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>the<sp/>resized<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ax<sp/>=<sp/>double(size.width)<sp/>/<sp/>double(orgImgSize.width);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ay<sp/>=<sp/>double(size.height)<sp/>/<sp/>double(orgImgSize.height);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_fx<sp/>=<sp/><ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0,<sp/>0)<sp/>*<sp/>Ax;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_cx<sp/>=<sp/><ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0,<sp/>2)<sp/>*<sp/>Ax;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_fy<sp/>=<sp/><ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(1,<sp/>1)<sp/>*<sp/>Ay;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_cy<sp/>=<sp/><ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(1,<sp/>2)<sp/>*<sp/>Ay;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cparam[3][4]<sp/>=<sp/>{<sp/>{_fx,<sp/>0,<sp/>_cx,<sp/>0},<sp/>{0,<sp/>_fy,<sp/>_cy,<sp/>0},<sp/>{0,<sp/>0,<sp/>1,<sp/>0}};</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>argConvGLcpara2(cparam,<sp/>size.width,<sp/>size.height,<sp/>gnear,<sp/>gfar,<sp/>proj_matrix,<sp/>invert);</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>CameraParameters::norm(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(std::sqrt(a<sp/>*<sp/>a<sp/>+<sp/>b<sp/>*<sp/>b<sp/>+<sp/>c<sp/>*<sp/>c));</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>CameraParameters::dot(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a3,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b3)</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a1<sp/>*<sp/>b1<sp/>+<sp/>a2<sp/>*<sp/>b2<sp/>+<sp/>a3<sp/>*<sp/>b3);</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CameraParameters::argConvGLcpara2(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cparam[3][4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gnear,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gfar,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m[16],<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>invert)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>icpara[3][4];</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trans[3][4];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p[3][3],<sp/>q[4][4];</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>cparam[0][2]<sp/>*=<sp/>-1.0;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>cparam[1][2]<sp/>*=<sp/>-1.0;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>cparam[2][2]<sp/>*=<sp/>-1.0;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arParamDecompMat(cparam,<sp/>icpara,<sp/>trans)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>cv::Exception(9002,<sp/></highlight><highlight class="stringliteral">&quot;parameter<sp/>error&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MarkerDetector::argConvGLcpara2&quot;</highlight><highlight class="normal">,<sp/>__FILE__,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>j++)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p[i][j]<sp/>=<sp/>icpara[i][j]<sp/>/<sp/>icpara[2][2];</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>q[0][0]<sp/>=<sp/>(2.0<sp/>*<sp/>p[0][0]<sp/>/<sp/>width);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>q[0][1]<sp/>=<sp/>(2.0<sp/>*<sp/>p[0][1]<sp/>/<sp/>width);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>q[0][2]<sp/>=<sp/>((2.0<sp/>*<sp/>p[0][2]<sp/>/<sp/>width)<sp/>-<sp/>1.0);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>q[0][3]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>q[1][0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>q[1][1]<sp/>=<sp/>(2.0<sp/>*<sp/>p[1][1]<sp/>/<sp/>height);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>q[1][2]<sp/>=<sp/>((2.0<sp/>*<sp/>p[1][2]<sp/>/<sp/>height)<sp/>-<sp/>1.0);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>q[1][3]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>q[2][0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>q[2][1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>q[2][2]<sp/>=<sp/>(gfar<sp/>+<sp/>gnear)<sp/>/<sp/>(gfar<sp/>-<sp/>gnear);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>q[2][3]<sp/>=<sp/>-2.0<sp/>*<sp/>gfar<sp/>*<sp/>gnear<sp/>/<sp/>(gfar<sp/>-<sp/>gnear);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>q[3][0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>q[3][1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>q[3][2]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>q[3][3]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>j++)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m[i<sp/>+<sp/>j<sp/>*<sp/>4]<sp/>=<sp/>q[i][0]<sp/>*<sp/>trans[0][j]<sp/>+<sp/>q[i][1]<sp/>*<sp/>trans[1][j]<sp/>+<sp/>q[i][2]<sp/>*<sp/>trans[2][j];</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>m[i<sp/>+<sp/>3<sp/>*<sp/>4]<sp/>=<sp/>q[i][0]<sp/>*<sp/>trans[0][3]<sp/>+<sp/>q[i][1]<sp/>*<sp/>trans[1][3]<sp/>+<sp/>q[i][2]<sp/>*<sp/>trans[2][3]<sp/>+<sp/>q[i][3];</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!invert)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>m[13]<sp/>=<sp/>-m[13];</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>m[1]<sp/>=<sp/>-m[1];</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>m[5]<sp/>=<sp/>-m[5];</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>m[9]<sp/>=<sp/>-m[9];</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CameraParameters::arParamDecompMat(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacesource" kindref="compound">source</ref>[3][4],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cpara[3][4],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trans[3][4])</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r,<sp/>c;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Cpara[3][4];</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rem1,<sp/>rem2,<sp/>rem3;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacesource" kindref="compound">source</ref>[2][3]<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>3;<sp/>r++)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>4;<sp/>c++)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cpara[r][c]<sp/>=<sp/><ref refid="namespacesource" kindref="compound">source</ref>[r][c];</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>3;<sp/>r++)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>4;<sp/>c++)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cpara[r][c]<sp/>=<sp/>-(<ref refid="namespacesource" kindref="compound">source</ref>[r][c]);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>3;<sp/>r++)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>4;<sp/>c++)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cpara[r][c]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>cpara[2][2]<sp/>=<sp/>norm(Cpara[2][0],<sp/>Cpara[2][1],<sp/>Cpara[2][2]);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>trans[2][0]<sp/>=<sp/>Cpara[2][0]<sp/>/<sp/>cpara[2][2];</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>trans[2][1]<sp/>=<sp/>Cpara[2][1]<sp/>/<sp/>cpara[2][2];</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>trans[2][2]<sp/>=<sp/>Cpara[2][2]<sp/>/<sp/>cpara[2][2];</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>trans[2][3]<sp/>=<sp/>Cpara[2][3]<sp/>/<sp/>cpara[2][2];</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>cpara[1][2]<sp/>=<sp/>dot(trans[2][0],<sp/>trans[2][1],<sp/>trans[2][2],<sp/>Cpara[1][0],<sp/>Cpara[1][1],<sp/>Cpara[1][2]);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>rem1<sp/>=<sp/>Cpara[1][0]<sp/>-<sp/>cpara[1][2]<sp/>*<sp/>trans[2][0];</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>rem2<sp/>=<sp/>Cpara[1][1]<sp/>-<sp/>cpara[1][2]<sp/>*<sp/>trans[2][1];</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>rem3<sp/>=<sp/>Cpara[1][2]<sp/>-<sp/>cpara[1][2]<sp/>*<sp/>trans[2][2];</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>cpara[1][1]<sp/>=<sp/>norm(rem1,<sp/>rem2,<sp/>rem3);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>trans[1][0]<sp/>=<sp/>rem1<sp/>/<sp/>cpara[1][1];</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>trans[1][1]<sp/>=<sp/>rem2<sp/>/<sp/>cpara[1][1];</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>trans[1][2]<sp/>=<sp/>rem3<sp/>/<sp/>cpara[1][1];</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>cpara[0][2]<sp/>=<sp/>dot(trans[2][0],<sp/>trans[2][1],<sp/>trans[2][2],<sp/>Cpara[0][0],<sp/>Cpara[0][1],<sp/>Cpara[0][2]);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>cpara[0][1]<sp/>=<sp/>dot(trans[1][0],<sp/>trans[1][1],<sp/>trans[1][2],<sp/>Cpara[0][0],<sp/>Cpara[0][1],<sp/>Cpara[0][2]);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>rem1<sp/>=<sp/>Cpara[0][0]<sp/>-<sp/>cpara[0][1]<sp/>*<sp/>trans[1][0]<sp/>-<sp/>cpara[0][2]<sp/>*<sp/>trans[2][0];</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>rem2<sp/>=<sp/>Cpara[0][1]<sp/>-<sp/>cpara[0][1]<sp/>*<sp/>trans[1][1]<sp/>-<sp/>cpara[0][2]<sp/>*<sp/>trans[2][1];</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>rem3<sp/>=<sp/>Cpara[0][2]<sp/>-<sp/>cpara[0][1]<sp/>*<sp/>trans[1][2]<sp/>-<sp/>cpara[0][2]<sp/>*<sp/>trans[2][2];</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>cpara[0][0]<sp/>=<sp/>norm(rem1,<sp/>rem2,<sp/>rem3);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>trans[0][0]<sp/>=<sp/>rem1<sp/>/<sp/>cpara[0][0];</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>trans[0][1]<sp/>=<sp/>rem2<sp/>/<sp/>cpara[0][0];</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>trans[0][2]<sp/>=<sp/>rem3<sp/>/<sp/>cpara[0][0];</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>trans[1][3]<sp/>=<sp/>(Cpara[1][3]<sp/>-<sp/>cpara[1][2]<sp/>*<sp/>trans[2][3])<sp/>/<sp/>cpara[1][1];</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>trans[0][3]<sp/>=<sp/>(Cpara[0][3]<sp/>-<sp/>cpara[0][1]<sp/>*<sp/>trans[1][3]<sp/>-<sp/>cpara[0][2]<sp/>*<sp/>trans[2][3])<sp/>/<sp/>cpara[0][0];</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>3;<sp/>r++)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>3;<sp/>c++)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cpara[r][c]<sp/>/=<sp/>cpara[2][2];</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="classaruco_1_1_camera_parameters_1adb5924aaec7e149ba5ea509158663540" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_camera_parameters_1adb5924aaec7e149ba5ea509158663540" kindref="member">CameraParameters::OgreGetProjectionMatrix</ref>(cv::Size<sp/>orgImgSize,<sp/>cv::Size<sp/>size,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>proj_matrix[16],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gnear,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gfar,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>invert)</highlight></codeline>
<codeline lineno="446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>temp_matrix[16];</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>(*this).glGetProjectionMatrix(orgImgSize,<sp/>size,<sp/>temp_matrix,<sp/>gnear,<sp/>gfar,<sp/>invert);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>proj_matrix[0]<sp/>=<sp/>-temp_matrix[0];</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>proj_matrix[1]<sp/>=<sp/>-temp_matrix[4];</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>proj_matrix[2]<sp/>=<sp/>-temp_matrix[8];</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>proj_matrix[3]<sp/>=<sp/>temp_matrix[12];</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>proj_matrix[4]<sp/>=<sp/>-temp_matrix[1];</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>proj_matrix[5]<sp/>=<sp/>-temp_matrix[5];</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>proj_matrix[6]<sp/>=<sp/>-temp_matrix[9];</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>proj_matrix[7]<sp/>=<sp/>temp_matrix[13];</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>proj_matrix[8]<sp/>=<sp/>-temp_matrix[2];</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>proj_matrix[9]<sp/>=<sp/>-temp_matrix[6];</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>proj_matrix[10]<sp/>=<sp/>-temp_matrix[10];</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>proj_matrix[11]<sp/>=<sp/>temp_matrix[14];</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>proj_matrix[12]<sp/>=<sp/>-temp_matrix[3];</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>proj_matrix[13]<sp/>=<sp/>-temp_matrix[7];</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>proj_matrix[14]<sp/>=<sp/>-temp_matrix[11];</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>proj_matrix[15]<sp/>=<sp/>temp_matrix[15];</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="473" refid="classaruco_1_1_camera_parameters_1a6e57ad32936286f1ea16476e1d32cd72" refkind="member"><highlight class="normal">cv::Mat<sp/><ref refid="classaruco_1_1_camera_parameters_1a6e57ad32936286f1ea16476e1d32cd72" kindref="member">CameraParameters::getRTMatrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>R_,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>T_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>forceType)</highlight></codeline>
<codeline lineno="474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>M;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>R,<sp/>T;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>R_.copyTo(R);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>T_.copyTo(T);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(R.type()<sp/>==<sp/>CV_64F)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(T.type()<sp/>==<sp/>CV_64F);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>Matrix<sp/>=<sp/>cv::Mat::eye(4,<sp/>4,<sp/>CV_64FC1);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>R33<sp/>=<sp/>cv::Mat(Matrix,<sp/>cv::Rect(0,<sp/>0,<sp/>3,<sp/>3));</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(R.total()<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv::Rodrigues(R,<sp/>R33);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(R.total()<sp/>==<sp/>9)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv::Mat<sp/>R64;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>R.convertTo(R64,<sp/>CV_64F);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>R.copyTo(R33);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Matrix.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(i,<sp/>3)<sp/>=<sp/>T.ptr&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0)[i];</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>M<sp/>=<sp/>Matrix;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(R.depth()<sp/>==<sp/>CV_32F)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>Matrix<sp/>=<sp/>cv::Mat::eye(4,<sp/>4,<sp/>CV_32FC1);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>R33<sp/>=<sp/>cv::Mat(Matrix,<sp/>cv::Rect(0,<sp/>0,<sp/>3,<sp/>3));</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(R.total()<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv::Rodrigues(R,<sp/>R33);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(R.total()<sp/>==<sp/>9)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cv::Mat<sp/>R32;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>R.convertTo(R32,<sp/>CV_32F);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>R.copyTo(R33);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Matrix.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(i,<sp/>3)<sp/>=<sp/>T.ptr&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0)[i];</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>M<sp/>=<sp/>Matrix;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(forceType<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>M;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>MTyped;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>M.convertTo(MTyped,<sp/>forceType);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MTyped;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529" refid="namespacearuco_1aea554c19cc5919cc0838e1cedbe60a09" refkind="member"><highlight class="normal">std::ostream<sp/>&amp;<ref refid="namespacearuco_1aea554c19cc5919cc0838e1cedbe60a09" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_camera_parameters" kindref="compound">CameraParameters</ref>&amp;cp)</highlight></codeline>
<codeline lineno="530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>str<sp/>&lt;&lt;<sp/>cp.<ref refid="classaruco_1_1_camera_parameters_1a08fdd4888daf7140cf31bdd341c3f303" kindref="member">CamSize</ref>.width<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cp.<ref refid="classaruco_1_1_camera_parameters_1a08fdd4888daf7140cf31bdd341c3f303" kindref="member">CamSize</ref>.height<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cp.<ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>.total();<sp/>i++)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>cp.<ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>.ptr&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0)[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>str<sp/>&lt;&lt;<sp/>cp.<ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref>.total()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cp.<ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref>.total();<sp/>i++)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>cp.<ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref>.ptr&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0)[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cp.<ref refid="classaruco_1_1_camera_parameters_1aceb1bd577d65e459a8946e44b04e6c99" kindref="member">ExtrinsicMatrix</ref>.total();<sp/>i++)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>cp.<ref refid="classaruco_1_1_camera_parameters_1aceb1bd577d65e459a8946e44b04e6c99" kindref="member">ExtrinsicMatrix</ref>.ptr&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0)[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543" refid="namespacearuco_1a0b0389f46ca190a6e2d363db666ff8cc" refkind="member"><highlight class="normal">std::istream<sp/>&amp;<ref refid="namespacearuco_1a0b0389f46ca190a6e2d363db666ff8cc" kindref="member">operator&gt;&gt;</ref>(std::istream<sp/>&amp;str,<sp/><ref refid="classaruco_1_1_camera_parameters" kindref="compound">CameraParameters</ref>&amp;cp)</highlight></codeline>
<codeline lineno="544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>str<sp/>&gt;&gt;<sp/>cp.<ref refid="classaruco_1_1_camera_parameters_1a08fdd4888daf7140cf31bdd341c3f303" kindref="member">CamSize</ref>.width<sp/>&gt;&gt;<sp/>cp.<ref refid="classaruco_1_1_camera_parameters_1a08fdd4888daf7140cf31bdd341c3f303" kindref="member">CamSize</ref>.height;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>cp.<ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>.create(3,<sp/>3,<sp/>CV_32F);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cp.<ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>.total();<sp/>i++)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>&gt;&gt;<sp/>cp.<ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>.ptr&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0)[i];</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>str<sp/>&gt;&gt;<sp/>t;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>cp.<ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref>.create(1,<sp/>t,<sp/>CV_32F);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cp.<ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref>.total();<sp/>i++)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>&gt;&gt;<sp/>cp.<ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref>.ptr&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0)[i];</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>cp.<ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref>.create(1,<sp/>3,<sp/>CV_32F);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cp.<ref refid="classaruco_1_1_camera_parameters_1aceb1bd577d65e459a8946e44b04e6c99" kindref="member">ExtrinsicMatrix</ref>.total();<sp/>i++)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>&gt;&gt;<sp/>cp.<ref refid="classaruco_1_1_camera_parameters_1aceb1bd577d65e459a8946e44b04e6c99" kindref="member">ExtrinsicMatrix</ref>.ptr&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0)[i];</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>aruco</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="robocluedo_dependencies/aruco_ros/aruco/src/aruco/cameraparameters.cpp"/>
  </compounddef>
</doxygen>
