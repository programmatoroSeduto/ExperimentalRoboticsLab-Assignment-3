<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="md__docs_sphinx-mock" kind="page">
    <compoundname>md__docs_sphinx-mock</compoundname>
    <title>Sphinx for Py â€“ modules mocking</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>sphinx, when it finds a statement <emphasis>import something</emphasis> ... tries to import, and complains if it doesn&apos;t exists. This is a problem sometimes.</para>
<para>for avoidig such a situation, there&apos;s an extension which <emphasis>emualtes</emphasis> a library which doesn&apos;t exist.</para>
<para><programlisting filename=".note"><codeline><highlight class="normal">see<sp/>this<sp/>page<sp/>[here](https://stackoverflow.com/questions/15889621/sphinx-how-to-exclude-imports-in-automodule)</highlight></codeline>
</programlisting></para>
<sect1 id="md__docs_sphinx-mock_1autotoc_md113">
<title>sphinx configuration</title>
<para>just add this section:</para>
<para><programlisting filename=".py"><codeline><highlight class="comment">#<sp/>--<sp/>Options<sp/>for<sp/>autodoc<sp/>-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>mock<sp/>ros<sp/>and<sp/>other<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">autodoc_mock_imports<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;rospy&quot;</highlight><highlight class="normal">]</highlight></codeline>
</programlisting> </para>
</sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
