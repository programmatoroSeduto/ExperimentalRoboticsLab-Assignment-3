<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="marker_8cpp" kind="file" language="C++">
    <compoundname>marker.cpp</compoundname>
    <includes refid="marker_8h" local="yes">marker.h</includes>
    <includes local="no">opencv2/calib3d.hpp</includes>
    <includes local="no">opencv2/imgproc.hpp</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">math.h</includes>
    <includes refid="cameraparameters_8h" local="yes">cameraparameters.h</includes>
    <incdepgraph>
      <node id="5">
        <label>cstdint</label>
      </node>
      <node id="14">
        <label>stdexcept</label>
      </node>
      <node id="9">
        <label>opencv2/imgproc.hpp</label>
      </node>
      <node id="13">
        <label>string</label>
      </node>
      <node id="8">
        <label>opencv2/calib3d.hpp</label>
      </node>
      <node id="10">
        <label>cstdio</label>
      </node>
      <node id="3">
        <label>aruco_export.h</label>
        <link refid="aruco__export_8h"/>
      </node>
      <node id="12">
        <label>cameraparameters.h</label>
        <link refid="cameraparameters_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>opencv2/core.hpp</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
      <node id="11">
        <label>math.h</label>
      </node>
      <node id="2">
        <label>marker.h</label>
        <link refid="marker_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="1">
        <label>robocluedo_dependencies/aruco_ros/aruco/src/aruco/marker.cpp</label>
        <link refid="marker_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacearuco">aruco</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="marker_8cpp_1a525335710b53cb064ca56b936120431e" prot="public" static="no">
        <name>_USE_MATH_DEFINES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copyright 2017 Rafael Mu単oz Salinas. All rights reserved.</para>
<para>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</para>
<para><orderedlist>
<listitem><para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para>
</listitem><listitem><para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para>
</listitem></orderedlist>
</para>
<para>THIS SOFTWARE IS PROVIDED BY Rafael Mu単oz Salinas &apos;&apos;AS IS&apos;&apos; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Rafael Mu単oz Salinas OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</para>
<para>The views and conclusions contained in the software and documentation are those of the authors and should not be interpreted as representing official policies, either expressed or implied, of Rafael Mu単oz Salinas. <xrefsect id="todo_1_todo000008"><xreftitle>Todo</xreftitle><xrefdescription><para>set this definition in the cmake code </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/aruco_ros/aruco/src/aruco/marker.cpp" line="32" column="9" bodyfile="robocluedo_dependencies/aruco_ros/aruco/src/aruco/marker.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="29"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="marker_8h" kindref="compound">marker.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="marker_8cpp_1a525335710b53cb064ca56b936120431e" refkind="member"><highlight class="preprocessor">#define<sp/>_USE_MATH_DEFINES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/calib3d.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/imgproc.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cameraparameters_8h" kindref="compound">cameraparameters.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacearuco" kindref="compound">aruco</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classaruco_1_1_marker_1ae5a160d0a29fa70fc756244eacdbe358" refkind="member"><highlight class="normal"><ref refid="classaruco_1_1_marker_1ae5a160d0a29fa70fc756244eacdbe358" kindref="member">Marker::Marker</ref>()</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_1ac5df65736cc539e78d6620307739b5b1" kindref="member">ssize</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_1a5f31be5060bf2a6762890a1a54c98cfd" kindref="member">Rvec</ref>.create(3,<sp/>1,<sp/>CV_32FC1);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.create(3,<sp/>1,<sp/>CV_32FC1);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(i,<sp/>0)<sp/>=<sp/><ref refid="classaruco_1_1_marker_1a5f31be5060bf2a6762890a1a54c98cfd" kindref="member">Rvec</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(i,<sp/>0)<sp/>=<sp/>-999999;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classaruco_1_1_marker_1ac6031d289ea9164b9c8a5212cff82b37" refkind="member"><highlight class="normal"><ref refid="classaruco_1_1_marker_1ae5a160d0a29fa70fc756244eacdbe358" kindref="member">Marker::Marker</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>_id;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_1ac5df65736cc539e78d6620307739b5b1" kindref="member">ssize</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_1a5f31be5060bf2a6762890a1a54c98cfd" kindref="member">Rvec</ref>.create(3,<sp/>1,<sp/>CV_32FC1);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.create(3,<sp/>1,<sp/>CV_32FC1);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(i,<sp/>0)<sp/>=<sp/><ref refid="classaruco_1_1_marker_1a5f31be5060bf2a6762890a1a54c98cfd" kindref="member">Rvec</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(i,<sp/>0)<sp/>=<sp/>-999999;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classaruco_1_1_marker_1af4d016dd025e178046d7726149f42370" refkind="member"><highlight class="normal"><ref refid="classaruco_1_1_marker_1ae5a160d0a29fa70fc756244eacdbe358" kindref="member">Marker::Marker</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_marker" kindref="compound">Marker</ref>&amp;<sp/>M)<sp/>:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;cv::Point2f&gt;(M)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>M.<ref refid="classaruco_1_1_marker_1aa0b81a14041b028f8bc4d03a1f874d08" kindref="member">copyTo</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classaruco_1_1_marker_1a958371b4fae2ebd37cbced46aec53c4b" refkind="member"><highlight class="normal"><ref refid="classaruco_1_1_marker_1ae5a160d0a29fa70fc756244eacdbe358" kindref="member">Marker::Marker</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;cv::Point2f&gt;&amp;<sp/>corners,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id)<sp/>:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;cv::Point2f&gt;(corners)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>_id;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_1ac5df65736cc539e78d6620307739b5b1" kindref="member">ssize</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_1a5f31be5060bf2a6762890a1a54c98cfd" kindref="member">Rvec</ref>.create(3,<sp/>1,<sp/>CV_32FC1);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.create(3,<sp/>1,<sp/>CV_32FC1);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(i,<sp/>0)<sp/>=<sp/><ref refid="classaruco_1_1_marker_1a5f31be5060bf2a6762890a1a54c98cfd" kindref="member">Rvec</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(i,<sp/>0)<sp/>=<sp/>-999999;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classaruco_1_1_marker_1aa0b81a14041b028f8bc4d03a1f874d08" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_marker_1aa0b81a14041b028f8bc4d03a1f874d08" kindref="member">Marker::copyTo</ref>(<ref refid="classaruco_1_1_marker" kindref="compound">Marker</ref><sp/>&amp;m)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="94"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>m.<ref refid="classaruco_1_1_marker_1a7cedb2c6fd80e1b80ca717e97ce81d65" kindref="member">id</ref><sp/>=<sp/><ref refid="classaruco_1_1_marker_1a7cedb2c6fd80e1b80ca717e97ce81d65" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>the<sp/>markers<sp/>sides<sp/>in<sp/>meters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>m.<ref refid="classaruco_1_1_marker_1ac5df65736cc539e78d6620307739b5b1" kindref="member">ssize</ref><sp/>=<sp/><ref refid="classaruco_1_1_marker_1ac5df65736cc539e78d6620307739b5b1" kindref="member">ssize</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>matrices<sp/>of<sp/>rotation<sp/>and<sp/>translation<sp/>respect<sp/>to<sp/>the<sp/>camera</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_1a5f31be5060bf2a6762890a1a54c98cfd" kindref="member">Rvec</ref>.copyTo(m.<ref refid="classaruco_1_1_marker_1a5f31be5060bf2a6762890a1a54c98cfd" kindref="member">Rvec</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.copyTo(m.<ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>m.resize(size());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size();<sp/>i++)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>m.at(i)<sp/>=<sp/>at(i);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>m.<ref refid="classaruco_1_1_marker_1a6d19e3b4e3276fa51989f706ffd93b9f" kindref="member">dict_info</ref><sp/>=<sp/><ref refid="classaruco_1_1_marker_1a6d19e3b4e3276fa51989f706ffd93b9f" kindref="member">dict_info</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classaruco_1_1_marker_1a46e8fb4badf24863a925cd2bf852c818" refkind="member"><highlight class="normal"><ref refid="classaruco_1_1_marker" kindref="compound">Marker</ref><sp/>&amp;<sp/><ref refid="classaruco_1_1_marker_1a46e8fb4badf24863a925cd2bf852c818" kindref="member">Marker::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_marker" kindref="compound">Marker</ref>&amp;<sp/>m)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>m.<ref refid="classaruco_1_1_marker_1aa0b81a14041b028f8bc4d03a1f874d08" kindref="member">copyTo</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classaruco_1_1_marker_1a587d503fbd39a98a6ab8f4abe66d89fd" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_marker_1a587d503fbd39a98a6ab8f4abe66d89fd" kindref="member">Marker::glGetModelViewMatrix</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>modelview_matrix[16])</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>parameters<sp/>are<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>invalid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3<sp/>&amp;&amp;<sp/>!invalid;<sp/>i++)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(i,<sp/>0)<sp/>!=<sp/>-999999)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>invalid<sp/>|=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classaruco_1_1_marker_1a5f31be5060bf2a6762890a1a54c98cfd" kindref="member">Rvec</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(i,<sp/>0)<sp/>!=<sp/>-999999)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>invalid<sp/>|=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(invalid)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>cv::Exception(9003,<sp/></highlight><highlight class="stringliteral">&quot;extrinsic<sp/>parameters<sp/>are<sp/>not<sp/>set&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Marker::getModelViewMatrix&quot;</highlight><highlight class="normal">,<sp/>__FILE__,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>__LINE__);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>Rot(3,<sp/>3,<sp/>CV_32FC1),<sp/>Jacob;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>cv::Rodrigues(<ref refid="classaruco_1_1_marker_1a5f31be5060bf2a6762890a1a54c98cfd" kindref="member">Rvec</ref>,<sp/>Rot,<sp/>Jacob);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>para[3][4];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>j++)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>para[i][j]<sp/>=<sp/>Rot.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(i,<sp/>j);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now,<sp/>add<sp/>the<sp/>translation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>para[0][3]<sp/>=<sp/><ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0,<sp/>0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>para[1][3]<sp/>=<sp/><ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(1,<sp/>0);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>para[2][3]<sp/>=<sp/><ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(2,<sp/>0);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>modelview_matrix[0<sp/>+<sp/>0<sp/>*<sp/>4]<sp/>=<sp/>para[0][0];</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>R1C2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>modelview_matrix[0<sp/>+<sp/>1<sp/>*<sp/>4]<sp/>=<sp/>para[0][1];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>modelview_matrix[0<sp/>+<sp/>2<sp/>*<sp/>4]<sp/>=<sp/>para[0][2];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>modelview_matrix[0<sp/>+<sp/>3<sp/>*<sp/>4]<sp/>=<sp/>para[0][3];</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>R2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>modelview_matrix[1<sp/>+<sp/>0<sp/>*<sp/>4]<sp/>=<sp/>para[1][0];</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>modelview_matrix[1<sp/>+<sp/>1<sp/>*<sp/>4]<sp/>=<sp/>para[1][1];</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>modelview_matrix[1<sp/>+<sp/>2<sp/>*<sp/>4]<sp/>=<sp/>para[1][2];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>modelview_matrix[1<sp/>+<sp/>3<sp/>*<sp/>4]<sp/>=<sp/>para[1][3];</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>R3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>modelview_matrix[2<sp/>+<sp/>0<sp/>*<sp/>4]<sp/>=<sp/>-para[2][0];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>modelview_matrix[2<sp/>+<sp/>1<sp/>*<sp/>4]<sp/>=<sp/>-para[2][1];</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>modelview_matrix[2<sp/>+<sp/>2<sp/>*<sp/>4]<sp/>=<sp/>-para[2][2];</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>modelview_matrix[2<sp/>+<sp/>3<sp/>*<sp/>4]<sp/>=<sp/>-para[2][3];</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>modelview_matrix[3<sp/>+<sp/>0<sp/>*<sp/>4]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>modelview_matrix[3<sp/>+<sp/>1<sp/>*<sp/>4]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>modelview_matrix[3<sp/>+<sp/>2<sp/>*<sp/>4]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>modelview_matrix[3<sp/>+<sp/>3<sp/>*<sp/>4]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale<sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>modelview_matrix[12]<sp/>*=<sp/>scale;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>modelview_matrix[13]<sp/>*=<sp/>scale;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>modelview_matrix[14]<sp/>*=<sp/>scale;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="classaruco_1_1_marker_1a468cf05d41362659fa682919744fb035" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_marker_1a468cf05d41362659fa682919744fb035" kindref="member">Marker::OgreGetPoseParameters</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>position[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>orientation[4])</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>parameters<sp/>are<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>invalid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3<sp/>&amp;&amp;<sp/>!invalid;<sp/>i++)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(i,<sp/>0)<sp/>!=<sp/>-999999)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>invalid<sp/>|=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classaruco_1_1_marker_1a5f31be5060bf2a6762890a1a54c98cfd" kindref="member">Rvec</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(i,<sp/>0)<sp/>!=<sp/>-999999)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>invalid<sp/>|=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(invalid)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>cv::Exception(9003,<sp/></highlight><highlight class="stringliteral">&quot;extrinsic<sp/>parameters<sp/>are<sp/>not<sp/>set&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Marker::getModelViewMatrix&quot;</highlight><highlight class="normal">,<sp/>__FILE__,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>__LINE__);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>position<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>position[0]<sp/>=<sp/>-<ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.ptr&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0)[0];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>position[1]<sp/>=<sp/>-<ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.ptr&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0)[1];</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>position[2]<sp/>=<sp/>+<ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.ptr&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0)[2];</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>calculate<sp/>orientation<sp/>quaternion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>Rot(3,<sp/>3,<sp/>CV_32FC1);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>cv::Rodrigues(<ref refid="classaruco_1_1_marker_1a5f31be5060bf2a6762890a1a54c98cfd" kindref="member">Rvec</ref>,<sp/>Rot);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>axes<sp/>for<sp/>quaternion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stAxes[3][3];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>stAxes[0][0]<sp/>=<sp/>-Rot.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0,<sp/>0);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>stAxes[0][1]<sp/>=<sp/>-Rot.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(1,<sp/>0);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>stAxes[0][2]<sp/>=<sp/>+Rot.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(2,<sp/>0);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>y<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>stAxes[1][0]<sp/>=<sp/>-Rot.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0,<sp/>1);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>stAxes[1][1]<sp/>=<sp/>-Rot.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(1,<sp/>1);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>stAxes[1][2]<sp/>=<sp/>+Rot.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(2,<sp/>1);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>z<sp/>axis,<sp/>we<sp/>use<sp/>cross<sp/>product</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>stAxes[2][0]<sp/>=<sp/>stAxes[0][1]<sp/>*<sp/>stAxes[1][2]<sp/>-<sp/>stAxes[0][2]<sp/>*<sp/>stAxes[1][1];</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>stAxes[2][1]<sp/>=<sp/>-stAxes[0][0]<sp/>*<sp/>stAxes[1][2]<sp/>+<sp/>stAxes[0][2]<sp/>*<sp/>stAxes[1][0];</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>stAxes[2][2]<sp/>=<sp/>stAxes[0][0]<sp/>*<sp/>stAxes[1][1]<sp/>-<sp/>stAxes[0][1]<sp/>*<sp/>stAxes[1][0];</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>transposed<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>axes[3][3];</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>axes[0][0]<sp/>=<sp/>stAxes[0][0];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>axes[1][0]<sp/>=<sp/>stAxes[0][1];</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>axes[2][0]<sp/>=<sp/>stAxes[0][2];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>axes[0][1]<sp/>=<sp/>stAxes[1][0];</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>axes[1][1]<sp/>=<sp/>stAxes[1][1];</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>axes[2][1]<sp/>=<sp/>stAxes[1][2];</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>axes[0][2]<sp/>=<sp/>stAxes[2][0];</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>axes[1][2]<sp/>=<sp/>stAxes[2][1];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>axes[2][2]<sp/>=<sp/>stAxes[2][2];</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Algorithm<sp/>in<sp/>Ken<sp/>Shoemake&apos;s<sp/>article<sp/>in<sp/>1987<sp/>SIGGRAPH<sp/>course<sp/>notes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>article<sp/>&quot;Quaternion<sp/>Calculus<sp/>and<sp/>Fast<sp/>Animation&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fTrace<sp/>=<sp/>axes[0][0]<sp/>+<sp/>axes[1][1]<sp/>+<sp/>axes[2][2];</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fRoot;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fTrace<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>|w|<sp/>&gt;<sp/>1/2,<sp/>may<sp/>as<sp/>well<sp/>choose<sp/>w<sp/>&gt;<sp/>1/2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>fRoot<sp/>=<sp/>sqrt(fTrace<sp/>+<sp/>1.0);<sp/></highlight><highlight class="comment">//<sp/>2w</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>orientation[0]<sp/>=<sp/>0.5<sp/>*<sp/>fRoot;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>fRoot<sp/>=<sp/>0.5<sp/>/<sp/>fRoot;<sp/></highlight><highlight class="comment">//<sp/>1/(4w)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>orientation[1]<sp/>=<sp/>(axes[2][1]<sp/>-<sp/>axes[1][2])<sp/>*<sp/>fRoot;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>orientation[2]<sp/>=<sp/>(axes[0][2]<sp/>-<sp/>axes[2][0])<sp/>*<sp/>fRoot;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>orientation[3]<sp/>=<sp/>(axes[1][0]<sp/>-<sp/>axes[0][1])<sp/>*<sp/>fRoot;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>|w|<sp/>&lt;=<sp/>1/2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s_iNext[3]<sp/>=<sp/>{1,<sp/>2,<sp/>0};</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(axes[1][1]<sp/>&gt;<sp/>axes[0][0])</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(axes[2][2]<sp/>&gt;<sp/>axes[i][i])</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>s_iNext[i];</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>s_iNext[j];</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>fRoot<sp/>=<sp/>sqrt(axes[i][i]<sp/>-<sp/>axes[j][j]<sp/>-<sp/>axes[k][k]<sp/>+<sp/>1.0);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>apkQuat[3]<sp/>=<sp/>{&amp;orientation[1],<sp/>&amp;orientation[2],<sp/>&amp;orientation[3]};</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>*apkQuat[i]<sp/>=<sp/>0.5<sp/>*<sp/>fRoot;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>fRoot<sp/>=<sp/>0.5<sp/>/<sp/>fRoot;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>orientation[0]<sp/>=<sp/>(axes[k][j]<sp/>-<sp/>axes[j][k])<sp/>*<sp/>fRoot;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>*apkQuat[j]<sp/>=<sp/>(axes[j][i]<sp/>+<sp/>axes[i][j])<sp/>*<sp/>fRoot;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>*apkQuat[k]<sp/>=<sp/>(axes[k][i]<sp/>+<sp/>axes[i][k])<sp/>*<sp/>fRoot;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="classaruco_1_1_marker_1aca4260c8272571fdad613cf3a0ddf8c9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_marker_1aca4260c8272571fdad613cf3a0ddf8c9" kindref="member">Marker::draw</ref>(cv::Mat&amp;<sp/>in,<sp/>cv::Scalar<sp/>color,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineWidth,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>writeId,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>writeInfo)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="276"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size()<sp/>!=<sp/>4)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lineWidth<sp/>==<sp/>-1)<sp/></highlight><highlight class="comment">//<sp/>auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>lineWidth<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::max(1.f,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(in.cols)<sp/>/<sp/>1000.f));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>cv::line(in,<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[0],<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[1],<sp/>color,<sp/>lineWidth);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>cv::line(in,<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[1],<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[2],<sp/>color,<sp/>lineWidth);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>cv::line(in,<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[2],<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[3],<sp/>color,<sp/>lineWidth);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>cv::line(in,<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[3],<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[0],<sp/>color,<sp/>lineWidth);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>auto<sp/>p2<sp/>=<sp/>cv::Point2f(2.f<sp/>*<sp/>static_cast&lt;float&gt;(lineWidth),<sp/>2.f<sp/>*<sp/>static_cast&lt;float&gt;(lineWidth));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>cv::rectangle(in,<sp/>(*this)[0]<sp/>-<sp/>p2,<sp/>(*this)[0]<sp/>+<sp/>p2,<sp/>cv::Scalar(0,<sp/>0,<sp/>255,<sp/>255),<sp/>-1,<sp/>CV_AA);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>cv::rectangle(in,<sp/>(*this)[1]<sp/>-<sp/>p2,<sp/>(*this)[1]<sp/>+<sp/>p2,<sp/>cv::Scalar(0,<sp/>255,<sp/>0,<sp/>255),<sp/>lineWidth,<sp/>CV_AA);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>cv::rectangle(in,<sp/>(*this)[2]<sp/>-<sp/>p2,<sp/>(*this)[2]<sp/>+<sp/>p2,<sp/>cv::Scalar(255,<sp/>0,<sp/>0,<sp/>255),<sp/>lineWidth,<sp/>CV_AA);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writeId)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>the<sp/>centroid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Point<sp/>cent(0,<sp/>0);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cent.x<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((*this)[i].x);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cent.y<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((*this)[i].y);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>cent.x<sp/>/=<sp/>4;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>cent.y<sp/>/=<sp/>4;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writeInfo)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/><ref refid="classaruco_1_1_marker_1a6d19e3b4e3276fa51989f706ffd93b9f" kindref="member">dict_info</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writeId)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/>std::to_string(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::putText(in,<sp/>str,<sp/>cent,<sp/>cv::FONT_HERSHEY_SIMPLEX,<sp/>std::max(0.5f,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(lineWidth)<sp/>*<sp/>0.3f),</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Scalar(255<sp/>-<sp/>color[0],<sp/>255<sp/>-<sp/>color[1],<sp/>255<sp/>-<sp/>color[2],<sp/>255),<sp/>std::max(lineWidth,<sp/>2));</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="classaruco_1_1_marker_1a923d66443016c7cb73164f0ef97202d5" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_marker_1a923d66443016c7cb73164f0ef97202d5" kindref="member">Marker::calculateExtrinsics</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>markerSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_camera_parameters" kindref="compound">CameraParameters</ref>&amp;<sp/>CP,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setYPerpendicular)</highlight></codeline>
<codeline lineno="315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CP.<ref refid="classaruco_1_1_camera_parameters_1ab5ff265805e264fb13f119b97e0597f7" kindref="member">isValid</ref>())</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>cv::Exception(9004,<sp/></highlight><highlight class="stringliteral">&quot;!CP.isValid():<sp/>invalid<sp/>camera<sp/>parameters.<sp/>It<sp/>is<sp/>not<sp/>possible<sp/>to<sp/>calculate<sp/>extrinsics&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;calculateExtrinsics&quot;</highlight><highlight class="normal">,<sp/>__FILE__,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_1a923d66443016c7cb73164f0ef97202d5" kindref="member">calculateExtrinsics</ref>(markerSize,<sp/>CP.<ref refid="classaruco_1_1_camera_parameters_1a5210f7dd5f0f4f0fea728357005d6bcd" kindref="member">CameraMatrix</ref>,<sp/>CP.<ref refid="classaruco_1_1_camera_parameters_1a33a5ab0b2f00a4753a2fda307e24360a" kindref="member">Distorsion</ref>,<sp/>CP.<ref refid="classaruco_1_1_camera_parameters_1aceb1bd577d65e459a8946e44b04e6c99" kindref="member">ExtrinsicMatrix</ref>,<sp/>setYPerpendicular);</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="namespacearuco_1a2b40362ac4f2994c0e05ca7bcb0e93f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacearuco_1a2b40362ac4f2994c0e05ca7bcb0e93f0" kindref="member">print</ref>(cv::Point3f<sp/>p,<sp/>std::string<sp/>cad)</highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>cad<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>p.x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>p.y<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>p.z<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="classaruco_1_1_marker_1ae79bee2e9a3cf6ae8703176154ca5610" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_marker_1a923d66443016c7cb73164f0ef97202d5" kindref="member">Marker::calculateExtrinsics</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>markerSizeMeters,<sp/>cv::Mat<sp/>camMatrix,<sp/>cv::Mat<sp/>distCoeff,<sp/>cv::Mat<sp/>Extrinsics,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setYPerpendicular,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>correctFisheye)</highlight></codeline>
<codeline lineno="330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classaruco_1_1_marker_1aa546c0b79bf647c18b394be6743e235b" kindref="member">isValid</ref>())</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>cv::Exception(9004,<sp/></highlight><highlight class="stringliteral">&quot;!isValid():<sp/>invalid<sp/>marker.<sp/>It<sp/>is<sp/>not<sp/>possible<sp/>to<sp/>calculate<sp/>extrinsics&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;calculateExtrinsics&quot;</highlight><highlight class="normal">,<sp/>__FILE__,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(markerSizeMeters<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>cv::Exception(9004,<sp/></highlight><highlight class="stringliteral">&quot;markerSize&lt;=0:<sp/>invalid<sp/>markerSize&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;calculateExtrinsics&quot;</highlight><highlight class="normal">,<sp/>__FILE__,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(camMatrix.rows<sp/>==<sp/>0<sp/>||<sp/>camMatrix.cols<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>cv::Exception(9004,<sp/></highlight><highlight class="stringliteral">&quot;CameraMatrix<sp/>is<sp/>empty&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;calculateExtrinsics&quot;</highlight><highlight class="normal">,<sp/>__FILE__,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>std::vector&lt;cv::Point3f&gt;<sp/>objpoints<sp/>=<sp/><ref refid="classaruco_1_1_marker_1a047a6cfac4e5bbca087273618ac1fd52" kindref="member">get3DPoints</ref>(markerSizeMeters);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>raux,<sp/>taux;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(correctFisheye)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;cv::Point2f&gt;<sp/>undistorted;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::fisheye::undistortPoints(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>undistorted,<sp/>camMatrix,<sp/>distCoeff);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacearuco_1a8bdf5564fc70b773ac326d5afa004b47" kindref="member">cv::solvePnP</ref>(objpoints,<sp/>undistorted,<sp/>cv::Mat::eye(camMatrix.size(),<sp/>camMatrix.type()),<sp/>cv::Mat::zeros(distCoeff.size(),<sp/>distCoeff.type()),<sp/>raux,<sp/>taux);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacearuco_1a8bdf5564fc70b773ac326d5afa004b47" kindref="member">cv::solvePnP</ref>(objpoints,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>camMatrix,<sp/>distCoeff,<sp/>raux,<sp/>taux);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>raux.convertTo(<ref refid="classaruco_1_1_marker_1a5f31be5060bf2a6762890a1a54c98cfd" kindref="member">Rvec</ref>,<sp/>CV_32F);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>taux.convertTo(<ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>,<sp/>CV_32F);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tx<sp/>=<sp/>-1<sp/>*<sp/>(Extrinsics.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,0)<sp/>/<sp/>camMatrix.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0,0));</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0)<sp/>+=<sp/>tx;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ty<sp/>=<sp/>-1<sp/>*<sp/>(Extrinsics.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,1)<sp/>/<sp/>camMatrix.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(1,1));</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(1)<sp/>+=<sp/>ty;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tz<sp/>=<sp/>-1<sp/>*<sp/>(Extrinsics.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(0,2)<sp/>/<sp/>camMatrix.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(2,2));</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(2)<sp/>+=<sp/>tz;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rotate<sp/>the<sp/>X<sp/>axis<sp/>so<sp/>that<sp/>Y<sp/>is<sp/>perpendicular<sp/>to<sp/>the<sp/>marker<sp/>plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setYPerpendicular)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>rotateXAxis(<ref refid="classaruco_1_1_marker_1a5f31be5060bf2a6762890a1a54c98cfd" kindref="member">Rvec</ref>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_1ac5df65736cc539e78d6620307739b5b1" kindref="member">ssize</ref><sp/>=<sp/>markerSizeMeters;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>cout<sp/>&lt;&lt;<sp/>(*this)<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="classaruco_1_1_marker_1a59d366161f68158ffc67ebc4af99628a" refkind="member"><highlight class="normal">std::vector&lt;cv::Point3f&gt;<sp/><ref refid="classaruco_1_1_marker_1a047a6cfac4e5bbca087273618ac1fd52" kindref="member">Marker::get3DPoints</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>msize)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>halfSize<sp/>=<sp/>msize<sp/>/<sp/>2.f;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::vector&lt;cv::Point3f&gt;<sp/>res(4);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>res[0]<sp/>=<sp/>cv::Point3f(-halfSize,<sp/>halfSize,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>res[1]<sp/>=<sp/>cv::Point3f(halfSize,<sp/>halfSize,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>res[2]<sp/>=<sp/>cv::Point3f(halfSize,<sp/>-halfSize,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>res[3]<sp/>=<sp/>cv::Point3f(-halfSize,<sp/>-halfSize,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>res;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>{<sp/>cv::Point3f(-halfSize,<sp/>halfSize,<sp/>0),cv::Point3f(halfSize,<sp/>halfSize,<sp/>0),cv::Point3f(halfSize,-halfSize,<sp/>0),cv::Point3f(-halfSize,<sp/>-halfSize,<sp/>0)};</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Marker::rotateXAxis(cv::Mat&amp;<sp/>rotation)</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>R(3,<sp/>3,<sp/>CV_32F);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>cv::Rodrigues(rotation,<sp/>R);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>rotation<sp/>matrix<sp/>for<sp/>x<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>cv::Mat<sp/>RX<sp/>=<sp/>cv::Mat::eye(3,<sp/>3,<sp/>CV_32F);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angleRad<sp/>=<sp/>3.14159265359f<sp/>/<sp/>2.f;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>RX.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(1,<sp/>1)<sp/>=<sp/>cos(angleRad);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>RX.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(1,<sp/>2)<sp/>=<sp/>-sin(angleRad);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>RX.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(2,<sp/>1)<sp/>=<sp/>sin(angleRad);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>RX.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(2,<sp/>2)<sp/>=<sp/>cos(angleRad);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>multiply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>R<sp/>=<sp/>R<sp/>*<sp/>RX;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>finally,<sp/>get<sp/>the<sp/>Rodrigues<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>Rodrigues(R,<sp/>rotation);</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="classaruco_1_1_marker_1a324d8c284b80a4c94fa18b16d0900fa4" refkind="member"><highlight class="normal">cv::Point2f<sp/><ref refid="classaruco_1_1_marker_1a324d8c284b80a4c94fa18b16d0900fa4" kindref="member">Marker::getCenter</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="404"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>cv::Point2f<sp/>cent(0,<sp/>0);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size();<sp/>i++)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>cent.x<sp/>+=<sp/>(*this)[i].x;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>cent.y<sp/>+=<sp/>(*this)[i].y;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>cent.x<sp/>/=<sp/>float(size());</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>cent.y<sp/>/=<sp/>float(size());</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cent;</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="classaruco_1_1_marker_1aa28b6511217b98086f88d8a2c4e2cab7" refkind="member"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_marker_1aa28b6511217b98086f88d8a2c4e2cab7" kindref="member">Marker::getArea</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="419"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>assert(size()<sp/>==<sp/>4);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>the<sp/>cross<sp/>products</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>cv::Point2f<sp/>v01<sp/>=<sp/>(*this)[1]<sp/>-<sp/>(*this)[0];</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>cv::Point2f<sp/>v03<sp/>=<sp/>(*this)[3]<sp/>-<sp/>(*this)[0];</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>area1<sp/>=<sp/>fabs(v01.x<sp/>*<sp/>v03.y<sp/>-<sp/>v01.y<sp/>*<sp/>v03.x);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>cv::Point2f<sp/>v21<sp/>=<sp/>(*this)[1]<sp/>-<sp/>(*this)[2];</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>cv::Point2f<sp/>v23<sp/>=<sp/>(*this)[3]<sp/>-<sp/>(*this)[2];</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>area2<sp/>=<sp/>fabs(v21.x<sp/>*<sp/>v23.y<sp/>-<sp/>v21.y<sp/>*<sp/>v23.x);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(area2<sp/>+<sp/>area1)<sp/>/<sp/>2.f;</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="classaruco_1_1_marker_1a1e7f5a64f8c3ad42e8fe0e1d007065a3" refkind="member"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_marker_1a1e7f5a64f8c3ad42e8fe0e1d007065a3" kindref="member">Marker::getPerimeter</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="434"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>assert(size()<sp/>==<sp/>4);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(norm((*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[i]<sp/>-<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[(i<sp/>+<sp/>1)<sp/>%<sp/>4]));</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum;</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">//<sp/>saves<sp/>to<sp/>a<sp/>binary<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="classaruco_1_1_marker_1ae5f72dbca67e9382842ad60342d74028" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_marker_1ae5f72dbca67e9382842ad60342d74028" kindref="member">Marker::toStream</ref>(std::ostream&amp;<sp/>str)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="444"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>assert(<ref refid="classaruco_1_1_marker_1a5f31be5060bf2a6762890a1a54c98cfd" kindref="member">Rvec</ref>.type()<sp/>==<sp/>CV_32F<sp/>&amp;&amp;<sp/><ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.type()<sp/>==<sp/>CV_32F);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>str.write((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>str.write((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;<ref refid="classaruco_1_1_marker_1ac5df65736cc539e78d6620307739b5b1" kindref="member">ssize</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classaruco_1_1_marker_1ac5df65736cc539e78d6620307739b5b1" kindref="member">ssize</ref>));</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>str.write((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="classaruco_1_1_marker_1a5f31be5060bf2a6762890a1a54c98cfd" kindref="member">Rvec</ref>.ptr&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0),<sp/>3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>str.write((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.ptr&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0),<sp/>3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>the<sp/>2D<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>uint32_t<sp/>np<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(size());</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>str.write((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;np,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(np));</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size();<sp/>i++)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>str.write((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;at(i),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cv::Point2f));</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>the<sp/>additional<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>uint32_t<sp/>s<sp/>=<sp/><ref refid="classaruco_1_1_marker_1a6d19e3b4e3276fa51989f706ffd93b9f" kindref="member">dict_info</ref>.size();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>str.write((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;s,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(s));</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>str.write((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;<ref refid="classaruco_1_1_marker_1a6d19e3b4e3276fa51989f706ffd93b9f" kindref="member">dict_info</ref>[0],<sp/><ref refid="classaruco_1_1_marker_1a6d19e3b4e3276fa51989f706ffd93b9f" kindref="member">dict_info</ref>.size());</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reads<sp/>from<sp/>a<sp/>binary<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464" refid="classaruco_1_1_marker_1a33d055b892453f1ae9f368bc3f1a7f96" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classaruco_1_1_marker_1a33d055b892453f1ae9f368bc3f1a7f96" kindref="member">Marker::fromStream</ref>(std::istream&amp;<sp/>str)</highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_1a5f31be5060bf2a6762890a1a54c98cfd" kindref="member">Rvec</ref>.create(1,<sp/>3,<sp/>CV_32F);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.create(1,<sp/>3,<sp/>CV_32F);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>str.read((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>str.read((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;<ref refid="classaruco_1_1_marker_1ac5df65736cc539e78d6620307739b5b1" kindref="member">ssize</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classaruco_1_1_marker_1ac5df65736cc539e78d6620307739b5b1" kindref="member">ssize</ref>));</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>str.read((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="classaruco_1_1_marker_1a5f31be5060bf2a6762890a1a54c98cfd" kindref="member">Rvec</ref>.ptr&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0),<sp/>3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>str.read((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="classaruco_1_1_marker_1a14068630efdf1a5f665a2dcb34e496d0" kindref="member">Tvec</ref>.ptr&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0),<sp/>3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>uint32_t<sp/>np;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>str.read((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;np,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(np));</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>resize(np);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size();<sp/>i++)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>str.read((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;(*this)[i],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cv::Point2f));</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//read<sp/>the<sp/>additional<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>uint32_t<sp/>s;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>str.read((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;s,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(s));</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><ref refid="classaruco_1_1_marker_1a6d19e3b4e3276fa51989f706ffd93b9f" kindref="member">dict_info</ref>.resize(s);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>str.read((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;<ref refid="classaruco_1_1_marker_1a6d19e3b4e3276fa51989f706ffd93b9f" kindref="member">dict_info</ref>[0],<sp/><ref refid="classaruco_1_1_marker_1a6d19e3b4e3276fa51989f706ffd93b9f" kindref="member">dict_info</ref>.size());</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>aruco</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="robocluedo_dependencies/aruco_ros/aruco/src/aruco/marker.cpp"/>
  </compounddef>
</doxygen>
