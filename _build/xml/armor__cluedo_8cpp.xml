<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="armor__cluedo_8cpp" kind="file" language="C++">
    <compoundname>armor_cluedo.cpp</compoundname>
    <includes refid="armor__cluedo_8h" local="yes">armor_tools/armor_cluedo.h</includes>
    <incdepgraph>
      <node id="3">
        <label>armor_tools/armor_tools.h</label>
        <link refid="armor__tools_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>armor_msgs/ArmorDirectiveRes.h</label>
      </node>
      <node id="12">
        <label>string</label>
      </node>
      <node id="6">
        <label>armor_msgs/ArmorDirective.h</label>
      </node>
      <node id="11">
        <label>map</label>
      </node>
      <node id="13">
        <label>fstream</label>
      </node>
      <node id="1">
        <label>robocluedo_armor/src/armor_tools/armor_cluedo.cpp</label>
        <link refid="armor__cluedo_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>armor_tools/armor_cluedo.h</label>
        <link refid="armor__cluedo_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
      <node id="4">
        <label>ros/ros.h</label>
      </node>
      <node id="7">
        <label>armor_msgs/ArmorDirectiveReq.h</label>
      </node>
      <node id="9">
        <label>iostream</label>
      </node>
      <node id="5">
        <label>armor_msgs/QueryItem.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>implementation of the class <ref refid="class_armor_cluedo" kindref="compound">ArmorCluedo</ref> </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Francesco Ganci (S4143910) </para>
</simplesect>
<simplesect kind="version"><para>v1.0</para>
</simplesect>
<simplesect kind="see"><para><ref refid="armor__cluedo_8h" kindref="compound">armor_cluedo.h</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/********************************************/</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="armor__cluedo_8h" kindref="compound">armor_tools/armor_cluedo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>default<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_armor_cluedo_1a87fe995ebd26c4618a4b962e47dd3a40" refkind="member"><highlight class="normal"><ref refid="class_armor_cluedo_1a87fe995ebd26c4618a4b962e47dd3a40" kindref="member">ArmorCluedo::ArmorCluedo</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debugmode<sp/>):<sp/><ref refid="class_armor_tools" kindref="compound">ArmorTools</ref>(<sp/>debugmode<sp/>)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_armor_cluedo_1a1a6e15d936d2d6e1279d86e5dbaa9c22" refkind="member"><highlight class="normal"><ref refid="class_armor_cluedo_1a1a6e15d936d2d6e1279d86e5dbaa9c22" kindref="member">ArmorCluedo::~ArmorCluedo</ref>(<sp/>)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>init<sp/>the<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_armor_cluedo_1a66ce2d9f5c665ab14761233b32ab1ec6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_armor_cluedo_1a66ce2d9f5c665ab14761233b32ab1ec6" kindref="member">ArmorCluedo::Init</ref>(<sp/>std::string<sp/>ontologyPath<sp/>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>connect<sp/>to<sp/>the<sp/>service</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_armor_tools_1ad98c8e33df5d1ef3e4c69051ac0dd7ab" kindref="member">ConnectAndLoad</ref>(<sp/>ontologyPath<sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>for<sp/>errors<sp/>in<sp/>the<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>this-&gt;<ref refid="class_armor_tools_1a75474b9c35cbdcfedd382939c1699247" kindref="member">GetLastErrorCode</ref>(<sp/>)<sp/>!=<sp/>0<sp/>)<sp/>||<sp/>!this-&gt;<ref refid="class_armor_tools_1a356ca7809be690be0a70a1ae33a850a8" kindref="member">TestInterface</ref>(<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="armor__tools_8h_1a07e1a753da9f7c716c4bf57d5ce2de54" kindref="member">ARMOR_ERR</ref>(<sp/></highlight><highlight class="stringliteral">&quot;in<sp/>connecting<sp/>and<sp/>loading<sp/>the<sp/>ontology.<sp/>&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>connection<sp/>successful</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>add<sp/>an<sp/>individual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="class_armor_cluedo_1ad29930fec7803aed87b7244e73b98bff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_armor_cluedo_1ad29930fec7803aed87b7244e73b98bff" kindref="member">ArmorCluedo::AddIndiv</ref>(<sp/>std::string<sp/>indivname,<sp/>std::string<sp/>classname,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>makeDisjoint<sp/>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>false<sp/>if<sp/>the<sp/>individual<sp/>is<sp/>a<sp/>discarded<sp/>hypothesis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>classname<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;HYPOTHESIS&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>this-&gt;GetPositionOf(<sp/>indivname,<sp/>DiscardHypotheses<sp/>)<sp/>!=<sp/>DiscardHypotheses.end(<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>track<sp/>the<sp/>individual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!this-&gt;TrackIndiv(<sp/>indivname<sp/>)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>the<sp/>ADD<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!this-&gt;<ref refid="class_armor_tools_1a6033ed90283ec6c78a2bc2b0106d0461" kindref="member">SendCommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;ADD&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;IND&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLASS&quot;</highlight><highlight class="normal">,<sp/>indivname,<sp/>classname<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disjoint<sp/>this<sp/>individual<sp/>from<sp/>the<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>makeDisjoint<sp/>)<sp/>DisjointAllIndiv(<sp/>indivname<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this-&gt;SendCommand(<sp/>&quot;REASON&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this-&gt;SendCommand(<sp/>&quot;DISJOINT&quot;,<sp/>&quot;IND&quot;,<sp/>&quot;CLASS&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this-&gt;SendCommand(<sp/>&quot;REASON&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>check<sp/>the<sp/>class<sp/>of<sp/>an<sp/>individual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="class_armor_cluedo_1a49216d015f97a9d510406a90e8c1fe30" refkind="member"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="class_armor_cluedo_1a49216d015f97a9d510406a90e8c1fe30" kindref="member">ArmorCluedo::GetClassOfIndiv</ref>(<sp/>std::string<sp/>indivname,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deep<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ask<sp/>for<sp/>the<sp/>class<sp/>of<sp/>a<sp/>given<sp/>individual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!this-&gt;<ref refid="class_armor_tools_1a6033ed90283ec6c78a2bc2b0106d0461" kindref="member">SendCommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;QUERY&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLASS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;IND&quot;</highlight><highlight class="normal">,<sp/>indivname,<sp/><ref refid="armor__tools_8h_1af4f289b8ad162b609975620166e3d407" kindref="member">SS</ref>(<sp/>deep?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="armor__tools_8h_1a07e1a753da9f7c716c4bf57d5ce2de54" kindref="member">ARMOR_ERR</ref>(<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>find<sp/>the<sp/>classes<sp/>of<sp/>the<sp/>individual<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>indivname<sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filter<sp/>the<sp/>response<sp/>and<sp/>return<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_armor_cluedo_1a76a60417cfc01397a6db462904139873" kindref="member">FilterVector</ref>(<sp/>this-&gt;<ref refid="class_armor_tools_1a34d27d93c2faec3d3de3ba24d08f436b" kindref="member">GetLastRes</ref>(<sp/>).queried_objects<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>individuals<sp/>belonging<sp/>to<sp/>a<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="class_armor_cluedo_1afef8229a755f495f008bfe4630a745fa" refkind="member"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="class_armor_cluedo_1afef8229a755f495f008bfe4630a745fa" kindref="member">ArmorCluedo::GetIndivOfClass</ref>(<sp/>std::string<sp/>classname<sp/>)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!this-&gt;<ref refid="class_armor_tools_1a6033ed90283ec6c78a2bc2b0106d0461" kindref="member">SendCommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;QUERY&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;IND&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLASS&quot;</highlight><highlight class="normal">,<sp/>classname<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="armor__tools_8h_1a07e1a753da9f7c716c4bf57d5ce2de54" kindref="member">ARMOR_ERR</ref>(<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>find<sp/>the<sp/>individuals<sp/>inside<sp/>the<sp/>class<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>classname<sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filter<sp/>the<sp/>response<sp/>and<sp/>return<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_armor_cluedo_1a76a60417cfc01397a6db462904139873" kindref="member">FilterVector</ref>(<sp/>this-&gt;<ref refid="class_armor_tools_1a34d27d93c2faec3d3de3ba24d08f436b" kindref="member">GetLastRes</ref>(<sp/>).queried_objects<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>an<sp/>individual<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_armor_cluedo_1a2086082362b61607798d6f968c263f9e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_armor_cluedo_1a2086082362b61607798d6f968c263f9e" kindref="member">ArmorCluedo::ExistsIndiv</ref>(<sp/>std::string<sp/>indivname<sp/>)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_armor_tools_1a6033ed90283ec6c78a2bc2b0106d0461" kindref="member">SendCommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;QUERY&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;IND&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>indivname<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>this-&gt;<ref refid="class_armor_tools_1a34d27d93c2faec3d3de3ba24d08f436b" kindref="member">GetLastRes</ref>(<sp/>).success<sp/>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exclude<sp/>discarded<sp/>hypotheses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>this-&gt;GetPositionOf(<sp/>indivname,<sp/>DiscardHypotheses<sp/>)<sp/>!=<sp/>DiscardHypotheses.end(<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>a<sp/>property<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="class_armor_cluedo_1ad179234fd676874a09c267abb416d2da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_armor_cluedo_1ad179234fd676874a09c267abb416d2da" kindref="member">ArmorCluedo::SetObjectProperty</ref>(<sp/>std::string<sp/>prop,<sp/>std::string<sp/>Aelem,<sp/>std::string<sp/>Belem<sp/>)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>elements<sp/>must<sp/>be<sp/>added<sp/>before<sp/>calling<sp/>this<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!ExistsItem(<sp/>Aelem,<sp/>individuals<sp/>)<sp/>||<sp/>!ExistsItem(<sp/>Belem,<sp/>individuals<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>protery<sp/>true<sp/>by<sp/>a<sp/>service<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!this-&gt;<ref refid="class_armor_tools_1a6033ed90283ec6c78a2bc2b0106d0461" kindref="member">SendCommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;ADD&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;OBJECTPROP&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;IND&quot;</highlight><highlight class="normal">,<sp/>prop,<sp/>Aelem,<sp/>Belem<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="armor__tools_8h_1a07e1a753da9f7c716c4bf57d5ce2de54" kindref="member">ARMOR_ERR</ref>(<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>set<sp/>the<sp/>property<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Aelem<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Belem<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;):&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>prop<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>values<sp/>of<sp/>a<sp/>property<sp/>related<sp/>to<sp/>a<sp/>gven<sp/>individual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="class_armor_cluedo_1a580aef3f0bf9dd1affd06c588e731ff5" refkind="member"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="class_armor_cluedo_1a580aef3f0bf9dd1affd06c588e731ff5" kindref="member">ArmorCluedo::GetValuedOfIndiv</ref>(<sp/>std::string<sp/>prop,<sp/>std::string<sp/>indivname<sp/>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!this-&gt;<ref refid="class_armor_tools_1a6033ed90283ec6c78a2bc2b0106d0461" kindref="member">SendCommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;QUERY&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;OBJECTPROP&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;IND&quot;</highlight><highlight class="normal">,<sp/>prop,<sp/>indivname<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="armor__tools_8h_1a07e1a753da9f7c716c4bf57d5ce2de54" kindref="member">ARMOR_ERR</ref>(<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>find<sp/>the<sp/>values<sp/>of<sp/>the<sp/>property<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>prop<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>related<sp/>to<sp/>the<sp/>individual<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>indivname<sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filter<sp/>the<sp/>response<sp/>and<sp/>return<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_armor_cluedo_1a76a60417cfc01397a6db462904139873" kindref="member">FilterVector</ref>(<sp/>this-&gt;<ref refid="class_armor_tools_1a34d27d93c2faec3d3de3ba24d08f436b" kindref="member">GetLastRes</ref>(<sp/>).queried_objects<sp/>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/>find<sp/>all<sp/>the<sp/>complete<sp/>hypotheses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="class_armor_cluedo_1aaf1832ed634a017c48e26c48f58c5f68" refkind="member"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="class_armor_cluedo_1aaf1832ed634a017c48e26c48f58c5f68" kindref="member">ArmorCluedo::FindCompleteHypotheses</ref>(<sp/>)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>temp<sp/>=<sp/><ref refid="class_armor_cluedo_1afef8229a755f495f008bfe4630a745fa" kindref="member">GetIndivOfClass</ref>(<sp/></highlight><highlight class="stringliteral">&quot;COMPLETED&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WORKAROUND<sp/>for<sp/>issue<sp/>&quot;REMOVE<sp/>IND<sp/>CLASS&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>remove<sp/>the<sp/>discarded<sp/>hypotheses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>DiscardHypotheses.begin()<sp/>;<sp/>it<sp/>!=<sp/>DiscardHypotheses.end();<sp/>++it<sp/>)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>this-&gt;GetPositionOf(<sp/>*it,<sp/>temp<sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pos<sp/>!=<sp/>temp.end(<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.erase(<sp/>pos<sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>find<sp/>all<sp/>the<sp/>inconsistent<sp/>hypotheses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="class_armor_cluedo_1ab278ac3aaffc4c6aceaf3bfb8d5186af" refkind="member"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="class_armor_cluedo_1ab278ac3aaffc4c6aceaf3bfb8d5186af" kindref="member">ArmorCluedo::FindInconsistentHypotheses</ref>(<sp/>)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_armor_cluedo_1afef8229a755f495f008bfe4630a745fa" kindref="member">GetIndivOfClass</ref>(<sp/></highlight><highlight class="stringliteral">&quot;INCONSISTENT&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/>remove<sp/>one<sp/>hyothesis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="class_armor_cluedo_1a4ae659375e7a6d9564973718ece248e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_armor_cluedo_1a4ae659375e7a6d9564973718ece248e2" kindref="member">ArmorCluedo::RemoveHypothesis</ref>(<sp/>std::string<sp/>hypTag<sp/>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>it<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<ref refid="class_armor_cluedo_1a2086082362b61607798d6f968c263f9e" kindref="member">ExistsIndiv</ref>(<sp/>hypTag<sp/>)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sarebbe<sp/>molto<sp/>bello<sp/>...<sp/>ma<sp/>purtroppo<sp/>REMOVE<sp/>IND<sp/>CLASS<sp/>è<sp/>buggato.</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>delete<sp/>the<sp/>individual<sp/>from<sp/>all<sp/>the<sp/>classes</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>classnames<sp/>=<sp/>this-&gt;GetClassOfIndiv(<sp/>hypTag<sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/>for(<sp/>std::string<sp/>cname<sp/>:<sp/>classnames<sp/>)</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>!this-&gt;SendCommand(<sp/>&quot;REMOVE&quot;,<sp/>&quot;IND&quot;,<sp/>&quot;CLASS&quot;,<sp/>hypTag,<sp/>cname<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>hypothesis<sp/>to<sp/>the<sp/>list<sp/>of<sp/>the<sp/>discarded<sp/>hypotheses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>DiscardHypotheses.push_back(<sp/>hypTag<sp/>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>untrack<sp/>the<sp/>individual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>this-&gt;GetPositionOf(<sp/>hypTag,<sp/>individuals<sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pos<sp/>!=<sp/>individuals.end(<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>individuals.erase(<sp/>pos<sp/>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rewrite<sp/>a<sp/>string<sp/>like<sp/>&apos;&lt;uri#value&gt;&apos;<sp/>into<sp/>&apos;value&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="class_armor_cluedo_1a6f824ec2cf4759952145f7f1d11e516c" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_armor_cluedo_1a6f824ec2cf4759952145f7f1d11e516c" kindref="member">ArmorCluedo::FilterValue</ref>(<sp/>std::string<sp/>raw<sp/>)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>pos;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>pos<sp/>=<sp/>raw.find(<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>==<sp/>std::string::npos<sp/>)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>raw;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>raw.substr(<sp/>pos+1,<sp/>raw.length()-pos-2<sp/>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//<sp/>filter<sp/>all<sp/>the<sp/>strings<sp/>inside<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="class_armor_cluedo_1a76a60417cfc01397a6db462904139873" refkind="member"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="class_armor_cluedo_1a76a60417cfc01397a6db462904139873" kindref="member">ArmorCluedo::FilterVector</ref>(<sp/>std::vector&lt;std::string&gt;&amp;<sp/>itemlist<sp/>)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>returnlist;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filter<sp/>each<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>std::string<sp/>item<sp/>:<sp/>itemlist<sp/>)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnlist.push_back(<sp/>this-&gt;<ref refid="class_armor_cluedo_1a6f824ec2cf4759952145f7f1d11e516c" kindref="member">FilterValue</ref>(<sp/>item<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnlist;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>a<sp/>string<sp/>exists<sp/>in<sp/>one<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ArmorCluedo::ExistsItem(<sp/>std::string<sp/>item,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>container<sp/>)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>std::string<sp/>s<sp/>:<sp/>container<sp/>)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>s<sp/>==<sp/>item<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//<sp/>track<sp/>individual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ArmorCluedo::TrackIndiv(<sp/>std::string<sp/>indivname<sp/>)</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>the<sp/>individual<sp/>was<sp/>already<sp/>defined<sp/>in<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ExistsItem(<sp/>indivname,<sp/>this-&gt;individuals<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ARMOR_ERR(<sp/>&quot;the<sp/>individual<sp/>&quot;<sp/>&lt;&lt;<sp/>indivname<sp/>&lt;&lt;<sp/>&quot;is<sp/>already<sp/>tracked.<sp/>&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>item<sp/>to<sp/>the<sp/>list<sp/>of<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;individuals.push_back(<sp/>indivname<sp/>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/>disjoint<sp/>all<sp/>the<sp/>individuals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ArmorCluedo::DisjointAllIndiv(<sp/>std::string<sp/>from<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>from<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterative<sp/>brute<sp/>force<sp/>disjoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>std::string<sp/>s<sp/>:<sp/>this-&gt;individuals<sp/>)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;DisjointAllIndiv(<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disjoint<sp/>wrt<sp/>one<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>std::string<sp/>s<sp/>:<sp/>this-&gt;individuals<sp/>)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>s<sp/>!=<sp/>from<sp/>)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_armor_tools_1a6033ed90283ec6c78a2bc2b0106d0461" kindref="member">SendCommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;DISJOINT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;IND&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>s,<sp/>from<sp/>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//<sp/>search<sp/>for<sp/>a<sp/>specific<sp/>iterator<sp/>on<sp/>a<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>it<sp/>return<sp/>vector::end()<sp/>if<sp/>the<sp/>element<sp/>is<sp/>not<sp/>contained</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal">std::vector&lt;std::string&gt;::iterator<sp/>ArmorCluedo::GetPositionOf(<sp/>std::string<sp/>tag,<sp/>std::vector&lt;std::string&gt;&amp;<sp/>list<sp/>)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ARMOR_INFO(<sp/>&quot;[ArmorCluedo::GetPositionOf]<sp/>listsize=&quot;<sp/>&lt;&lt;<sp/>list.size()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>list.begin();<sp/>it<sp/>!=<sp/>list.end(<sp/>);<sp/>++it<sp/>)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>*it<sp/>==<sp/>tag<sp/>)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list.end(<sp/>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="robocluedo_armor/src/armor_tools/armor_cluedo.cpp"/>
  </compounddef>
</doxygen>
