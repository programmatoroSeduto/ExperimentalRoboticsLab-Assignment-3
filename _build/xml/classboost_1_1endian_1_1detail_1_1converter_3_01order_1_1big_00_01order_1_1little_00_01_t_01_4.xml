<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classboost_1_1endian_1_1detail_1_1converter_3_01order_1_1big_00_01order_1_1little_00_01_t_01_4" kind="class" language="C++" prot="public">
    <compoundname>boost::endian::detail::converter&lt; order::big, order::little, T &gt;</compoundname>
    <includes refid="conversion_8hpp" local="no">conversion.hpp</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classboost_1_1endian_1_1detail_1_1converter_3_01order_1_1big_00_01order_1_1little_00_01_t_01_4_1a0a5998d1785b02bc99974cbc8d01b35d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void boost::endian::detail::converter&lt; order::big, order::little, T &gt;::operator()</definition>
        <argsstring>(T &amp;x) BOOST_NOEXCEPT</argsstring>
        <name>operator()</name>
        <param>
          <type>T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="416" column="14" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="416" bodyend="416"/>
        <references refid="classboost_1_1endian_1_1detail_1_1converter_3_01order_1_1big_00_01order_1_1little_00_01_t_01_4_1a0a5998d1785b02bc99974cbc8d01b35d" compoundref="conversion_8hpp" startline="416" endline="416">operator()</references>
        <references refid="namespacebug__m_1af10f89c7f929c9babce108f5d7382996" compoundref="bug__m_8py" startline="50">bug_m.x</references>
        <references refid="namespaceboost_1_1endian_1a8f0cde80b0c6e1d75b7e255f9152ad0e" compoundref="conversion_8hpp" startline="364" endline="367">boost::endian::endian_reverse_inplace</references>
        <referencedby refid="classboost_1_1endian_1_1detail_1_1converter_3_01order_1_1big_00_01order_1_1little_00_01_t_01_4_1a0a5998d1785b02bc99974cbc8d01b35d" compoundref="conversion_8hpp" startline="416" endline="416">operator()</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" line="416" column="1" bodyfile="robocluedo_dependencies/vision_opencv/cv_bridge/src/boost/endian/conversion.hpp" bodystart="415" bodyend="416"/>
    <listofallmembers>
      <member refid="classboost_1_1endian_1_1detail_1_1converter_3_01order_1_1big_00_01order_1_1little_00_01_t_01_4_1a0a5998d1785b02bc99974cbc8d01b35d" prot="public" virt="non-virtual"><scope>boost::endian::detail::converter&lt; order::big, order::little, T &gt;</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
